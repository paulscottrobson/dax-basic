; ***************************************************************************************
; ***************************************************************************************
;
;		Name : 		aquarius_io.asm
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		3rd June 2022
;		Reviewed :	No
;		Purpose :	Aquarius specific code.
;
; ***************************************************************************************
; ***************************************************************************************

#ifdef AQUARIUS

; ***************************************************************************************
;
;								Initialise system stuff
;
; ***************************************************************************************

SYSInitialise:
	ld 		a,$0b 								; Aquarius clear screen
	call 	SYSPrintChar
	ret

; ***************************************************************************************
;
;								Terminate system stuff
;
; ***************************************************************************************

SYSTerminate:
	jr 		SYSTerminate

; ***************************************************************************************
;
;								Print A character
;
; ***************************************************************************************

SYSPrintChar:
	push 	af 									; we stack everything including alt registers
	push 	bc
	push 	de
	push 	hl
	push 	ix
	push 	iy
	exx
	push 	bc
	push 	de
	push 	hl
	call 	$1D94 								; the Aquarius equivalent uses alt-registers to save.
	pop 	hl
	pop 	de
	pop 	bc
	exx
	pop 	iy
	pop 	ix
	pop 	hl
	pop 	de
	pop 	bc
	pop 	af
	ret		

; ***************************************************************************************
;
;									Print Newline
;
; ***************************************************************************************

SYSPrintCRLF:
	push 	af
	ld 		a,13
	call 	SYSPrintChar
	ld 		a,10
	call 	SYSPrintChar
	pop 	af
	ret

; ***************************************************************************************
;
;									Get time into HL'HL
;
; ***************************************************************************************

SYSGetTimer:
 	in 		a,($00)
 	ld 		l,a
 	in 		a,($01)
 	ld 		h,a
 	exx
 	in 		a,($02)
 	ld 		l,a
 	in 		a,($03)
 	ld 		h,a
 	exx
	ret 	
	
#endif

; ***************************************************************************************
;
;									Changes and Updates
;
; ***************************************************************************************
;
;		Date			Notes
;		==== 			=====
;
; ***************************************************************************************
