    1 00:0000 -  -  -  -  ;
    2 00:0000 -  -  -  -  ;	Generated by makeinclude.py script
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  #include "core/expression/binary/dispatch.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/dispatch.inc"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		dispatch.inc
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Dispatchers
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  ; ***************************************************************************************
   14 00:0000 -  -  -  -  ;
   15 00:0000 -  -  -  -  ;						 Handle dispatch to integer only
   16 00:0000 -  -  -  -  ;
   17 00:0000 -  -  -  -  ; ***************************************************************************************
   18 00:0000 -  -  -  -  
   19 00:0000 -  -  -  -  #macro IntegerDispatch(iHandler)
   20 00:0000             		call 	DereferenceBoth 				; Dereference B:DE'DE and C:HL'HL
   21 00:0000             		ld 		a,b 							; Or the flags together
   22 00:0000             		or 		c
   23 00:0000             		jp 		nz,TypeMismatch 				; must both be integers
   24 00:0000             		jp 		iHandler 						; do the integer code.
   25 00:0000             #endmacro
   26 00:0000 -  -  -  -  
   27 00:0000 -  -  -  -  ; ***************************************************************************************
   28 00:0000 -  -  -  -  ;
   29 00:0000 -  -  -  -  ;									Changes and Updates
   30 00:0000 -  -  -  -  ;
   31 00:0000 -  -  -  -  ; ***************************************************************************************
   32 00:0000 -  -  -  -  ;
   33 00:0000 -  -  -  -  ;		Date			Notes
   34 00:0000 -  -  -  -  ;		==== 			=====
   35 00:0000 -  -  -  -  ;
   36 00:0000 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
    5 00:0000 -  -  -  -  #include "core/includes/constants.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/core/includes/constants.inc"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		constants.inc
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Constants
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  IDENTIFIER_END = $26 						; 00 .. 25 is an identifier
   14 00:0000 -  -  -  -  STRING_MARKER = $3F 						; marker for string.
   15 00:0000 -  -  -  -  ;
   16 00:0000 -  -  -  -  ;		Normally, type information is in C
   17 00:0000 -  -  -  -  ;				  if reference or string, then address is in (U)HL
   18 00:0000 -  -  -  -  ;				  if integer, then data (32 bit) is in HL'HL
   19 00:0000 -  -  -  -  ;
   20 00:0000 -  -  -  -  
   21 00:0000 -  -  -  -  CIsReference = 7 							; Bit 7 set if reference
   22 00:0000 -  -  -  -  CIsByteReference = 6 						; Bit 6 set if byte reference
   23 00:0000 -  -  -  -  CIsString = 0 								; Bit 0 set if data is string
   24 00:0000 -  -  -  -  
   25 00:0000 -  -  -  -  XTYPE_INTEGER = 0 							; Integer, value in HL'HL
   26 00:0000 -  -  -  -  XTYPE_STRING = 1 							; String, address in UHL
   27 00:0000 -  -  -  -  
   28 00:0000 -  -  -  -  ; ***************************************************************************************
   29 00:0000 -  -  -  -  ;
   30 00:0000 -  -  -  -  ;									Changes and Updates
   31 00:0000 -  -  -  -  ;
   32 00:0000 -  -  -  -  ; ***************************************************************************************
   33 00:0000 -  -  -  -  ;
   34 00:0000 -  -  -  -  ;		Date			Notes
   35 00:0000 -  -  -  -  ;		==== 			=====
   36 00:0000 -  -  -  -  ;
   37 00:0000 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
    6 00:0000 -  -  -  -  #include "core/includes/dispatcher.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/core/includes/dispatcher.inc"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		dispatcher.inc
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Vector dispatcher
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  ; ***************************************************************************************
   14 00:0000 -  -  -  -  ;
   15 00:0000 -  -  -  -  ;				Dispatchers - takes a vector table (2 bytes Z80,4 bytes EZ80)
   16 00:0000 -  -  -  -  ; 				reads the call address into DE/UDE. Breaks AHL.
   17 00:0000 -  -  -  -  ;
   18 00:0000 -  -  -  -  ; ***************************************************************************************
   19 00:0000 -  -  -  -  
   20 00:0000 -  -  -  -  #ifdef EZ80
   21 00:0000             
   22 00:0000             #macro 	dispatch(vtable)
   23 00:0000             		and 	$7F 						; clear bit 7.
   24 00:0000             		ld 		hl,$0000 					; put index into HL.
   25 00:0000             		ld 		l,a  						
   26 00:0000             		add 	hl,hl 						; x 2 
   27 00:0000             		add 	hl,hl
   28 00:0000             		ld 		de,vtable 					; DE now points to the vector table
   29 00:0000             		add 	hl,de 						; HL now points to the vector entry.
   30 00:0000             		ld 		de,(hl) 					; read target address into DE
   31 00:0000             		ld 		(JumpCode+1),de 			; and set up the jump vector
   32 00:0000             #endmacro
   33 00:0000             
   34 00:0000             #else
   35 00:0000 -  -  -  -  
   36 00:0000 -  -  -  -  #macro 	dispatch(vtable)
   37 00:0000             		and 	$7F 						; clear bit 7.
   38 00:0000             		ld 		hl,$0000 					; put index into HL.
   39 00:0000             		ld 		l,a  						
   40 00:0000             		add 	hl,hl 						; x 2 
   41 00:0000             		ld 		de,vtable 					; DE now points to the vector table
   42 00:0000             		add 	hl,de 						; HL now points to the vector entry.
   43 00:0000             		ld 		e,(hl) 						; read target address into DE
   44 00:0000             		inc 	hl
   45 00:0000             		ld 		d,(hl)
   46 00:0000             		ld 		(JumpCode+1),de
   47 00:0000             #endmacro
   48 00:0000 -  -  -  -  
   49 00:0000 -  -  -  -  #endif
   50 00:0000 -  -  -  -  
   51 00:0000 -  -  -  -  ; ***************************************************************************************
   52 00:0000 -  -  -  -  ;
   53 00:0000 -  -  -  -  ;									Changes and Updates
   54 00:0000 -  -  -  -  ;
   55 00:0000 -  -  -  -  ; ***************************************************************************************
   56 00:0000 -  -  -  -  ;
   57 00:0000 -  -  -  -  ;		Date			Notes
   58 00:0000 -  -  -  -  ;		==== 			=====
   59 00:0000 -  -  -  -  ;
   60 00:0000 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
    7 00:0000 -  -  -  -  #include "core/includes/macros.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/core/includes/macros.inc"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		macros.inc
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Standard macros.
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  ; ***************************************************************************************
   14 00:0000 -  -  -  -  ;
   15 00:0000 -  -  -  -  ;								Set Z flag if HL'HL zero
   16 00:0000 -  -  -  -  ;
   17 00:0000 -  -  -  -  ; ***************************************************************************************
   18 00:0000 -  -  -  -  
   19 00:0000 -  -  -  -  #macro checkzero
   20 00:0000             		ld 		a,h
   21 00:0000             		or 		l
   22 00:0000             		exx
   23 00:0000             		or 		h
   24 00:0000             		or 		l
   25 00:0000             		exx
   26 00:0000             #endmacro
   27 00:0000 -  -  -  -  
   28 00:0000 -  -  -  -  ; ***************************************************************************************
   29 00:0000 -  -  -  -  ;
   30 00:0000 -  -  -  -  ;								Indirect load of HL to HL, DE to HL
   31 00:0000 -  -  -  -  ;
   32 00:0000 -  -  -  -  ; ***************************************************************************************
   33 00:0000 -  -  -  -  
   34 00:0000 -  -  -  -  #ifdef EZ80
   35 00:0000             #macro ld_ind_hl
   36 00:0000             	ld 		hl,(hl)
   37 00:0000             #endmacro
   38 00:0000             #else
   39 00:0000 -  -  -  -  #macro ld_ind_hl
   40 00:0000             	ld 		a,(hl)
   41 00:0000             	inc 	hl
   42 00:0000             	ld 		h,(hl)
   43 00:0000             	ld 		l,a
   44 00:0000             #endmacro
   45 00:0000 -  -  -  -  #endif
   46 00:0000 -  -  -  -  
   47 00:0000 -  -  -  -  ; ***************************************************************************************
   48 00:0000 -  -  -  -  ;
   49 00:0000 -  -  -  -  ; 				Indirect store of DE to HL  and increment HL by four.
   50 00:0000 -  -  -  -  ;
   51 00:0000 -  -  -  -  ; ***************************************************************************************
   52 00:0000 -  -  -  -  
   53 00:0000 -  -  -  -  #ifdef EZ80
   54 00:0000             #macro st_de_hl_ind_incr
   55 00:0000             	ld 		(hl),de
   56 00:0000             	inc 	hl
   57 00:0000             	inc 	hl
   58 00:0000             	inc 	hl
   59 00:0000             	inc 	hl
   60 00:0000             #endmacro
   61 00:0000             #else
   62 00:0000 -  -  -  -  #macro st_de_hl_ind_incr
   63 00:0000             	ld 		(hl),e
   64 00:0000             	inc 	hl
   65 00:0000             	ld 		(hl),d
   66 00:0000             	inc 	hl
   67 00:0000             	inc 	hl
   68 00:0000             	inc 	hl
   69 00:0000             #endmacro
   70 00:0000 -  -  -  -  #endif
   71 00:0000 -  -  -  -  
   72 00:0000 -  -  -  -  ; ***************************************************************************************
   73 00:0000 -  -  -  -  ;
   74 00:0000 -  -  -  -  ;									Break Aquarius or TI84/EZ80
   75 00:0000 -  -  -  -  ;
   76 00:0000 -  -  -  -  ; ***************************************************************************************
   77 00:0000 -  -  -  -  	
   78 00:0000 -  -  -  -  #ifdef EZ80
   79 00:0000             #macro debug 
   80 00:0000             	push 	af
   81 00:0000             	ld 		a,2
   82 00:0000             	ld 		($FFFFFF),a
   83 00:0000             	pop 	af
   84 00:0000             #endmacro
   85 00:0000             #else
   86 00:0000 -  -  -  -  #macro debug 
   87 00:0000             	halt
   88 00:0000             #endmacro
   89 00:0000 -  -  -  -  #endif
   90 00:0000 -  -  -  -  
   91 00:0000 -  -  -  -  ; ***************************************************************************************
   92 00:0000 -  -  -  -  ;
   93 00:0000 -  -  -  -  ;								Output address as 16/32 bit depending
   94 00:0000 -  -  -  -  ;									  (used in vector tables)
   95 00:0000 -  -  -  -  ;
   96 00:0000 -  -  -  -  ; ***************************************************************************************
   97 00:0000 -  -  -  -  
   98 00:0000 -  -  -  -  #ifdef EZ80
   99 00:0000             #macro addr(a)
  100 00:0000             	.dw 	(a) & $FFFF,(a) >> 16
  101 00:0000             #endmacro
  102 00:0000             #else
  103 00:0000 -  -  -  -  #macro addr(a)
  104 00:0000             	.dw 	(a)
  105 00:0000             #endmacro
  106 00:0000 -  -  -  -  #endif
  107 00:0000 -  -  -  -  
  108 00:0000 -  -  -  -  ; ***************************************************************************************
  109 00:0000 -  -  -  -  ;
  110 00:0000 -  -  -  -  ;									16 bit arithmetic
  111 00:0000 -  -  -  -  ;
  112 00:0000 -  -  -  -  ;						HL/DE and HL/BC operations that are always 16 bit.
  113 00:0000 -  -  -  -  ;								used to shift the HLHL values etc.
  114 00:0000 -  -  -  -  ;
  115 00:0000 -  -  -  -  ; ***************************************************************************************
  116 00:0000 -  -  -  -  
  117 00:0000 -  -  -  -  #ifdef EZ80
  118 00:0000             
  119 00:0000             #macro add_hlde_16
  120 00:0000             	add.s 	hl,de
  121 00:0000             #endmacro
  122 00:0000             
  123 00:0000             #macro adc_hlde_16
  124 00:0000             	adc.s 	hl,de
  125 00:0000             #endmacro
  126 00:0000             
  127 00:0000             #macro add_hlhl_16
  128 00:0000             	add.s 	hl,hl
  129 00:0000             #endmacro
  130 00:0000             
  131 00:0000             #macro adc_hlhl_16
  132 00:0000             	adc.s 	hl,hl
  133 00:0000             #endmacro
  134 00:0000             
  135 00:0000             #macro sbc_hlde_16
  136 00:0000             	sbc.s 	hl,de
  137 00:0000             #endmacro
  138 00:0000             
  139 00:0000             #else 									
  140 00:0000 -  -  -  -  
  141 00:0000 -  -  -  -  #macro add_hlde_16
  142 00:0000             	add 	hl,de
  143 00:0000             #endmacro
  144 00:0000 -  -  -  -  
  145 00:0000 -  -  -  -  #macro adc_hlde_16
  146 00:0000             	adc 	hl,de
  147 00:0000             #endmacro
  148 00:0000 -  -  -  -  
  149 00:0000 -  -  -  -  #macro add_hlhl_16
  150 00:0000             	add 	hl,hl
  151 00:0000             #endmacro
  152 00:0000 -  -  -  -  
  153 00:0000 -  -  -  -  #macro adc_hlhl_16
  154 00:0000             	adc 	hl,hl
  155 00:0000             #endmacro
  156 00:0000 -  -  -  -  
  157 00:0000 -  -  -  -  #macro sbc_hlde_16
  158 00:0000             	sbc 	hl,de
  159 00:0000             #endmacro
  160 00:0000 -  -  -  -  
  161 00:0000 -  -  -  -  #endif
  162 00:0000 -  -  -  -  
  163 00:0000 -  -  -  -  ; ***************************************************************************************
  164 00:0000 -  -  -  -  ;
  165 00:0000 -  -  -  -  ;									Changes and Updates
  166 00:0000 -  -  -  -  ;
  167 00:0000 -  -  -  -  ; ***************************************************************************************
  168 00:0000 -  -  -  -  ;
  169 00:0000 -  -  -  -  ;		Date			Notes
  170 00:0000 -  -  -  -  ;		==== 			=====
  171 00:0000 -  -  -  -  ;
  172 00:0000 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
    8 00:0000 -  -  -  -  #include "generated/kwd_constants.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/kwd_constants.inc"
    1 00:0000 -  -  -  -  ;
    2 00:0000 -  -  -  -  ;	This file is automatically generated.
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  #define KWC_EOL_MARKER                      	$80
    5 00:0000 -  -  -  -  #define KWC_FIRST_BINARY                    	$83
    6 00:0000 -  -  -  -  #define KWC_FIRST_NORMAL                    	$9e
    7 00:0000 -  -  -  -  #define KWC_FIRST_UNARY                     	$93
    8 00:0000 -  -  -  -  #define KWC_SHIFT_1                         	$81
    9 00:0000 -  -  -  -  #define KWC_SHIFT_2                         	$82
   10 00:0000 -  -  -  -  
   11 00:0000 -  -  -  -  #define KWD_PLING                           	$0083 ; !
   12 00:0000 -  -  -  -  #define KWD_PRECEDENCE_INDIRECT (6)
   13 00:0000 -  -  -  -  #define KWD_QMARK                           	$0084 ; ?
   14 00:0000 -  -  -  -  #define KWD_ASTERISK                        	$0085 ; *
   15 00:0000 -  -  -  -  #define KWD_SLASH                           	$0086 ; /
   16 00:0000 -  -  -  -  #define KWD_MOD                             	$0087 ; mod
   17 00:0000 -  -  -  -  #define KWD_PLUS                            	$0088 ; +
   18 00:0000 -  -  -  -  #define KWD_MINUS                           	$0089 ; -
   19 00:0000 -  -  -  -  #define KWD_GREATEREQUALS                   	$008a ; >=
   20 00:0000 -  -  -  -  #define KWD_LESSEQUALS                      	$008b ; <=
   21 00:0000 -  -  -  -  #define KWD_GREATER                         	$008c ; >
   22 00:0000 -  -  -  -  #define KWD_LESS                            	$008d ; <
   23 00:0000 -  -  -  -  #define KWD_EQUALS                          	$008e ; =
   24 00:0000 -  -  -  -  #define KWD_LESSGREATER                     	$008f ; <>
   25 00:0000 -  -  -  -  #define KWD_AND                             	$0090 ; and
   26 00:0000 -  -  -  -  #define KWD_OR                              	$0091 ; or
   27 00:0000 -  -  -  -  #define KWD_EOR                             	$0092 ; eor
   28 00:0000 -  -  -  -  #define KWD_AMPERSAND                       	$0093 ; &
   29 00:0000 -  -  -  -  #define KWD_LPAREN                          	$0094 ; (
   30 00:0000 -  -  -  -  #define KWD_DOLLAR                          	$0095 ; $
   31 00:0000 -  -  -  -  #define KWD_RND                             	$0096 ; rnd
   32 00:0000 -  -  -  -  #define KWD_LEN                             	$0097 ; len
   33 00:0000 -  -  -  -  #define KWD_ABS                             	$0098 ; abs
   34 00:0000 -  -  -  -  #define KWD_SGN                             	$0099 ; sgn
   35 00:0000 -  -  -  -  #define KWD_INT                             	$009a ; int
   36 00:0000 -  -  -  -  #define KWD_STRDOLLAR                       	$009b ; str$
   37 00:0000 -  -  -  -  #define KWD_ASC                             	$009c ; asc
   38 00:0000 -  -  -  -  #define KWD_PAGE                            	$009d ; page
   39 00:0000 -  -  -  -  #define KWD_RPAREN                          	$009e ; )
   40 00:0000 -  -  -  -  #define KWD_COMMA                           	$009f ; ,
   41 00:0000 -  -  -  -  #define KWD_COLON                           	$00a0 ; :
   42 00:0000 -  -  -  -  #define KWD_SEMICOLON                       	$00a1 ; ;
   43 00:0000 -  -  -  -  #define KWD_SQUOTE                          	$00a2 ; '
   44 00:0000 -  -  -  -  #define KWD_REPEAT                          	$00a3 ; repeat
   45 00:0000 -  -  -  -  #define KWD_UNTIL                           	$00a4 ; until
   46 00:0000 -  -  -  -  #define KWD_IF                              	$00a5 ; if
   47 00:0000 -  -  -  -  #define KWD_THEN                            	$00a6 ; then
   48 00:0000 -  -  -  -  #define KWD_ELSE                            	$00a7 ; else
   49 00:0000 -  -  -  -  #define KWD_FOR                             	$00a8 ; for
   50 00:0000 -  -  -  -  #define KWD_TO                              	$00a9 ; to
   51 00:0000 -  -  -  -  #define KWD_STEP                            	$00aa ; step
   52 00:0000 -  -  -  -  #define KWD_NEXT                            	$00ab ; next
   53 00:0000 -  -  -  -  #define KWD_DEF                             	$00ac ; def
   54 00:0000 -  -  -  -  #define KWD_PROC                            	$00ad ; proc
   55 00:0000 -  -  -  -  #define KWD_ENDPROC                         	$00ae ; endproc
   56 00:0000 -  -  -  -  #define KWD_LOCAL                           	$00af ; local
   57 00:0000 -  -  -  -  #define KWD_DIM                             	$00b0 ; dim
   58 00:0000 -  -  -  -  #define KWD_REM                             	$00b1 ; rem
   59 00:0000 -  -  -  -  #define KWD_LET                             	$00b2 ; let
   60 00:0000 -  -  -  -  #define KWD_VDU                             	$00b3 ; vdu
   61 00:0000 -  -  -  -  #define KWD_PRINT                           	$00b4 ; print
   62 00:0000 -  -  -  -  #define KWD_LOAD                            	$00b5 ; load
   63 00:0000 -  -  -  -  #define KWD_SAVE                            	$00b6 ; save
   64 00:0000 -  -  -  -  #define KWD_LIST                            	$00b7 ; list
   65 00:0000 -  -  -  -  #define KWD_NEW                             	$00b8 ; new
   66 00:0000 -  -  -  -  #define KWD_RUN                             	$00b9 ; run
   67 00:0000 -  -  -  -  #define KWD_READ                            	$00ba ; read
   68 00:0000 -  -  -  -  #define KWD_DATA                            	$00bb ; data
   69 00:0000 -  -  -  -  #define KWD_RESTORE                         	$00bc ; restore
   70 00:0000 -  -  -  -  #define KWD_ASSERT                          	$00bd ; assert
   71 00:0000 -  -  -  -  #define KWD_CLEAR                           	$00be ; clear
   72 00:0000 -  -  -  -  #define KWD_END                             	$00bf ; end
   73 00:0000 -  -  -  -  #define KWD_STOP                            	$00c0 ; stop
Listing for file "_build.asm"
    9 00:0000 -  -  -  -  #include "generated/messageid.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/messageid.inc"
    1 00:0000 -  -  -  -  ;
    2 00:0000 -  -  -  -  ;	This is automatically generated.
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ERRID_WARMSTART = 0
    5 00:0000 -  -  -  -  
    6 00:0000 -  -  -  -  #macro ERR_WARMSTART
    7 00:0000             	ld a,ERRID_WARMSTART
    8 00:0000             	jp ErrorHandler
    9 00:0000             #endmacro
   10 00:0000 -  -  -  -  
   11 00:0000 -  -  -  -  ERRID_ASSERT = 1
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  #macro ERR_ASSERT
   14 00:0000             	ld a,ERRID_ASSERT
   15 00:0000             	jp ErrorHandler
   16 00:0000             #endmacro
   17 00:0000 -  -  -  -  
   18 00:0000 -  -  -  -  ERRID_BADTYPE = 2
   19 00:0000 -  -  -  -  
   20 00:0000 -  -  -  -  #macro ERR_BADTYPE
   21 00:0000             	ld a,ERRID_BADTYPE
   22 00:0000             	jp ErrorHandler
   23 00:0000             #endmacro
   24 00:0000 -  -  -  -  
   25 00:0000 -  -  -  -  ERRID_BADVALUE = 3
   26 00:0000 -  -  -  -  
   27 00:0000 -  -  -  -  #macro ERR_BADVALUE
   28 00:0000             	ld a,ERRID_BADVALUE
   29 00:0000             	jp ErrorHandler
   30 00:0000             #endmacro
   31 00:0000 -  -  -  -  
   32 00:0000 -  -  -  -  ERRID_DISABLED = 4
   33 00:0000 -  -  -  -  
   34 00:0000 -  -  -  -  #macro ERR_DISABLED
   35 00:0000             	ld a,ERRID_DISABLED
   36 00:0000             	jp ErrorHandler
   37 00:0000             #endmacro
   38 00:0000 -  -  -  -  
   39 00:0000 -  -  -  -  ERRID_DIVZERO = 5
   40 00:0000 -  -  -  -  
   41 00:0000 -  -  -  -  #macro ERR_DIVZERO
   42 00:0000             	ld a,ERRID_DIVZERO
   43 00:0000             	jp ErrorHandler
   44 00:0000             #endmacro
   45 00:0000 -  -  -  -  
   46 00:0000 -  -  -  -  ERRID_MEMORY = 6
   47 00:0000 -  -  -  -  
   48 00:0000 -  -  -  -  #macro ERR_MEMORY
   49 00:0000             	ld a,ERRID_MEMORY
   50 00:0000             	jp ErrorHandler
   51 00:0000             #endmacro
   52 00:0000 -  -  -  -  
   53 00:0000 -  -  -  -  ERRID_NOCOMMA = 7
   54 00:0000 -  -  -  -  
   55 00:0000 -  -  -  -  #macro ERR_NOCOMMA
   56 00:0000             	ld a,ERRID_NOCOMMA
   57 00:0000             	jp ErrorHandler
   58 00:0000             #endmacro
   59 00:0000 -  -  -  -  
   60 00:0000 -  -  -  -  ERRID_NORBRACKET = 8
   61 00:0000 -  -  -  -  
   62 00:0000 -  -  -  -  #macro ERR_NORBRACKET
   63 00:0000             	ld a,ERRID_NORBRACKET
   64 00:0000             	jp ErrorHandler
   65 00:0000             #endmacro
   66 00:0000 -  -  -  -  
   67 00:0000 -  -  -  -  ERRID_NOTREF = 9
   68 00:0000 -  -  -  -  
   69 00:0000 -  -  -  -  #macro ERR_NOTREF
   70 00:0000             	ld a,ERRID_NOTREF
   71 00:0000             	jp ErrorHandler
   72 00:0000             #endmacro
   73 00:0000 -  -  -  -  
   74 00:0000 -  -  -  -  ERRID_STOP = 10
   75 00:0000 -  -  -  -  
   76 00:0000 -  -  -  -  #macro ERR_STOP
   77 00:0000             	ld a,ERRID_STOP
   78 00:0000             	jp ErrorHandler
   79 00:0000             #endmacro
   80 00:0000 -  -  -  -  
   81 00:0000 -  -  -  -  ERRID_SYNTAX = 11
   82 00:0000 -  -  -  -  
   83 00:0000 -  -  -  -  #macro ERR_SYNTAX
   84 00:0000             	ld a,ERRID_SYNTAX
   85 00:0000             	jp ErrorHandler
   86 00:0000             #endmacro
   87 00:0000 -  -  -  -  
   88 00:0000 -  -  -  -  ERRID_TODO = 12
   89 00:0000 -  -  -  -  
   90 00:0000 -  -  -  -  #macro ERR_TODO
   91 00:0000             	ld a,ERRID_TODO
   92 00:0000             	jp ErrorHandler
   93 00:0000             #endmacro
   94 00:0000 -  -  -  -  
   95 00:0000 -  -  -  -  ERRID_UNKNOWNVAR = 13
   96 00:0000 -  -  -  -  
   97 00:0000 -  -  -  -  #macro ERR_UNKNOWNVAR
   98 00:0000             	ld a,ERRID_UNKNOWNVAR
   99 00:0000             	jp ErrorHandler
  100 00:0000             #endmacro
  101 00:0000 -  -  -  -  
Listing for file "_build.asm"
   10 00:0000 -  -  -  -  #include "int32/zmacros.inc"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/zmacros.inc"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		zmacros.inc
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Standard macros. All are prefixed with zm_
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  ; ***************************************************************************************
   14 00:0000 -  -  -  -  ;
   15 00:0000 -  -  -  -  ;									16 bit arithmetic
   16 00:0000 -  -  -  -  ;
   17 00:0000 -  -  -  -  ;						HL/DE and HL/BC operations that are always 16 bit.
   18 00:0000 -  -  -  -  ;								used to shift the HLHL values etc.
   19 00:0000 -  -  -  -  ;
   20 00:0000 -  -  -  -  ; ***************************************************************************************
   21 00:0000 -  -  -  -  
   22 00:0000 -  -  -  -  #ifdef EZ80
   23 00:0000             
   24 00:0000             #macro zm_add_hlde_16
   25 00:0000             	add.s 	hl,de
   26 00:0000             #endmacro
   27 00:0000             
   28 00:0000             #macro zm_adc_hlde_16
   29 00:0000             	adc.s 	hl,de
   30 00:0000             #endmacro
   31 00:0000             
   32 00:0000             #macro zm_add_hlhl_16
   33 00:0000             	add.s 	hl,hl
   34 00:0000             #endmacro
   35 00:0000             
   36 00:0000             #macro zm_adc_hlhl_16
   37 00:0000             	adc.s 	hl,hl
   38 00:0000             #endmacro
   39 00:0000             
   40 00:0000             #macro zm_sbc_hlde_16
   41 00:0000             	sbc.s 	hl,de
   42 00:0000             #endmacro
   43 00:0000             
   44 00:0000             #else 									
   45 00:0000 -  -  -  -  
   46 00:0000 -  -  -  -  #macro zm_add_hlde_16
   47 00:0000             	add 	hl,de
   48 00:0000             #endmacro
   49 00:0000 -  -  -  -  
   50 00:0000 -  -  -  -  #macro zm_adc_hlde_16
   51 00:0000             	adc 	hl,de
   52 00:0000             #endmacro
   53 00:0000 -  -  -  -  
   54 00:0000 -  -  -  -  #macro zm_add_hlhl_16
   55 00:0000             	add 	hl,hl
   56 00:0000             #endmacro
   57 00:0000 -  -  -  -  
   58 00:0000 -  -  -  -  #macro zm_adc_hlhl_16
   59 00:0000             	adc 	hl,hl
   60 00:0000             #endmacro
   61 00:0000 -  -  -  -  
   62 00:0000 -  -  -  -  #macro zm_sbc_hlde_16
   63 00:0000             	sbc 	hl,de
   64 00:0000             #endmacro
   65 00:0000 -  -  -  -  
   66 00:0000 -  -  -  -  #endif
   67 00:0000 -  -  -  -  
   68 00:0000 -  -  -  -  ; ***************************************************************************************
   69 00:0000 -  -  -  -  ;
   70 00:0000 -  -  -  -  ;									Changes and Updates
   71 00:0000 -  -  -  -  ;
   72 00:0000 -  -  -  -  ; ***************************************************************************************
   73 00:0000 -  -  -  -  ;
   74 00:0000 -  -  -  -  ;		Date			Notes
   75 00:0000 -  -  -  -  ;		==== 			=====
   76 00:0000 -  -  -  -  ;
   77 00:0000 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   11 00:0000 -  -  -  -  #include "core/00main.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/00main.asm"
    1 00:0000 -  -  -  -  ; ***************************************************************************************
    2 00:0000 -  -  -  -  ; ***************************************************************************************
    3 00:0000 -  -  -  -  ;
    4 00:0000 -  -  -  -  ;		Name : 		00main.asm
    5 00:0000 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:0000 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:0000 -  -  -  -  ;		Reviewed :	No
    8 00:0000 -  -  -  -  ;		Purpose :	Main program.
    9 00:0000 -  -  -  -  ;
   10 00:0000 -  -  -  -  ; ***************************************************************************************
   11 00:0000 -  -  -  -  ; ***************************************************************************************
   12 00:0000 -  -  -  -  
   13 00:0000 -  -  -  -  ; ***************************************************************************************
   14 00:0000 -  -  -  -  ;
   15 00:0000 -  -  -  -  ; 								Handle eZ80, both TI84 and default
   16 00:0000 -  -  -  -  ;
   17 00:0000 -  -  -  -  ; ***************************************************************************************
   18 00:0000 -  -  -  -  
   19 00:0000 -  -  -  -  #ifdef EZ80
   20 00:0000             
   21 00:0000             .assume ADL=1
   22 00:0000             
   23 00:0000             #ifdef TI84 	
   24 00:0000             #include "otherfiles/ti84pce.inc"		; Standard header for TI84-CE
   25 00:0000             		.org 	userMem-2
   26 00:0000             		.db 	tExtTok,tAsm84CeCmp	
   27 00:0000             #endif
   28 00:0000             
   29 00:0000             ; ***************************************************************************************
   30 00:0000             ;
   31 00:0000             ; 								Handle Z80 for Aquarius binary
   32 00:0000             ;
   33 00:0000             ; ***************************************************************************************
   34 00:0000             
   35 00:0000             #else 
   36 00:0000 -  -  -  -  
   37 00:0000 -  -  -  -  #ifdef AQUARIUS
   38 00:0000 -  -  -  -  .org 	$4000
   39 00:4000 31 FF BF -  		ld 		sp,$BFFF
   40 00:4003 -  -  -  -  #endif
   41 00:4003 -  -  -  -  
   42 00:4003 -  -  -  -  #endif
   43 00:4003 CD 38 49 -  		call 	SYSInitialise
   44 00:4006 11 00 4C -  		ld 		de,TestInstance
   45 00:4009 21 10 89 -  		ld 		hl,EndTestInstance
   46 00:400C CD 9F 44 -  		call 	SetCurrentInstance
   47 00:400F -  -  -  -  
   48 00:400F 3E C3 -  -  		ld 		a,$C3 				; the code for JP
   49 00:4011 32 4D 40 -  		ld 		(JumpCode),a 		; so we can do a CALL indirect.
   50 00:4014 -  -  -  -  		
   51 00:4014 C3 EF 40 -  		jp 		Command_RUN
   52 00:4017 -  -  -  -  
   53 00:4017 -  -  -  -  WarmStart:		
   54 00:4017 3E 2A -  -  		ld 		a,'*'
   55 00:4019 CD 40 49 -  		call 	SYSPrintChar
   56 00:401C CD 3E 49 -  		call 	SYSTerminate
   57 00:401F -  -  -  -  
   58 00:401F -  -  -  -  Unimplemented:
   59 00:401F 3E 04 C3 76 
              41 -  -  -  		ERR_DISABLED
Listing for file "/home/paulr/Projects/dax-basic/source/core/00main.asm"
   60 00:4024 -  -  -  -  Int32DivZeroHandler:
   61 00:4024 3E 05 C3 76 
              41 -  -  -  		ERR_DIVZERO
   62 00:4029 -  -  -  -  
   63 00:4029 -  -  -  -  ; ***************************************************************************************
   64 00:4029 -  -  -  -  ;
   65 00:4029 -  -  -  -  ;									Changes and Updates
   66 00:4029 -  -  -  -  ;
   67 00:4029 -  -  -  -  ; ***************************************************************************************
   68 00:4029 -  -  -  -  ;
   69 00:4029 -  -  -  -  ;		Date			Notes
   70 00:4029 -  -  -  -  ;		==== 			=====
   71 00:4029 -  -  -  -  ;
   72 00:4029 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   12 00:4029 -  -  -  -  #include "core/01data.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/01data.asm"
    1 00:4029 -  -  -  -  ; ***************************************************************************************
    2 00:4029 -  -  -  -  ; ***************************************************************************************
    3 00:4029 -  -  -  -  ;
    4 00:4029 -  -  -  -  ;		Name : 		01data.asm
    5 00:4029 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4029 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4029 -  -  -  -  ;		Reviewed :	No
    8 00:4029 -  -  -  -  ;		Purpose :	Data space
    9 00:4029 -  -  -  -  ;
   10 00:4029 -  -  -  -  ; ***************************************************************************************
   11 00:4029 -  -  -  -  ; ***************************************************************************************
   12 00:4029 -  -  -  -  
   13 00:4029 -  -  -  -  ; ***************************************************************************************
   14 00:4029 -  -  -  -  ;
   15 00:4029 -  -  -  -  ;				Data area. Allow 3 bytes minimum for anything where you 
   16 00:4029 -  -  -  -  ;				LD (xxx),rr etc.
   17 00:4029 -  -  -  -  ;
   18 00:4029 -  -  -  -  ; ***************************************************************************************
   19 00:4029 -  -  -  -  
   20 00:4029 -  -  -  -  LanguageStackSize = 2048 					; bytes allocated to language stack.
   21 00:4029 -  -  -  -  
   22 00:4029 -  -  -  -  HashTableSize = 16 							; 16 pointers for each of 6 types
   23 00:4029 -  -  -  -  
   24 00:4029 -  -  -  -  ; ***************************************************************************************
   25 00:4029 -  -  -  -  ;
   26 00:4029 -  -  -  -  ;								Defines the current instance
   27 00:4029 -  -  -  -  ;
   28 00:4029 -  -  -  -  ; ***************************************************************************************
   29 00:4029 -  -  -  -  
   30 00:4029 -  -  -  -  LowMemory:									; Lowest byte for current instance.
   31 00:4029 00 00 00 00 		.dw 	0,0
   32 00:402D -  -  -  -  HighMemory: 								; Highest byte for current instance
   33 00:402D 00 00 00 00 		.dw 	0,0		
   34 00:4031 -  -  -  -  CodeAddress: 								; Program code (e.g. first line) is here
   35 00:4031 00 00 00 00 		.dw 	0,0 							
   36 00:4035 -  -  -  -  
   37 00:4035 -  -  -  -  ; ***************************************************************************************
   38 00:4035 -  -  -  -  ;
   39 00:4035 -  -  -  -  ;								Allocatable memory, working down.
   40 00:4035 -  -  -  -  ;
   41 00:4035 -  -  -  -  ; ***************************************************************************************
   42 00:4035 -  -  -  -  
   43 00:4035 -  -  -  -  LanguageStack: 								; Language Stack, down from here.
   44 00:4035 00 00 00 00 		.dw 	0,0
   45 00:4039 -  -  -  -  
   46 00:4039 -  -  -  -  LanguageStackEnd: 							; as far as the language stack goes.
   47 00:4039 00 00 00 00 		.dw 	0,0		
   48 00:403D -  -  -  -  
   49 00:403D -  -  -  -  StandardIntegers: 							; address of standard A-Z variables. On a 128 byte page.
   50 00:403D 00 00 00 00 		.dw 	0,0
   51 00:4041 -  -  -  -  
   52 00:4041 -  -  -  -  ;
   53 00:4041 -  -  -  -  ;		The empty space is in here. Arrays, Variables and Memory allocated from the bottom up.
   54 00:4041 -  -  -  -  ;
   55 00:4041 -  -  -  -  
   56 00:4041 -  -  -  -  LowAllocMemory: 							; lowest free memory byte.
   57 00:4041 00 00 00 00 		.dw 	0,0
   58 00:4045 -  -  -  -  
   59 00:4045 -  -  -  -  ; ***************************************************************************************
   60 00:4045 -  -  -  -  ;
   61 00:4045 -  -  -  -  ;										Run variables
   62 00:4045 -  -  -  -  ;
   63 00:4045 -  -  -  -  ; ***************************************************************************************
   64 00:4045 -  -  -  -  
   65 00:4045 -  -  -  -  CurrentLineStart: 							; Start of current line.
   66 00:4045 00 00 00 00 		.dw 	0,0
   67 00:4049 -  -  -  -  		
   68 00:4049 -  -  -  -  RunStackPtr: 								; Stack pointer at Command_RUN
   69 00:4049 00 00 00 00 		.dw 	0,0
   70 00:404D -  -  -  -  
   71 00:404D -  -  -  -  JumpCode: 									; Code copied here for JP $xxxxxx
   72 00:404D 00 00 00 00 
              00 00 -  -  		.dw 	0,0,0
   73 00:4053 -  -  -  -  
   74 00:4053 -  -  -  -  AConvert: 									; used for address conversions.
   75 00:4053 00 00 00 00 
              00 00 -  -  		.dw 	0,0,0
   76 00:4059 -  -  -  -  		
   77 00:4059 -  -  -  -  RandomSeed: 								; random number seeds.
   78 00:4059 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 		.block 	16
   79 00:4069 -  -  -  -  
   80 00:4069 -  -  -  -  s; ***************************************************************************************
   81 00:4069 -  -  -  -  ;
   82 00:4069 -  -  -  -  ;										  Buffers
   83 00:4069 -  -  -  -  ;
   84 00:4069 -  -  -  -  ; ***************************************************************************************
   85 00:4069 -  -  -  -  
   86 00:4069 -  -  -  -  ConvertBuffer:
   87 00:4069 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 		.block 	64
   88 00:40A9 -  -  -  -  
   89 00:40A9 -  -  -  -  ; ***************************************************************************************
   90 00:40A9 -  -  -  -  ;
   91 00:40A9 -  -  -  -  ;									Changes and Updates
   92 00:40A9 -  -  -  -  ;
   93 00:40A9 -  -  -  -  ; ***************************************************************************************
   94 00:40A9 -  -  -  -  ;
   95 00:40A9 -  -  -  -  ;		Date			Notes
   96 00:40A9 -  -  -  -  ;		==== 			=====
   97 00:40A9 -  -  -  -  ;
   98 00:40A9 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   13 00:40A9 -  -  -  -  #include "core/commands/assert.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/assert.asm"
    1 00:40A9 -  -  -  -  ; ***************************************************************************************
    2 00:40A9 -  -  -  -  ; ***************************************************************************************
    3 00:40A9 -  -  -  -  ;
    4 00:40A9 -  -  -  -  ;		Name : 		assert.asm
    5 00:40A9 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40A9 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40A9 -  -  -  -  ;		Reviewed :	No
    8 00:40A9 -  -  -  -  ;		Purpose :	Assert command
    9 00:40A9 -  -  -  -  ;
   10 00:40A9 -  -  -  -  ; ***************************************************************************************
   11 00:40A9 -  -  -  -  ; ***************************************************************************************
   12 00:40A9 -  -  -  -  
   13 00:40A9 -  -  -  -  ; ***************************************************************************************
   14 00:40A9 -  -  -  -  ;
   15 00:40A9 -  -  -  -  ;									ASSERT command
   16 00:40A9 -  -  -  -  ;
   17 00:40A9 -  -  -  -  ; ***************************************************************************************
   18 00:40A9 -  -  -  -  
   19 00:40A9 -  -  -  -  Command_ASSERT: 	;; [assert]
   20 00:40A9 CD 43 43 -  		call 	EvaluateInteger 			; get an integer expression.
   21 00:40AC 7C B5 D9 B4 
              B5 D9 -  -  		checkzero 							; set Z flag if HL'HL zero
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/assert.asm"
   22 00:40B2 C0 -  -  -  		ret 	nz 							; okay if it is not
   23 00:40B3 3E 01 C3 76 
              41 -  -  -  		ERR_ASSERT
   24 00:40B8 -  -  -  -  
   25 00:40B8 -  -  -  -  ; ***************************************************************************************
   26 00:40B8 -  -  -  -  ;
   27 00:40B8 -  -  -  -  ;									Changes and Updates
   28 00:40B8 -  -  -  -  ;
   29 00:40B8 -  -  -  -  ; ***************************************************************************************
   30 00:40B8 -  -  -  -  ;
   31 00:40B8 -  -  -  -  ;		Date			Notes
   32 00:40B8 -  -  -  -  ;		==== 			=====
   33 00:40B8 -  -  -  -  ;
   34 00:40B8 -  -  -  -  ; ***************************************************************************************
   35 00:40B8 -  -  -  -  		
Listing for file "_build.asm"
   14 00:40B8 -  -  -  -  #include "core/commands/badcommands.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/badcommands.asm"
    1 00:40B8 -  -  -  -  ; ***************************************************************************************
    2 00:40B8 -  -  -  -  ; ***************************************************************************************
    3 00:40B8 -  -  -  -  ;
    4 00:40B8 -  -  -  -  ;		Name : 		badcommands.asm
    5 00:40B8 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40B8 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40B8 -  -  -  -  ;		Reviewed :	No
    8 00:40B8 -  -  -  -  ;		Purpose :	Commands that aren't allowed to be run, e.g. cause SN Error.
    9 00:40B8 -  -  -  -  ;
   10 00:40B8 -  -  -  -  ; ***************************************************************************************
   11 00:40B8 -  -  -  -  ; ***************************************************************************************
   12 00:40B8 -  -  -  -  
   13 00:40B8 -  -  -  -  BadCmd_Then: 		;; [then]
   14 00:40B8 -  -  -  -  BadCmd_RBracket: 	;; [)]
   15 00:40B8 -  -  -  -  BadCmd_Comma: 		;; [,]
   16 00:40B8 -  -  -  -  BadCmd_SemiColon: 	;; [;]
   17 00:40B8 -  -  -  -  BadCmd_Defproc: 	;; [def]
   18 00:40B8 -  -  -  -  BadCmd_To: 			;; [to]
   19 00:40B8 C3 D3 41 -  		jp 		SyntaxError
   20 00:40BB -  -  -  -  
   21 00:40BB -  -  -  -  ; ***************************************************************************************
   22 00:40BB -  -  -  -  ;
   23 00:40BB -  -  -  -  ;									Changes and Updates
   24 00:40BB -  -  -  -  ;
   25 00:40BB -  -  -  -  ; ***************************************************************************************
   26 00:40BB -  -  -  -  ;
   27 00:40BB -  -  -  -  ;		Date			Notes
   28 00:40BB -  -  -  -  ;		==== 			=====
   29 00:40BB -  -  -  -  ;
   30 00:40BB -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   15 00:40BB -  -  -  -  #include "core/commands/colon.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/colon.asm"
    1 00:40BB -  -  -  -  ; ***************************************************************************************
    2 00:40BB -  -  -  -  ; ***************************************************************************************
    3 00:40BB -  -  -  -  ;
    4 00:40BB -  -  -  -  ;		Name : 		colon.asm
    5 00:40BB -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40BB -  -  -  -  ;		Date : 		3rd May 2022
    7 00:40BB -  -  -  -  ;		Reviewed :	No
    8 00:40BB -  -  -  -  ;		Purpose :	Colon command (just ignored)
    9 00:40BB -  -  -  -  ;
   10 00:40BB -  -  -  -  ; ***************************************************************************************
   11 00:40BB -  -  -  -  ; ***************************************************************************************
   12 00:40BB -  -  -  -  
   13 00:40BB -  -  -  -  ; ***************************************************************************************
   14 00:40BB -  -  -  -  ;
   15 00:40BB -  -  -  -  ;								Colon command, this is ignored.
   16 00:40BB -  -  -  -  ;
   17 00:40BB -  -  -  -  ; ***************************************************************************************
   18 00:40BB -  -  -  -  
   19 00:40BB -  -  -  -  Command_Colon: 	;; [:]
   20 00:40BB C9 -  -  -  		ret
   21 00:40BC -  -  -  -  
   22 00:40BC -  -  -  -  ; ***************************************************************************************
   23 00:40BC -  -  -  -  ;
   24 00:40BC -  -  -  -  ;									Changes and Updates
   25 00:40BC -  -  -  -  ;
   26 00:40BC -  -  -  -  ; ***************************************************************************************
   27 00:40BC -  -  -  -  ;
   28 00:40BC -  -  -  -  ;		Date			Notes
   29 00:40BC -  -  -  -  ;		==== 			=====
   30 00:40BC -  -  -  -  ;
   31 00:40BC -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   16 00:40BC -  -  -  -  #include "core/commands/end.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/end.asm"
    1 00:40BC -  -  -  -  ; ***************************************************************************************
    2 00:40BC -  -  -  -  ; ***************************************************************************************
    3 00:40BC -  -  -  -  ;
    4 00:40BC -  -  -  -  ;		Name : 		end.asm
    5 00:40BC -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40BC -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40BC -  -  -  -  ;		Reviewed :	No
    8 00:40BC -  -  -  -  ;		Purpose :	End command
    9 00:40BC -  -  -  -  ;
   10 00:40BC -  -  -  -  ; ***************************************************************************************
   11 00:40BC -  -  -  -  ; ***************************************************************************************
   12 00:40BC -  -  -  -  
   13 00:40BC -  -  -  -  ; ***************************************************************************************
   14 00:40BC -  -  -  -  ;
   15 00:40BC -  -  -  -  ;										END command
   16 00:40BC -  -  -  -  ;
   17 00:40BC -  -  -  -  ; ***************************************************************************************
   18 00:40BC -  -  -  -  
   19 00:40BC -  -  -  -  Command_END: 	;; [end]
   20 00:40BC 3E 00 C3 76 
              41 -  -  -  		ERR_WARMSTART
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/end.asm"
   21 00:40C1 -  -  -  -  
   22 00:40C1 -  -  -  -  ; ***************************************************************************************
   23 00:40C1 -  -  -  -  ;
   24 00:40C1 -  -  -  -  ;									Changes and Updates
   25 00:40C1 -  -  -  -  ;
   26 00:40C1 -  -  -  -  ; ***************************************************************************************
   27 00:40C1 -  -  -  -  ;
   28 00:40C1 -  -  -  -  ;		Date			Notes
   29 00:40C1 -  -  -  -  ;		==== 			=====
   30 00:40C1 -  -  -  -  ;
   31 00:40C1 -  -  -  -  ; ***************************************************************************************
   32 00:40C1 -  -  -  -  		
Listing for file "_build.asm"
   17 00:40C1 -  -  -  -  #include "core/commands/endofline.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/endofline.asm"
    1 00:40C1 -  -  -  -  ; ***************************************************************************************
    2 00:40C1 -  -  -  -  ; ***************************************************************************************
    3 00:40C1 -  -  -  -  ;
    4 00:40C1 -  -  -  -  ;		Name : 		endofline.asm
    5 00:40C1 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40C1 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40C1 -  -  -  -  ;		Reviewed :	None
    8 00:40C1 -  -  -  -  ;		Purpose :	Handle end of line.
    9 00:40C1 -  -  -  -  ;
   10 00:40C1 -  -  -  -  ; ***************************************************************************************
   11 00:40C1 -  -  -  -  ; ***************************************************************************************
   12 00:40C1 -  -  -  -  
   13 00:40C1 -  -  -  -  ; ***************************************************************************************
   14 00:40C1 -  -  -  -  ;
   15 00:40C1 -  -  -  -  ;						Handle reaching the EOL Marker $80
   16 00:40C1 -  -  -  -  ;
   17 00:40C1 -  -  -  -  ; ***************************************************************************************
   18 00:40C1 -  -  -  -  
   19 00:40C1 -  -  -  -  EOLHandler: 	;; [[[eol]]]
   20 00:40C1 DD 2A 45 40 		ld 		ix,(CurrentLineStart) 		; current line.
   21 00:40C5 11 00 00 -  		ld  	de,$0000 					; get offset into DE (24 bit)
   22 00:40C8 DD 5E 00 -  		ld 		e,(ix+0)
   23 00:40CB DD 19 -  -  		add 	ix,de 						; point DE to next line.
   24 00:40CD -  -  -  -  		;
   25 00:40CD ED 7B 49 40 		ld 		sp,(RunStackPtr) 			; restore SP as we're crashing out.
   26 00:40D1 C3 FA 40 -  		jp 		CRNewLine 					; and start running a new line.
   27 00:40D4 -  -  -  -  
   28 00:40D4 -  -  -  -  ; ***************************************************************************************
   29 00:40D4 -  -  -  -  ;
   30 00:40D4 -  -  -  -  ;									Changes and Updates
   31 00:40D4 -  -  -  -  ;
   32 00:40D4 -  -  -  -  ; ***************************************************************************************
   33 00:40D4 -  -  -  -  ;
   34 00:40D4 -  -  -  -  ;		Date			Notes
   35 00:40D4 -  -  -  -  ;		==== 			=====
   36 00:40D4 -  -  -  -  ;
   37 00:40D4 -  -  -  -  ; ***************************************************************************************
   38 00:40D4 -  -  -  -  		
Listing for file "_build.asm"
   18 00:40D4 -  -  -  -  #include "core/commands/rem.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/rem.asm"
    1 00:40D4 -  -  -  -  ; ***************************************************************************************
    2 00:40D4 -  -  -  -  ; ***************************************************************************************
    3 00:40D4 -  -  -  -  ;
    4 00:40D4 -  -  -  -  ;		Name : 		rem.asm
    5 00:40D4 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40D4 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40D4 -  -  -  -  ;		Reviewed :	No
    8 00:40D4 -  -  -  -  ;		Purpose :	Rem / ' command
    9 00:40D4 -  -  -  -  ;
   10 00:40D4 -  -  -  -  ; ***************************************************************************************
   11 00:40D4 -  -  -  -  ; ***************************************************************************************
   12 00:40D4 -  -  -  -  
   13 00:40D4 -  -  -  -  ; ***************************************************************************************
   14 00:40D4 -  -  -  -  ;
   15 00:40D4 -  -  -  -  ;							Comment command, can be ' or REM
   16 00:40D4 -  -  -  -  ;				Note for semantic consistency the comment is in a string.
   17 00:40D4 -  -  -  -  ;
   18 00:40D4 -  -  -  -  ; ***************************************************************************************
   19 00:40D4 -  -  -  -  
   20 00:40D4 -  -  -  -  Command_REM: 	;; [rem]
   21 00:40D4 -  -  -  -  Command_REM2: 	;; [']
   22 00:40D4 DD 7E 00 -  		ld 		a,(ix+0) 					; check : EOL or a string follows
   23 00:40D7 DD 23 -  -  		inc 	ix
   24 00:40D9 FE A0 -  -  		cp 		KWD_COLON 					; exit if colon, e.g. end of command
   25 00:40DB C8 -  -  -  		ret 	z
   26 00:40DC FE 80 -  -  		cp 		KWC_EOL_MARKER 				; exit if end of line.
   27 00:40DE C8 -  -  -  		ret 	z
   28 00:40DF FE 3F -  -  		cp 		STRING_MARKER
   29 00:40E1 C2 D3 41 -  		jp 		nz,SyntaxError
   30 00:40E4 -  -  -  -  		;		
   31 00:40E4 11 00 00 -  		ld 		de,$0000 					; length + 2 into DE (length, and NULL)
   32 00:40E7 DD 5E 00 -  		ld 		e,(ix+0)
   33 00:40EA 13 -  -  -  		inc 	de 
   34 00:40EB 13 -  -  -  		inc 	de
   35 00:40EC DD 19 -  -  		add 	ix,de 						; skip string
   36 00:40EE C9 -  -  -  		ret
   37 00:40EF -  -  -  -  
   38 00:40EF -  -  -  -  ; ***************************************************************************************
   39 00:40EF -  -  -  -  ;
   40 00:40EF -  -  -  -  ;									Changes and Updates
   41 00:40EF -  -  -  -  ;
   42 00:40EF -  -  -  -  ; ***************************************************************************************
   43 00:40EF -  -  -  -  ;
   44 00:40EF -  -  -  -  ;		Date			Notes
   45 00:40EF -  -  -  -  ;		==== 			=====
   46 00:40EF -  -  -  -  ;
   47 00:40EF -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   19 00:40EF -  -  -  -  #include "core/commands/run.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/run.asm"
    1 00:40EF -  -  -  -  ; ***************************************************************************************
    2 00:40EF -  -  -  -  ; ***************************************************************************************
    3 00:40EF -  -  -  -  ;
    4 00:40EF -  -  -  -  ;		Name : 		run.asm
    5 00:40EF -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:40EF -  -  -  -  ;		Date : 		3rd June 2022
    7 00:40EF -  -  -  -  ;		Reviewed :	No
    8 00:40EF -  -  -  -  ;		Purpose :	Run command
    9 00:40EF -  -  -  -  ;
   10 00:40EF -  -  -  -  ; ***************************************************************************************
   11 00:40EF -  -  -  -  ; ***************************************************************************************
   12 00:40EF -  -  -  -  
   13 00:40EF -  -  -  -  ; ***************************************************************************************
   14 00:40EF -  -  -  -  ;
   15 00:40EF -  -  -  -  ;										RUN command
   16 00:40EF -  -  -  -  ;
   17 00:40EF -  -  -  -  ; ***************************************************************************************
   18 00:40EF -  -  -  -  
   19 00:40EF -  -  -  -  Command_RUN: 	;; [run]
   20 00:40EF CD 75 44 -  		call 	Command_CLEAR 				; clear all variables, stack
   21 00:40F2 -  -  -  -  
   22 00:40F2 DD 2A 31 40 		ld 		ix,(CodeAddress) 			; start from this line, e.g. the first line.
   23 00:40F6 ED 73 49 40 		ld 		(RunStackPtr),sp 			; save Z80 SP
   24 00:40FA -  -  -  -  		;
   25 00:40FA -  -  -  -  		; 		New line at IX.
   26 00:40FA -  -  -  -  		;
   27 00:40FA -  -  -  -  CRNewLine:
   28 00:40FA DD 22 45 40 		ld 		(CurrentLineStart),ix 		; mark the current line.
   29 00:40FE -  -  -  -  		;
   30 00:40FE DD 7E 00 -  		ld 		a,(ix+0) 					; look at the offset, if zero end of program.
   31 00:4101 B7 -  -  -  		or 		a
   32 00:4102 CA BC 40 -  		jp 		z,Command_END 				; if so, do an END, warm start
   33 00:4105 -  -  -  -  		;
   34 00:4105 DD 23 -  -  		inc 	ix 							; point to first token, skip length, line#
   35 00:4107 DD 23 -  -  		inc 	ix  						; (line nos are just for sorting and backwards compatibility)
   36 00:4109 DD 23 -  -  		inc 	ix
   37 00:410B -  -  -  -  		;
   38 00:410B -  -  -  -  		; 		New command at IX
   39 00:410B -  -  -  -  		;
   40 00:410B -  -  -  -  _CRNewCommand:	
   41 00:410B DD 7E 00 -  		ld 		a,(ix+0)					; get token
   42 00:410E B7 -  -  -  		or 		a 							; set flags, checking if 80-FF, e.g. a keyword
   43 00:410F F2 3F 41 -  		jp 		p,_CRAssignmentHandler 		; if 00-7F can only be a LET default (A=42)
   44 00:4112 -  -  -  -  		;
   45 00:4112 FE 9E -  -  		cp 		KWC_FIRST_NORMAL 			; not a binary/unary operator.
   46 00:4114 30 05 -  -  		jr  	nc,_CRDoCommand
   47 00:4116 FE 83 -  -  		cp 		KWC_FIRST_BINARY
   48 00:4118 D2 34 41 -  		jp 		nc,_CRAlternateLets
   49 00:411B -  -  -  -  		;
   50 00:411B -  -  -  -  _CRDoCommand:		
   51 00:411B E6 7F 21 00 
              00 6F 29 11 
              D6 46 19 5E 
              23 56 ED 53 
              4E 40 -  -  		dispatch(VectorsSet0)   			; Set up JumpCode
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/run.asm"
   52 00:412D DD 23 -  -  		inc 	ix 							; skip over token.
   53 00:412F CD 4D 40 -  		call 	JumpCode 					; call the routine.
   54 00:4132 18 D7 -  -  		jr 		_CRNewCommand 				; and loop back.
   55 00:4134 -  -  -  -  		;
   56 00:4134 -  -  -  -  		; 		Do CALL (HL)
   57 00:4134 -  -  -  -  		;
   58 00:4134 -  -  -  -  		;
   59 00:4134 -  -  -  -  		;		Check for alternate lets !x ?x which are all binary/unary operators
   60 00:4134 -  -  -  -  		;		
   61 00:4134 -  -  -  -  _CRAlternateLets:		
   62 00:4134 FE 83 -  -  		cp 		KWD_PLING
   63 00:4136 28 0C -  -  		jr 		z,_CRAssignmentLet
   64 00:4138 FE 84 -  -  		cp 		KWD_QMARK
   65 00:413A 28 08 -  -  		jr 		z,_CRAssignmentLet
   66 00:413C C3 D3 41 -  		jp 		SyntaxError
   67 00:413F -  -  -  -  		;
   68 00:413F -  -  -  -  		; 		Come here if 00-7F tokens, e.g. must be an identifier or syntax error.
   69 00:413F -  -  -  -  		;
   70 00:413F -  -  -  -  _CRAssignmentHandler:		
   71 00:413F FE 26 -  -  		cp 		IDENTIFIER_END 				; check what follows is an identifier.
   72 00:4141 D2 D3 41 -  		jp 		nc,SyntaxError
   73 00:4144 -  -  -  -  _CRAssignmentLet:		
   74 00:4144 3E 0C C3 76 
              41 -  -  -  		ERR_TODO
   75 00:4149 -  -  -  -  		;call	Command_LET
   76 00:4149 C3 0B 41 -  		jp 		_CRNewCommand
   77 00:414C -  -  -  -  
   78 00:414C -  -  -  -  ; ***************************************************************************************
   79 00:414C -  -  -  -  ;
   80 00:414C -  -  -  -  ;									Changes and Updates
   81 00:414C -  -  -  -  ;
   82 00:414C -  -  -  -  ; ***************************************************************************************
   83 00:414C -  -  -  -  ;
   84 00:414C -  -  -  -  ;		Date			Notes
   85 00:414C -  -  -  -  ;		==== 			=====
   86 00:414C -  -  -  -  ;
   87 00:414C -  -  -  -  ; ***************************************************************************************
   88 00:414C -  -  -  -  		
Listing for file "_build.asm"
   20 00:414C -  -  -  -  #include "core/commands/stop.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/stop.asm"
    1 00:414C -  -  -  -  ; ***************************************************************************************
    2 00:414C -  -  -  -  ; ***************************************************************************************
    3 00:414C -  -  -  -  ;
    4 00:414C -  -  -  -  ;		Name : 		stop.asm
    5 00:414C -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:414C -  -  -  -  ;		Date : 		3rd June 2022
    7 00:414C -  -  -  -  ;		Reviewed :	No
    8 00:414C -  -  -  -  ;		Purpose :	Stop command
    9 00:414C -  -  -  -  ;
   10 00:414C -  -  -  -  ; ***************************************************************************************
   11 00:414C -  -  -  -  ; ***************************************************************************************
   12 00:414C -  -  -  -  
   13 00:414C -  -  -  -  ; ***************************************************************************************
   14 00:414C -  -  -  -  ;
   15 00:414C -  -  -  -  ;										STOP command
   16 00:414C -  -  -  -  ;
   17 00:414C -  -  -  -  ; ***************************************************************************************
   18 00:414C -  -  -  -  
   19 00:414C -  -  -  -  Command_STOP: 	;; [stop]
   20 00:414C 3E 0A C3 76 
              41 -  -  -  		ERR_STOP
Listing for file "/home/paulr/Projects/dax-basic/source/core/commands/stop.asm"
   21 00:4151 -  -  -  -  
   22 00:4151 -  -  -  -  ; ***************************************************************************************
   23 00:4151 -  -  -  -  ;
   24 00:4151 -  -  -  -  ;									Changes and Updates
   25 00:4151 -  -  -  -  ;
   26 00:4151 -  -  -  -  ; ***************************************************************************************
   27 00:4151 -  -  -  -  ;
   28 00:4151 -  -  -  -  ;		Date			Notes
   29 00:4151 -  -  -  -  ;		==== 			=====
   30 00:4151 -  -  -  -  ;
   31 00:4151 -  -  -  -  ; ***************************************************************************************
   32 00:4151 -  -  -  -  		
Listing for file "_build.asm"
   21 00:4151 -  -  -  -  #include "core/errors/charcheck.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/errors/charcheck.asm"
    1 00:4151 -  -  -  -  ; ***************************************************************************************
    2 00:4151 -  -  -  -  ; ***************************************************************************************
    3 00:4151 -  -  -  -  ;
    4 00:4151 -  -  -  -  ;		Name : 		charcheck.asm
    5 00:4151 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4151 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4151 -  -  -  -  ;		Reviewed :	No
    8 00:4151 -  -  -  -  ;		Purpose :	Check next character type functions.
    9 00:4151 -  -  -  -  ;
   10 00:4151 -  -  -  -  ; ***************************************************************************************
   11 00:4151 -  -  -  -  ; ***************************************************************************************
   12 00:4151 -  -  -  -  
   13 00:4151 -  -  -  -  ; ***************************************************************************************
   14 00:4151 -  -  -  -  ;
   15 00:4151 -  -  -  -  ; 		Common Macro, can create for any token. Use for common ones like ) and ,
   16 00:4151 -  -  -  -  ;
   17 00:4151 -  -  -  -  ; ***************************************************************************************
   18 00:4151 -  -  -  -  
   19 00:4151 -  -  -  -  #macro 	checknext(ch,errorid)
   20 00:4151             		ld 		a,(ix+0) 					; get next character and skip it
   21 00:4151             		inc 	ix
   22 00:4151             		cp 		ch 							; exit if matches
   23 00:4151             		ret 	z
   24 00:4151             		ld  	a,errorid					; otherwise error (nesting macros doesn't work)
   25 00:4151             		jp 		ErrorHandler
   26 00:4151             #endmacro
   27 00:4151 -  -  -  -  
   28 00:4151 -  -  -  -  CheckRightBracket:
   29 00:4151 DD 7E 00 DD 
              23 FE 9E C8 
              3E 08 C3 76 
              41 -  -  -  		checknext(KWD_RPAREN,ERRID_NORBRACKET)
Listing for file "/home/paulr/Projects/dax-basic/source/core/errors/charcheck.asm"
   30 00:415E -  -  -  -  
   31 00:415E -  -  -  -  CheckComma:
   32 00:415E DD 7E 00 DD 
              23 FE 9F C8 
              3E 07 C3 76 
              41 -  -  -  		checknext(KWD_COMMA,ERRID_NOCOMMA)		
   33 00:416B -  -  -  -  
   34 00:416B -  -  -  -  ; ***************************************************************************************
   35 00:416B -  -  -  -  ;
   36 00:416B -  -  -  -  ; 							Check A, gives Syntax Error
   37 00:416B -  -  -  -  ;
   38 00:416B -  -  -  -  ; ***************************************************************************************
   39 00:416B -  -  -  -  
   40 00:416B -  -  -  -  CheckNextA:
   41 00:416B DD BE 00 -  		cp 		a,(ix+0) 					; match ?
   42 00:416E DD 23 -  -  		inc 	ix 							; skip character
   43 00:4170 C8 -  -  -  		ret 	z 							; yes, okay
   44 00:4171 3E 0B C3 76 
              41 -  -  -  		ERR_SYNTAX 							; no, syntax error.
   45 00:4176 -  -  -  -  		
   46 00:4176 -  -  -  -  ; ***************************************************************************************
   47 00:4176 -  -  -  -  ;
   48 00:4176 -  -  -  -  ;									Changes and Updates
   49 00:4176 -  -  -  -  ;
   50 00:4176 -  -  -  -  ; ***************************************************************************************
   51 00:4176 -  -  -  -  ;
   52 00:4176 -  -  -  -  ;		Date			Notes
   53 00:4176 -  -  -  -  ;		==== 			=====
   54 00:4176 -  -  -  -  ;
   55 00:4176 -  -  -  -  ; ***************************************************************************************
   56 00:4176 -  -  -  -  		
Listing for file "_build.asm"
   22 00:4176 -  -  -  -  #include "core/errors/errors.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/errors/errors.asm"
    1 00:4176 -  -  -  -  ; ***************************************************************************************
    2 00:4176 -  -  -  -  ; ***************************************************************************************
    3 00:4176 -  -  -  -  ;
    4 00:4176 -  -  -  -  ;		Name : 		errors.asm
    5 00:4176 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4176 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4176 -  -  -  -  ;		Reviewed :	No
    8 00:4176 -  -  -  -  ;		Purpose :	ErrorHandler
    9 00:4176 -  -  -  -  ;
   10 00:4176 -  -  -  -  ; ***************************************************************************************
   11 00:4176 -  -  -  -  ; ***************************************************************************************
   12 00:4176 -  -  -  -  
   13 00:4176 -  -  -  -  ; ***************************************************************************************
   14 00:4176 -  -  -  -  ;
   15 00:4176 -  -  -  -  ;								Error handler, message A 
   16 00:4176 -  -  -  -  ;
   17 00:4176 -  -  -  -  ; ***************************************************************************************
   18 00:4176 -  -  -  -  
   19 00:4176 -  -  -  -  ErrorHandler:
   20 00:4176 F5 -  -  -  		push 	af 						; save error ID
   21 00:4177 -  -  -  -  
   22 00:4177 21 00 00 -  		ld 		hl,0  					; put message# in HL,24 bit compatible
   23 00:417A 6F -  -  -  		ld 		l,a
   24 00:417B 29 -  -  -  		add 	hl,hl 					; x 4
   25 00:417C 29 -  -  -  		add 	hl,hl 		
   26 00:417D 11 D0 45 -  		ld 		de,ErrorIDTable 		; point HL to address, in generated table.
   27 00:4180 19 -  -  -  		add 	hl,de
   28 00:4181 7E 23 66 6F 		ld_ind_hl 						; load hl,(hl) to get address in HL.
Listing for file "/home/paulr/Projects/dax-basic/source/core/errors/errors.asm"
   29 00:4185 CD B8 44 -  		call 	PrintStringAtHL
   30 00:4188 -  -  -  -  		;
   31 00:4188 F1 -  -  -  		pop 	af 						; restore error ID
   32 00:4189 B7 -  -  -  		or 		a 						; no line # if error #zero (warmstart)
   33 00:418A 28 28 -  -  		jr 		z,_EHExit
   34 00:418C -  -  -  -  		;
   35 00:418C DD 2A 45 40 		ld 		ix,(CurrentLineStart) 	; get line
   36 00:4190 DD 7E 00 -  		ld 		a,(ix+0) 				; check offset zero, if so , off the end.
   37 00:4193 B7 -  -  -  		or 		a
   38 00:4194 28 1E -  -  		jr 		z,_EHExit
   39 00:4196 -  -  -  -  
   40 00:4196 21 BA 41 -  		ld 		hl,_EHAtText 			; print "at line"
   41 00:4199 CD B8 44 -  		call 	PrintStringAtHL 
   42 00:419C -  -  -  -  		
   43 00:419C D9 -  -  -  		exx								; HL'HL = line number
   44 00:419D 21 00 00 -  		ld 		hl,$0000 		
   45 00:41A0 D9 -  -  -  		exx 
   46 00:41A1 DD 6E 01 -  		ld 		l,(ix+1)
   47 00:41A4 DD 66 02 -  		ld 		h,(ix+2)
   48 00:41A7 3E 0A -  -  		ld 		a,10 					; convert in base 10
   49 00:41A9 01 69 40 -  		ld 		bc,ConvertBuffer
   50 00:41AC CD F3 48 -  		call 	Int32ToString
   51 00:41AF C5 -  -  -  		push 	bc
   52 00:41B0 E1 -  -  -  		pop 	hl
   53 00:41B1 CD B8 44 -  		call 	PrintStringAtHL			; print error line number.
   54 00:41B4 -  -  -  -  _EHExit:		
   55 00:41B4 CD 5C 49 -  		call 	SYSPrintCRLF 			; print carriage return
   56 00:41B7 C3 17 40 -  		jp 		WarmStart
   57 00:41BA -  -  -  -  
   58 00:41BA -  -  -  -  _EHAtText:
   59 00:41BA 20 61 74 20 
              6C 69 6E 65 
              20 00 -  -  		.db 	" at line ",0
   60 00:41C4 -  -  -  -  
   61 00:41C4 -  -  -  -  NotImplemented:
   62 00:41C4 3E 04 C3 76 
              41 -  -  -  		ERR_DISABLED
   63 00:41C9 -  -  -  -  TypeMismatch:
   64 00:41C9 3E 02 C3 76 
              41 -  -  -  		ERR_BADTYPE
   65 00:41CE -  -  -  -  BadValue:
   66 00:41CE 3E 03 C3 76 
              41 -  -  -  		ERR_BADVALUE
   67 00:41D3 -  -  -  -  SyntaxError:
   68 00:41D3 3E 0B C3 76 
              41 -  -  -  		ERR_SYNTAX
   69 00:41D8 -  -  -  -  						
   70 00:41D8 -  -  -  -  ; ***************************************************************************************
   71 00:41D8 -  -  -  -  ;
   72 00:41D8 -  -  -  -  ;									Changes and Updates
   73 00:41D8 -  -  -  -  ;
   74 00:41D8 -  -  -  -  ; ***************************************************************************************
   75 00:41D8 -  -  -  -  ;
   76 00:41D8 -  -  -  -  ;		Date			Notes
   77 00:41D8 -  -  -  -  ;		==== 			=====
   78 00:41D8 -  -  -  -  ;
   79 00:41D8 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   23 00:41D8 -  -  -  -  #include "core/expression/binary/basicmath.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/basicmath.asm"
    1 00:41D8 -  -  -  -  ; ***************************************************************************************
    2 00:41D8 -  -  -  -  ; ***************************************************************************************
    3 00:41D8 -  -  -  -  ;
    4 00:41D8 -  -  -  -  ;		Name : 		basicmath.asm
    5 00:41D8 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:41D8 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:41D8 -  -  -  -  ;		Reviewed :	No
    8 00:41D8 -  -  -  -  ;		Purpose :	Basic mathematics handlers
    9 00:41D8 -  -  -  -  ;
   10 00:41D8 -  -  -  -  ; ***************************************************************************************
   11 00:41D8 -  -  -  -  ; ***************************************************************************************
   12 00:41D8 -  -  -  -  
   13 00:41D8 -  -  -  -  ; ***************************************************************************************
   14 00:41D8 -  -  -  -  ;
   15 00:41D8 -  -  -  -  ; 									Addition
   16 00:41D8 -  -  -  -  ;
   17 00:41D8 -  -  -  -  ; ***************************************************************************************
   18 00:41D8 -  -  -  -  
   19 00:41D8 -  -  -  -  ALUAdd: 		;; [+]
   20 00:41D8 CD CB 42 78 
              B1 C2 C9 41 
              C3 80 48 -  		IntegerDispatch(Int32Add)
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/basicmath.asm"
   21 00:41E3 -  -  -  -  
   22 00:41E3 -  -  -  -  ; ***************************************************************************************
   23 00:41E3 -  -  -  -  ;
   24 00:41E3 -  -  -  -  ; 									Subtraction
   25 00:41E3 -  -  -  -  ;
   26 00:41E3 -  -  -  -  ; ***************************************************************************************
   27 00:41E3 -  -  -  -  
   28 00:41E3 -  -  -  -  ALUSubtract: 	;; [-]
   29 00:41E3 CD CB 42 78 
              B1 C2 C9 41 
              C3 86 48 -  		IntegerDispatch(Int32Subtract)
   30 00:41EE -  -  -  -  
   31 00:41EE -  -  -  -  ; ***************************************************************************************
   32 00:41EE -  -  -  -  ;
   33 00:41EE -  -  -  -  ; 									  Multiply
   34 00:41EE -  -  -  -  ;
   35 00:41EE -  -  -  -  ; ***************************************************************************************
   36 00:41EE -  -  -  -  
   37 00:41EE -  -  -  -  ALUMultiply: 	;; [*]
   38 00:41EE CD CB 42 78 
              B1 C2 C9 41 
              C3 4A 48 -  		IntegerDispatch(Int32Multiply)
   39 00:41F9 -  -  -  -  
   40 00:41F9 -  -  -  -  ; ***************************************************************************************
   41 00:41F9 -  -  -  -  ;
   42 00:41F9 -  -  -  -  ; 									  Divide
   43 00:41F9 -  -  -  -  ;
   44 00:41F9 -  -  -  -  ; ***************************************************************************************
   45 00:41F9 -  -  -  -  
   46 00:41F9 -  -  -  -  ALUDivide: 	;; [/]
   47 00:41F9 CD CB 42 78 
              B1 C2 C9 41 
              C3 5C 47 -  		IntegerDispatch(Int32SDivide)
   48 00:4204 -  -  -  -  
   49 00:4204 -  -  -  -  ; ***************************************************************************************
   50 00:4204 -  -  -  -  ;
   51 00:4204 -  -  -  -  ; 									  Modulus
   52 00:4204 -  -  -  -  ;
   53 00:4204 -  -  -  -  ; ***************************************************************************************
   54 00:4204 -  -  -  -  
   55 00:4204 -  -  -  -  ALUModulus: 	;; [mod]
   56 00:4204 CD CB 42 78 
              B1 C2 C9 41 
              C3 5F 47 -  		IntegerDispatch(Int32Modulus)
   57 00:420F -  -  -  -  
   58 00:420F -  -  -  -  ; ***************************************************************************************
   59 00:420F -  -  -  -  ;
   60 00:420F -  -  -  -  ; 									  Logical
   61 00:420F -  -  -  -  ;
   62 00:420F -  -  -  -  ; ***************************************************************************************
   63 00:420F -  -  -  -  
   64 00:420F -  -  -  -  ALUAnd: 		;; [and]
   65 00:420F CD CB 42 78 
              B1 C2 C9 41 
              C3 8E 48 -  		IntegerDispatch(Int32And)
   66 00:421A -  -  -  -  
   67 00:421A -  -  -  -  ALUOr: 			;; [or]
   68 00:421A CD CB 42 78 
              B1 C2 C9 41 
              C3 9A 48 -  		IntegerDispatch(Int32Or)
   69 00:4225 -  -  -  -  
   70 00:4225 -  -  -  -  ALUXor: 		;; [eor]
   71 00:4225 CD CB 42 78 
              B1 C2 C9 41 
              C3 A6 48 -  		IntegerDispatch(Int32Xor)
   72 00:4230 -  -  -  -  
   73 00:4230 -  -  -  -  ; ***************************************************************************************
   74 00:4230 -  -  -  -  ;
   75 00:4230 -  -  -  -  ;									Changes and Updates
   76 00:4230 -  -  -  -  ;
   77 00:4230 -  -  -  -  ; ***************************************************************************************
   78 00:4230 -  -  -  -  ;
   79 00:4230 -  -  -  -  ;		Date			Notes
   80 00:4230 -  -  -  -  ;		==== 			=====
   81 00:4230 -  -  -  -  ;
   82 00:4230 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   24 00:4230 -  -  -  -  #include "core/expression/binary/binrefs.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/binrefs.asm"
    1 00:4230 -  -  -  -  ; ***************************************************************************************
    2 00:4230 -  -  -  -  ; ***************************************************************************************
    3 00:4230 -  -  -  -  ;
    4 00:4230 -  -  -  -  ;		Name : 		binrefs.asm
    5 00:4230 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4230 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4230 -  -  -  -  ;		Reviewed :	No
    8 00:4230 -  -  -  -  ;		Purpose :	Binary reference operators ! ?
    9 00:4230 -  -  -  -  ;
   10 00:4230 -  -  -  -  ; ***************************************************************************************
   11 00:4230 -  -  -  -  ; ***************************************************************************************
   12 00:4230 -  -  -  -  
   13 00:4230 -  -  -  -  ; ***************************************************************************************
   14 00:4230 -  -  -  -  ;
   15 00:4230 -  -  -  -  ; 									<l> <op> <r>
   16 00:4230 -  -  -  -  ;
   17 00:4230 -  -  -  -  ; ***************************************************************************************
   18 00:4230 -  -  -  -  
   19 00:4230 -  -  -  -  ALULongReference:			;; [!]
   20 00:4230 CD 3E 42 -  		call 	BRGetAddress 				; calculate address
   21 00:4233 0E 00 -  -  		ld  	c,XTYPE_INTEGER
   22 00:4235 CB F9 -  -  		set 	CIsReference,c
   23 00:4237 C9 -  -  -  		ret
   24 00:4238 -  -  -  -  
   25 00:4238 -  -  -  -  ALUByteReference: 			;; [?]
   26 00:4238 CD 30 42 -  		call 	ALULongReference
   27 00:423B CB F1 -  -  		set 	CIsByteReference,c
   28 00:423D C9 -  -  -  		ret
   29 00:423E -  -  -  -  
   30 00:423E -  -  -  -  BRGetAddress: 								; so we add the left and right values and return a reference.
   31 00:423E CD CB 42 78 
              B1 C2 C9 41 
              C3 49 42 -  		IntegerDispatch(_BRGAMain)
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/binrefs.asm"
   32 00:4249 -  -  -  -  _BRGAMain:		
   33 00:4249 CD 80 48 -  		call 	Int32Add 					; address in HL'HL
   34 00:424C CD 9C 43 -  		call 	DRConvertHLHLtoAddress 		; make it a real physical address in UHL.
   35 00:424F C9 -  -  -  		ret
   36 00:4250 -  -  -  -  
   37 00:4250 -  -  -  -  ; ***************************************************************************************
   38 00:4250 -  -  -  -  ;
   39 00:4250 -  -  -  -  ;									Changes and Updates
   40 00:4250 -  -  -  -  ;
   41 00:4250 -  -  -  -  ; ***************************************************************************************
   42 00:4250 -  -  -  -  ;
   43 00:4250 -  -  -  -  ;		Date			Notes
   44 00:4250 -  -  -  -  ;		==== 			=====
   45 00:4250 -  -  -  -  ;
   46 00:4250 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   25 00:4250 -  -  -  -  #include "core/expression/binary/compare.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/compare.asm"
    1 00:4250 -  -  -  -  ; ***************************************************************************************
    2 00:4250 -  -  -  -  ; ***************************************************************************************
    3 00:4250 -  -  -  -  ;
    4 00:4250 -  -  -  -  ;		Name : 		compare.asm
    5 00:4250 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4250 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4250 -  -  -  -  ;		Reviewed :	No
    8 00:4250 -  -  -  -  ;		Purpose :	Comparison code
    9 00:4250 -  -  -  -  ;
   10 00:4250 -  -  -  -  ; ***************************************************************************************
   11 00:4250 -  -  -  -  ; ***************************************************************************************
   12 00:4250 -  -  -  -  
   13 00:4250 -  -  -  -  #macro compare_equals(n)
   14 00:4250             		call 	CompareBaseCode
   15 00:4250             		cp 		n
   16 00:4250             		jr 		z,UnaryInt32True
   17 00:4250             		jr 		UnaryInt32False
   18 00:4250             #endmacro
   19 00:4250 -  -  -  -  
   20 00:4250 -  -  -  -  #macro compare_not_equals(n)
   21 00:4250             		call 	CompareBaseCode
   22 00:4250             		cp 		n
   23 00:4250             		jr 		nz,UnaryInt32True
   24 00:4250             		jr 		UnaryInt32False
   25 00:4250             #endmacro
   26 00:4250 -  -  -  -  
   27 00:4250 -  -  -  -  ; ***************************************************************************************
   28 00:4250 -  -  -  -  ;
   29 00:4250 -  -  -  -  ; 								Return True/False
   30 00:4250 -  -  -  -  ;
   31 00:4250 -  -  -  -  ; ***************************************************************************************
   32 00:4250 -  -  -  -  
   33 00:4250 -  -  -  -  UnaryInt32True:	
   34 00:4250 3E FF -  -  		ld 		a,255
   35 00:4252 18 01 -  -  		jr 		_Int32Logical
   36 00:4254 -  -  -  -  UnaryInt32False: 
   37 00:4254 AF -  -  -  		xor 	a
   38 00:4255 -  -  -  -  _Int32Logical:
   39 00:4255 6F -  -  -  		ld 		l,a 						; copy A to H L H' L'
   40 00:4256 67 -  -  -  		ld 		h,a
   41 00:4257 D9 -  -  -  		exx
   42 00:4258 6F -  -  -  		ld 		l,a
   43 00:4259 67 -  -  -  		ld 		h,a
   44 00:425A D9 -  -  -  		exx
   45 00:425B 0E 00 -  -  		ld 		c,XTYPE_INTEGER 			; return as integer
   46 00:425D C9 -  -  -  		ret
   47 00:425E -  -  -  -  
   48 00:425E -  -  -  -  ; ***************************************************************************************
   49 00:425E -  -  -  -  ;
   50 00:425E -  -  -  -  ; 										> = < (compare == value)
   51 00:425E -  -  -  -  ;
   52 00:425E -  -  -  -  ; ***************************************************************************************
   53 00:425E -  -  -  -  
   54 00:425E -  -  -  -  ALUCompareEqual: 			;; [=]
   55 00:425E CD 94 42 FE 
              00 28 EB 18 
              ED -  -  -  		compare_equals(0)
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/compare.asm"
   56 00:4267 -  -  -  -  
   57 00:4267 -  -  -  -  ALUCompareLess: 			;; [<]
   58 00:4267 CD 94 42 FE 
              FF 28 E2 18 
              E4 -  -  -  		compare_equals($FF)
   59 00:4270 -  -  -  -  
   60 00:4270 -  -  -  -  ALUCompareGreater: 			;; [>]
   61 00:4270 CD 94 42 FE 
              01 28 D9 18 
              DB -  -  -  		compare_equals(1)
   62 00:4279 -  -  -  -  
   63 00:4279 -  -  -  -  ; ***************************************************************************************
   64 00:4279 -  -  -  -  ;
   65 00:4279 -  -  -  -  ; 										> = < (compare <> value)
   66 00:4279 -  -  -  -  ;
   67 00:4279 -  -  -  -  ; ***************************************************************************************
   68 00:4279 -  -  -  -  
   69 00:4279 -  -  -  -  ALUCompareNotEqual: 		;; [<>]
   70 00:4279 CD 94 42 FE 
              00 20 D0 18 
              D2 -  -  -  		compare_not_equals(0)
   71 00:4282 -  -  -  -  
   72 00:4282 -  -  -  -  ALUCompareLessEqual: 		;; [<=]
   73 00:4282 CD 94 42 FE 
              01 20 C7 18 
              C9 -  -  -  		compare_not_equals(1)
   74 00:428B -  -  -  -  
   75 00:428B -  -  -  -  ALUCompareGreaterEqual: 	;; [>=]
   76 00:428B CD 94 42 FE 
              FF 20 BE 18 
              C0 -  -  -  		compare_not_equals($FF)
   77 00:4294 -  -  -  -  
   78 00:4294 -  -  -  -  ; ***************************************************************************************
   79 00:4294 -  -  -  -  ;
   80 00:4294 -  -  -  -  ; 							Compare two values, return $FF,0,1
   81 00:4294 -  -  -  -  ;
   82 00:4294 -  -  -  -  ; ***************************************************************************************
   83 00:4294 -  -  -  -  
   84 00:4294 -  -  -  -  CompareBaseCode:
   85 00:4294 CD CB 42 -  		call 	DereferenceBoth 			; dereference both L & R
   86 00:4297 -  -  -  -  
   87 00:4297 78 -  -  -  		ld 		a,b 						; check if both string.
   88 00:4298 A1 -  -  -  		and 	c
   89 00:4299 CB 47 -  -  		bit 	CIsString,a 
   90 00:429B C2 AA 42 -  		jp 		nz,StringCompare
   91 00:429E -  -  -  -  
   92 00:429E 78 -  -  -  		ld 		a,b 						; check if either is string
   93 00:429F B1 -  -  -  		or 		c
   94 00:42A0 CB 47 -  -  		bit 	CIsString,a 
   95 00:42A2 CA B9 48 -  		jp 		z,Int32Compare 				; if not do as integer
   96 00:42A5 -  -  -  -  
   97 00:42A5 3E 02 C3 76 
              41 -  -  -  		ERR_BADTYPE 						; trying to do int<str>comparison
   98 00:42AA -  -  -  -  ;
   99 00:42AA -  -  -  -  ;		Compare (HL) - (DE), String comparison.
  100 00:42AA -  -  -  -  ;
  101 00:42AA -  -  -  -  StringCompare:
  102 00:42AA 1A -  -  -  		ld 		a,(de) 						; note compares are backwards
  103 00:42AB BE -  -  -  		cp 		(hl)
  104 00:42AC 38 0D -  -  		jr 		c,_SCGreater 				; so < returns +1
  105 00:42AE 20 08 -  -  		jr 		nz,_SCLess
  106 00:42B0 13 -  -  -  		inc 	de 							; keep going, <$20 match.
  107 00:42B1 23 -  -  -  		inc 	hl
  108 00:42B2 FE 20 -  -  		cp 		' '
  109 00:42B4 30 F4 -  -  		jr 		nc,StringCompare
  110 00:42B6 AF -  -  -  		xor 	a 							; return 0.
  111 00:42B7 C9 -  -  -  		ret
  112 00:42B8 -  -  -  -  
  113 00:42B8 -  -  -  -  _SCLess:
  114 00:42B8 3E FF -  -  		ld 		a,$FF
  115 00:42BA C9 -  -  -  		ret
  116 00:42BB -  -  -  -  _SCGreater:
  117 00:42BB 3E 01 -  -  		ld 		a,1
  118 00:42BD C9 -  -  -  		ret
  119 00:42BE -  -  -  -  
  120 00:42BE 3E 0C C3 76 
              41 -  -  -  		ERR_TODO()
  121 00:42C3 -  -  -  -  
  122 00:42C3 -  -  -  -  ; ***************************************************************************************
  123 00:42C3 -  -  -  -  ;
  124 00:42C3 -  -  -  -  ;									Changes and Updates
  125 00:42C3 -  -  -  -  ;
  126 00:42C3 -  -  -  -  ; ***************************************************************************************
  127 00:42C3 -  -  -  -  ;
  128 00:42C3 -  -  -  -  ;		Date			Notes
  129 00:42C3 -  -  -  -  ;		==== 			=====
  130 00:42C3 -  -  -  -  ;
  131 00:42C3 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   26 00:42C3 -  -  -  -  #include "core/expression/binary/utility.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/binary/utility.asm"
    1 00:42C3 -  -  -  -  ; ***************************************************************************************
    2 00:42C3 -  -  -  -  ; ***************************************************************************************
    3 00:42C3 -  -  -  -  ;
    4 00:42C3 -  -  -  -  ;		Name : 		utility.asm
    5 00:42C3 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:42C3 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:42C3 -  -  -  -  ;		Reviewed :	No
    8 00:42C3 -  -  -  -  ;		Purpose :	Basic mathematics utilities
    9 00:42C3 -  -  -  -  ;
   10 00:42C3 -  -  -  -  ; ***************************************************************************************
   11 00:42C3 -  -  -  -  ; ***************************************************************************************
   12 00:42C3 -  -  -  -  
   13 00:42C3 -  -  -  -  ; ***************************************************************************************
   14 00:42C3 -  -  -  -  ;
   15 00:42C3 -  -  -  -  ;							   Swap B:DE'DE and C:HL'HL
   16 00:42C3 -  -  -  -  ;
   17 00:42C3 -  -  -  -  ; ***************************************************************************************
   18 00:42C3 -  -  -  -  
   19 00:42C3 -  -  -  -  SwapHLDE:
   20 00:42C3 EB -  -  -  			ex 		de,hl 					; swap DE'DE and HL'HL
   21 00:42C4 D9 -  -  -  			exx
   22 00:42C5 EB -  -  -  			ex 		de,hl
   23 00:42C6 D9 -  -  -  			exx
   24 00:42C7 78 -  -  -  			ld 		a,b 					; swap B & C
   25 00:42C8 41 -  -  -  			ld 		b,c
   26 00:42C9 4F -  -  -  			ld 		c,a
   27 00:42CA C9 -  -  -  			ret
   28 00:42CB -  -  -  -  
   29 00:42CB -  -  -  -  ; ***************************************************************************************
   30 00:42CB -  -  -  -  ;
   31 00:42CB -  -  -  -  ;						Dereference B:DE'DE and C:HL'HL
   32 00:42CB -  -  -  -  ;
   33 00:42CB -  -  -  -  ; ***************************************************************************************
   34 00:42CB -  -  -  -  
   35 00:42CB -  -  -  -  DereferenceBoth:
   36 00:42CB CB 79 -  -  			bit 	CIsReference,c 			; does C:HL'HL need dereferencing ?
   37 00:42CD C4 6E 43 -  			call 	nz,Dereference 			; Deref C:HL'HL
   38 00:42D0 CB 78 -  -  			bit 	CIsReference,b 			; does DE'DE need dereferencing ?		
   39 00:42D2 C8 -  -  -  			ret 	z
   40 00:42D3 CD C3 42 -  			call 	SwapHLDE 				; swap HL and DE over.
   41 00:42D6 CD 6E 43 -  			call 	Dereference 			; dereference what was B:DE'DE
   42 00:42D9 CD C3 42 -  			call 	SwapHLDE 				; swap HL and DE over.
   43 00:42DC C9 -  -  -  			ret
   44 00:42DD -  -  -  -  
   45 00:42DD -  -  -  -  ; ***************************************************************************************
   46 00:42DD -  -  -  -  ;
   47 00:42DD -  -  -  -  ;							Type Check C:HL'HL and negate it
   48 00:42DD -  -  -  -  ;
   49 00:42DD -  -  -  -  ; ***************************************************************************************
   50 00:42DD -  -  -  -  
   51 00:42DD -  -  -  -  NegateHLHL:	
   52 00:42DD CB 41 -  -  			bit 	CIsString,c 			; is it a string ?
   53 00:42DF C2 C9 41 -  			jp 		nz,TypeMismatch
   54 00:42E2 CB 79 -  -  			bit 	CIsReference,c 			; reference -> number.
   55 00:42E4 C4 6E 43 -  			call 	nz,Dereference 			; if required.
   56 00:42E7 CD E0 48 -  			call 	Int32Negate
   57 00:42EA C9 -  -  -  			ret
Listing for file "_build.asm"
   27 00:42EB -  -  -  -  #include "core/expression/expression.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/expression.asm"
    1 00:42EB -  -  -  -  ; ***************************************************************************************
    2 00:42EB -  -  -  -  ; ***************************************************************************************
    3 00:42EB -  -  -  -  ;
    4 00:42EB -  -  -  -  ;		Name : 		expression.asm
    5 00:42EB -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:42EB -  -  -  -  ;		Date : 		3rd June 2022
    7 00:42EB -  -  -  -  ;		Reviewed :	None
    8 00:42EB -  -  -  -  ;		Purpose :	Expression evaluation (see evaluate.py)
    9 00:42EB -  -  -  -  ;
   10 00:42EB -  -  -  -  ; ***************************************************************************************
   11 00:42EB -  -  -  -  ; ***************************************************************************************
   12 00:42EB -  -  -  -  
   13 00:42EB -  -  -  -  ; ***************************************************************************************
   14 00:42EB -  -  -  -  ;
   15 00:42EB -  -  -  -  ; 						Evaluate expression at IX, precedence level A/0
   16 00:42EB -  -  -  -  ;
   17 00:42EB -  -  -  -  ; ***************************************************************************************
   18 00:42EB -  -  -  -  
   19 00:42EB -  -  -  -  EvaluateAtPrecedence0:
   20 00:42EB AF -  -  -  		xor 	a 							; base level of precedence and fall through.
   21 00:42EC -  -  -  -  EvaluateAtPrecedence:
   22 00:42EC F5 -  -  -  		push 	af  						; save precedence on stack	
   23 00:42ED -  -  -  -  		;
   24 00:42ED -  -  -  -  		; 		Get a term into C:HL'HL
   25 00:42ED -  -  -  -  		;
   26 00:42ED CD 9E 43 -  		call 	EvaluateTerm 				; get term
   27 00:42F0 -  -  -  -  		;
   28 00:42F0 -  -  -  -  		; 		Check if can calculate at this level. Check if a binary operator follows.
   29 00:42F0 -  -  -  -  		;
   30 00:42F0 D1 -  -  -  		pop 	de 							; precedence level is now in D.
   31 00:42F1 -  -  -  -  _EAPLoop:
   32 00:42F1 DD 7E 00 -  		ld 		a,(ix+0) 					; get next token
   33 00:42F4 FE 83 -  -  		cp 		KWC_FIRST_BINARY	 		; check it is a binary operator and exit otherwise.
   34 00:42F6 D8 -  -  -  		ret 	c
   35 00:42F7 FE 93 -  -  		cp 		KWC_FIRST_UNARY
   36 00:42F9 D0 -  -  -  		ret 	nc
   37 00:42FA -  -  -  -  		;
   38 00:42FA -  -  -  -  		; 		Get the precedence.
   39 00:42FA -  -  -  -  		;
   40 00:42FA E5 -  -  -  		push 	hl 							; want to use HL
   41 00:42FB D6 83 -  -  		sub 	KWC_FIRST_BINARY 			; now indexed from zero
   42 00:42FD 21 C0 45 -  		ld 		hl,PrecedenceTable 			; make HL point to the table
   43 00:4300 B5 -  -  -  		or 		l 							; table is aligned so this works using .block
   44 00:4301 6F -  -  -  		ld 		l,a
   45 00:4302 5E -  -  -  		ld 		e,(hl)  					; get the precedence
   46 00:4303 E1 -  -  -  		pop 	hl 							; restore HL
   47 00:4304 -  -  -  -  		;
   48 00:4304 -  -  -  -  		;		Continue only if prec-level (in D) < operator-precedence (in E)
   49 00:4304 -  -  -  -  		;
   50 00:4304 7A -  -  -  		ld 		a,d 						; so exit otherwise.
   51 00:4305 BB -  -  -  		cp 		e
   52 00:4306 D0 -  -  -  		ret 	nc
   53 00:4307 -  -  -  -  
   54 00:4307 -  -  -  -  		;
   55 00:4307 -  -  -  -  		; 		Push C:HL'HL, Precedence information and operator on the stack.
   56 00:4307 -  -  -  -  		;
   57 00:4307 D5 -  -  -  		push 	de 							; save precedence information.
   58 00:4308 -  -  -  -  		;
   59 00:4308 DD 7E 00 -  		ld 		a,(ix+0) 					; save binary operator
   60 00:430B F5 -  -  -  		push 	af
   61 00:430C -  -  -  -  		;
   62 00:430C C5 -  -  -  		push 	bc 							; save BC (type is in C)
   63 00:430D D9 -  -  -  		exx 								; save HL'
   64 00:430E E5 -  -  -  		push 	hl
   65 00:430F D9 -  -  -  		exx 								
   66 00:4310 E5 -  -  -  		push 	hl 							; save HL
   67 00:4311 -  -  -  -  		;
   68 00:4311 DD 23 -  -  		inc 	ix 							; skip over binary operator.
   69 00:4313 -  -  -  -  		;
   70 00:4313 -  -  -  -  		; 		Evaluate the RHS which after this is in HL'HL info in B, left is on the stack.
   71 00:4313 -  -  -  -  		;
   72 00:4313 7B -  -  -  		ld 		a,e 						; evaluate at the operator precedence level.
   73 00:4314 CD EC 42 -  		call 	EvaluateAtPrecedence 		; this goes into R
   74 00:4317 -  -  -  -  		;
   75 00:4317 -  -  -  -  		; 		Restore C:HL'HL off the stack, copying C'HL:HL => B'DE:DE
   76 00:4317 -  -  -  -  		;
   77 00:4317 79 -  -  -  		ld 		a,c 						; put the second part into A.
   78 00:4318 -  -  -  -  
   79 00:4318 EB -  -  -  		ex 		de,hl 						; pop L back off the stack into HL'HL
   80 00:4319 E1 -  -  -  		pop 	hl 							; swapping HL into DE
   81 00:431A D9 -  -  -  		exx
   82 00:431B EB -  -  -  		ex 		de,hl
   83 00:431C E1 -  -  -  		pop 	hl
   84 00:431D D9 -  -  -  		exx
   85 00:431E C1 -  -  -  		pop  	bc 							; get the type into C
   86 00:431F 47 -  -  -  		ld 		b,a 						; B now contains DE'DE type.
   87 00:4320 -  -  -  -  		;
   88 00:4320 -  -  -  -  		; 		At this point, the left hand side is in C (type) HL'HL and the right hand side
   89 00:4320 -  -  -  -  		; 		is in B (type) DE'DE
   90 00:4320 -  -  -  -  		;
   91 00:4320 F1 -  -  -  		pop 	af 							; get operator in A
   92 00:4321 -  -  -  -  		;
   93 00:4321 -  -  -  -  		; 		Call the binary operator in A.
   94 00:4321 -  -  -  -  		;
   95 00:4321 D5 -  -  -  		push 	de
   96 00:4322 E5 -  -  -  		push 	hl 							; save DE/HL
   97 00:4323 E6 7F 21 00 
              00 6F 29 11 
              D6 46 19 5E 
              23 56 ED 53 
              4E 40 -  -  		dispatch(VectorsSet0) 				; routine address in DE
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/expression.asm"
   98 00:4335 E1 -  -  -  		pop 	hl 							; make HL'HL good, restore HL
   99 00:4336 D1 -  -  -  		pop 	de 							; restore DE
  100 00:4337 CD 4D 40 -  		call 	JumpCode 					; call the routine set up in dispatch.
  101 00:433A -  -  -  -  		;
  102 00:433A D1 -  -  -  		pop 	de 							; restore precedence into DE
  103 00:433B -  -  -  -  		;
  104 00:433B 18 B4 -  -  		jr 		_EAPLoop 					; and go round
  105 00:433D -  -  -  -  
  106 00:433D -  -  -  -  ; ***************************************************************************************
  107 00:433D -  -  -  -  ;
  108 00:433D -  -  -  -  ;									Changes and Updates
  109 00:433D -  -  -  -  ;
  110 00:433D -  -  -  -  ; ***************************************************************************************
  111 00:433D -  -  -  -  ;
  112 00:433D -  -  -  -  ;		Date			Notes
  113 00:433D -  -  -  -  ;		==== 			=====
  114 00:433D -  -  -  -  ;
  115 00:433D -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   28 00:433D -  -  -  -  #include "core/expression/exprhelper.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/exprhelper.asm"
    1 00:433D -  -  -  -  ; ***************************************************************************************
    2 00:433D -  -  -  -  ; ***************************************************************************************
    3 00:433D -  -  -  -  ;
    4 00:433D -  -  -  -  ;		Name : 		exprhelper.asm
    5 00:433D -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:433D -  -  -  -  ;		Date : 		3rd June 2022
    7 00:433D -  -  -  -  ;		Reviewed :	No
    8 00:433D -  -  -  -  ;		Purpose :	Expression support functions
    9 00:433D -  -  -  -  ;
   10 00:433D -  -  -  -  ; ***************************************************************************************
   11 00:433D -  -  -  -  ; ***************************************************************************************
   12 00:433D -  -  -  -  
   13 00:433D -  -  -  -  ; ***************************************************************************************
   14 00:433D -  -  -  -  ;
   15 00:433D -  -  -  -  ; 						Evaluate and dereference an expression
   16 00:433D -  -  -  -  ;
   17 00:433D -  -  -  -  ; ***************************************************************************************
   18 00:433D -  -  -  -  
   19 00:433D -  -  -  -  EvaluateValue:
   20 00:433D CD EB 42 -  		call 	EvaluateAtPrecedence0
   21 00:4340 C3 6E 43 -  		jp 		Dereference
   22 00:4343 -  -  -  -  
   23 00:4343 -  -  -  -  ; ***************************************************************************************
   24 00:4343 -  -  -  -  ;
   25 00:4343 -  -  -  -  ; 									Evaluate a number
   26 00:4343 -  -  -  -  ;
   27 00:4343 -  -  -  -  ; ***************************************************************************************
   28 00:4343 -  -  -  -  
   29 00:4343 -  -  -  -  EvaluateInteger:
   30 00:4343 CD 3D 43 -  		call 	EvaluateValue
   31 00:4346 CB 41 -  -  		bit 	CIsString,c 				; check string bit is clear
   32 00:4348 C8 -  -  -  		ret 	z
   33 00:4349 C3 C9 41 -  		jp 		TypeMismatch
   34 00:434C -  -  -  -  
   35 00:434C -  -  -  -  ; ***************************************************************************************
   36 00:434C -  -  -  -  ;
   37 00:434C -  -  -  -  ; 									Evaluate an 8 bit integer
   38 00:434C -  -  -  -  ;
   39 00:434C -  -  -  -  ; ***************************************************************************************
   40 00:434C -  -  -  -  
   41 00:434C -  -  -  -  Evaluate8BitInteger:
   42 00:434C CD 43 43 -  		call 	EvaluateInteger
   43 00:434F D9 -  -  -  		exx  								; check if upper 3 bytes zero
   44 00:4350 7C -  -  -  		ld 		a,h
   45 00:4351 B5 -  -  -  		or 		l
   46 00:4352 D9 -  -  -  		exx 	
   47 00:4353 B4 -  -  -  		or 		h
   48 00:4354 C2 CE 41 -  		jp 		nz,BadValue
   49 00:4357 7D -  -  -  		ld 		a,l 						; return integer in A
   50 00:4358 C9 -  -  -  		ret
   51 00:4359 -  -  -  -  		
   52 00:4359 -  -  -  -  ; ***************************************************************************************
   53 00:4359 -  -  -  -  ;
   54 00:4359 -  -  -  -  ; 									Evaluate a string
   55 00:4359 -  -  -  -  ;
   56 00:4359 -  -  -  -  ; ***************************************************************************************
   57 00:4359 -  -  -  -  
   58 00:4359 -  -  -  -  EvaluateStringOnly:
   59 00:4359 CD 3D 43 -  		call 	EvaluateValue
   60 00:435C CB 41 -  -  		bit 	CIsString,c 				; check string bit.
   61 00:435E CA C9 41 -  		jp 		z,TypeMismatch 				; clear, type mismatch.
   62 00:4361 C9 -  -  -  		ret
   63 00:4362 -  -  -  -  
   64 00:4362 -  -  -  -  ; ***************************************************************************************
   65 00:4362 -  -  -  -  ;
   66 00:4362 -  -  -  -  ; 								Return 8/16 bit constant
   67 00:4362 -  -  -  -  ;
   68 00:4362 -  -  -  -  ; ***************************************************************************************
   69 00:4362 -  -  -  -  
   70 00:4362 -  -  -  -  Return8BitConstant:
   71 00:4362 21 00 00 -  		ld 		hl,$0000 					; put A into HL
   72 00:4365 6F -  -  -  		ld 		l,a
   73 00:4366 -  -  -  -  Return16BitConstant:
   74 00:4366 D9 -  -  -  		exx 								; clear HL'
   75 00:4367 21 00 00 -  		ld 		hl,0
   76 00:436A D9 -  -  -  		exx
   77 00:436B 0E 00 -  -  		ld 		c,XTYPE_INTEGER 			; return integer value.
   78 00:436D C9 -  -  -  		ret
   79 00:436E -  -  -  -  
   80 00:436E -  -  -  -  ; ***************************************************************************************
   81 00:436E -  -  -  -  ;
   82 00:436E -  -  -  -  ;									Changes and Updates
   83 00:436E -  -  -  -  ;
   84 00:436E -  -  -  -  ; ***************************************************************************************
   85 00:436E -  -  -  -  ;
   86 00:436E -  -  -  -  ;		Date			Notes
   87 00:436E -  -  -  -  ;		==== 			=====
   88 00:436E -  -  -  -  ;
   89 00:436E -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   29 00:436E -  -  -  -  #include "core/expression/reference.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/reference.asm"
    1 00:436E -  -  -  -  ; ***************************************************************************************
    2 00:436E -  -  -  -  ; ***************************************************************************************
    3 00:436E -  -  -  -  ;
    4 00:436E -  -  -  -  ;		Name : 		reference.asm
    5 00:436E -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:436E -  -  -  -  ;		Date : 		1st May 2022
    7 00:436E -  -  -  -  ;		Reviewed :	No
    8 00:436E -  -  -  -  ;		Purpose :	Reference/Dereference functions.
    9 00:436E -  -  -  -  ;
   10 00:436E -  -  -  -  ; ***************************************************************************************
   11 00:436E -  -  -  -  ; ***************************************************************************************
   12 00:436E -  -  -  -  
   13 00:436E -  -  -  -  ; ***************************************************************************************
   14 00:436E -  -  -  -  ;
   15 00:436E -  -  -  -  ; 									Dereference HL'HL C
   16 00:436E -  -  -  -  ;
   17 00:436E -  -  -  -  ; ***************************************************************************************
   18 00:436E -  -  -  -  
   19 00:436E -  -  -  -  Dereference:
   20 00:436E CB 79 -  -  		bit 	CIsReference,c 				; exit if not reference
   21 00:4370 C8 -  -  -  		ret 	z
   22 00:4371 -  -  -  -  
   23 00:4371 CB B9 -  -  		res 	CIsReference,c 				; clear reference bit.
   24 00:4373 -  -  -  -  		
   25 00:4373 CB 41 -  -  		bit 	CIsString,c 				; dereferencing string, shouldn't be possible.
   26 00:4375 20 20 -  -  		jr 		nz,_DRInternal
   27 00:4377 -  -  -  -  
   28 00:4377 CB 71 -  -  		bit 	CIsByteReference,c 			; is it a byte reference ?
   29 00:4379 20 0F -  -  		jr 		nz,_DeRefByte 
   30 00:437B -  -  -  -  
   31 00:437B E5 -  -  -  		push 	hl 							; save address on stack.
   32 00:437C 7E 23 66 6F 		ld_ind_hl 							; read HL'HL from HL
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/reference.asm"
   33 00:4380 D9 -  -  -  		exx
   34 00:4381 E1 -  -  -  		pop 	hl 							; get address into HL'
   35 00:4382 23 -  -  -  		inc 	hl 							; point 2 bytes forward
   36 00:4383 23 -  -  -  		inc  	hl
   37 00:4384 7E 23 66 6F 		ld_ind_hl 							; read HL'HL from HL+2
   38 00:4388 D9 -  -  -  		exx 								; fix back
   39 00:4389 C9 -  -  -  		ret
   40 00:438A -  -  -  -  
   41 00:438A -  -  -  -  _DeRefByte:		
   42 00:438A 7E -  -  -  		ld	 	a,(hl) 						; read byte
   43 00:438B 21 00 00 -  		ld 		hl,$0000 					; and zero everything else.
   44 00:438E 6F -  -  -  		ld	 	l,a
   45 00:438F D9 -  -  -  		exx
   46 00:4390 21 00 00 -  		ld 		hl,$0000
   47 00:4393 D9 -  -  -  		exx
   48 00:4394 0E 00 -  -  		ld 		c,XTYPE_INTEGER 			; return as integer.
   49 00:4396 C9 -  -  -  		ret
   50 00:4397 -  -  -  -  
   51 00:4397 -  -  -  -  _DRInternal:
   52 00:4397 3E 04 C3 76 
              41 -  -  -  		ERR_DISABLED
   53 00:439C -  -  -  -  
   54 00:439C -  -  -  -  ; ***************************************************************************************
   55 00:439C -  -  -  -  ;
   56 00:439C -  -  -  -  ; 							Convert HL'HL to address in UHL
   57 00:439C -  -  -  -  ;
   58 00:439C -  -  -  -  ; ***************************************************************************************
   59 00:439C -  -  -  -  
   60 00:439C -  -  -  -  DRConvertHLHLToAddress:
   61 00:439C -  -  -  -  		#ifdef EZ80
   62 00:439C             		ld 		(AConvert),hl 				; two lower bytes at offset +0
   63 00:439C             		exx
   64 00:439C             		ld 		(AConvert+2),hl 			; two upper bytes at offset +2
   65 00:439C             		ld 		hl,$0000 					; zero HL'
   66 00:439C             		exx
   67 00:439C             		ld 		hl,(AConvert) 				; load UHL
   68 00:439C             		#endif
   69 00:439C C9 -  -  -  		ret
   70 00:439D -  -  -  -  
   71 00:439D -  -  -  -  ; ***************************************************************************************
   72 00:439D -  -  -  -  ;
   73 00:439D -  -  -  -  ; 							Convert address in UHL to HL'HL 
   74 00:439D -  -  -  -  ;
   75 00:439D -  -  -  -  ; ***************************************************************************************
   76 00:439D -  -  -  -  
   77 00:439D -  -  -  -  DRConvertAddressToHLHL:
   78 00:439D -  -  -  -  		#ifdef EZ80
   79 00:439D             		ld 		(AConvert),hl
   80 00:439D             		ld 		hl,$0000
   81 00:439D             		ld 		(AConvert+3),hl
   82 00:439D             		exx
   83 00:439D             		ld 		hl,(AConvert+2)
   84 00:439D             		exx
   85 00:439D             		xor 	a
   86 00:439D             		ld 		(AConvert+2),a
   87 00:439D             		ld 		hl,(AConvert)
   88 00:439D             		#endif
   89 00:439D C9 -  -  -  		ret
   90 00:439E -  -  -  -  
   91 00:439E -  -  -  -  ; ***************************************************************************************
   92 00:439E -  -  -  -  ;
   93 00:439E -  -  -  -  ;									Changes and Updates
   94 00:439E -  -  -  -  ;
   95 00:439E -  -  -  -  ; ***************************************************************************************
   96 00:439E -  -  -  -  ;
   97 00:439E -  -  -  -  ;		Date			Notes
   98 00:439E -  -  -  -  ;		==== 			=====
   99 00:439E -  -  -  -  ;
  100 00:439E -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   30 00:439E -  -  -  -  #include "core/expression/term.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
    1 00:439E -  -  -  -  ; ***************************************************************************************
    2 00:439E -  -  -  -  ; ***************************************************************************************
    3 00:439E -  -  -  -  ;
    4 00:439E -  -  -  -  ;		Name : 		term.asm
    5 00:439E -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:439E -  -  -  -  ;		Date : 		3rd June 2022
    7 00:439E -  -  -  -  ;		Reviewed :	No
    8 00:439E -  -  -  -  ;		Purpose :	Get a term into HL'HLC.
    9 00:439E -  -  -  -  ;
   10 00:439E -  -  -  -  ; ***************************************************************************************
   11 00:439E -  -  -  -  ; ***************************************************************************************
   12 00:439E -  -  -  -  
   13 00:439E -  -  -  -  #macro double_hlhl 							; doubles HL'HL
   14 00:439E             		add_hlhl_16
   15 00:439E             		exx
   16 00:439E             		adc_hlhl_16
   17 00:439E             		exx
   18 00:439E             #endmacro
   19 00:439E -  -  -  -  
   20 00:439E -  -  -  -  ; ***************************************************************************************
   21 00:439E -  -  -  -  ;
   22 00:439E -  -  -  -  ; 								Evaluate a term into HL'HL C
   23 00:439E -  -  -  -  ;
   24 00:439E -  -  -  -  ; ***************************************************************************************
   25 00:439E -  -  -  -  ;
   26 00:439E -  -  -  -  ; 		Terms can be:
   27 00:439E -  -  -  -  ;
   28 00:439E -  -  -  -  ;			<integer> 			42 						not negative
   29 00:439E -  -  -  -  ;			&<hex-integer 		&2A 					unary function, but done by hand.
   30 00:439E -  -  -  -  ; 			"<text>"			"Hello, world!"			ASCIIZ string.
   31 00:439E -  -  -  -  ; 			? ! - <term> 		!42 ?a -7 				special cases - unary functions which have
   32 00:439E -  -  -  -  ; 														binary equivalents so are handled differently
   33 00:439E -  -  -  -  ; 			<unary> 			len("Hello")			unary functions. Note that ( itself is a 
   34 00:439E -  -  -  -  ;														unary function, returning the value in parenthesis.
   35 00:439E -  -  -  -  ; 			identifier 			age 					No functions, so this will be a variable
   36 00:439E -  -  -  -  ; 														reference of some sort.
   37 00:439E -  -  -  -  ;
   38 00:439E -  -  -  -  ; ***************************************************************************************
   39 00:439E -  -  -  -  
   40 00:439E -  -  -  -  EvaluateTerm:		
   41 00:439E 0E 00 -  -  		ld 		c,XTYPE_INTEGER 			; set type to integer.
   42 00:43A0 D9 -  -  -  		exx
   43 00:43A1 21 00 00 -  		ld 		hl,$0000 					; zero HL'HL
   44 00:43A4 D9 -  -  -  		exx
   45 00:43A5 21 00 00 -  		ld 		hl,$0000		
   46 00:43A8 -  -  -  -  		;
   47 00:43A8 DD 7E 00 -  		ld 		a,(ix+0) 					; get first character.
   48 00:43AB FE 3F -  -  		cp 		STRING_MARKER 				; is it the string marker ($3F)
   49 00:43AD 28 39 -  -  		jr 		z,_ETStringMarker 			; if so, do the string code.
   50 00:43AF DA 4D 44 -  		jp 		c,_ETVariable 				; if so it is (at present) a variable $00-$2F
   51 00:43B2 CB 7F -  -  		bit 	7,a 						; is it a token $80-$FF
   52 00:43B4 C2 FC 43 -  		jp 		nz,_ETFoundKeyword 
   53 00:43B7 -  -  -  -  		;
   54 00:43B7 -  -  -  -  		; 		Remaining option is $40-$7F, which is an integer constant.
   55 00:43B7 -  -  -  -  		;
   56 00:43B7 -  -  -  -  _ETIntegerConstant:
   57 00:43B7 -  -  -  -  		;
   58 00:43B7 -  -  -  -  _ETIntegerLoop:		
   59 00:43B7 DD 7E 00 -  		ld 		a,(ix+0)
   60 00:43BA E6 3F -  -  		and 	$3F 						; get the actual digit part, 6 bits
   61 00:43BC B5 -  -  -  		or 		l 							; or into L
   62 00:43BD 6F -  -  -  		ld 		l,a
   63 00:43BE DD 23 -  -  		inc 	ix 							; look at next character.
   64 00:43C0 DD 7E 00 -  		ld 		a,(ix+0) 					; get next character
   65 00:43C3 C6 80 -  -  		add 	a,$80 						; this will map $40-$7F to $C0-$FF
   66 00:43C5 FE C0 -  -  		cp 		$C0 						; so if < $C0 wasn't $40-$7F
   67 00:43C7 D8 -  -  -  		ret 	c
   68 00:43C8 -  -  -  -  
   69 00:43C8 29 -  -  -  		double_hlhl 						; multiply HL'HL by 64. Bit wasteful but quickest.
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   70 00:43CD 29 -  -  -  		double_hlhl  						; (could have special code for first time)
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   71 00:43D2 29 -  -  -  		double_hlhl
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   72 00:43D7 29 -  -  -  		double_hlhl
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   73 00:43DC 29 -  -  -  		double_hlhl
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   74 00:43E1 29 -  -  -  		double_hlhl
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"

              D9 ED 6A D9 Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/term.asm"
   75 00:43E6 -  -  -  -  
   76 00:43E6 18 CF -  -  		jr 		_ETIntegerLoop 				; and get the next part of the integer if there is one.
   77 00:43E8 -  -  -  -  		;
   78 00:43E8 -  -  -  -  		; 		Found the $3F string marker.
   79 00:43E8 -  -  -  -  		;
   80 00:43E8 -  -  -  -  _ETStringMarker:		
   81 00:43E8 DD 23 -  -  		inc 	ix 							; skip string marker
   82 00:43EA DD 23 -  -  		inc 	ix 							; skip length, IX now points to ASCIIZ string.
   83 00:43EC DD E5 -  -  		push 	ix 							; put address in UHL
   84 00:43EE E1 -  -  -  		pop 	hl
   85 00:43EF 11 00 00 -  		ld 		de,$0000
   86 00:43F2 DD 5E FF -  		ld 		e,(ix-1) 					; get length to add into DE.
   87 00:43F5 DD 19 -  -  		add 	ix,de
   88 00:43F7 DD 23 -  -  		inc 	ix 							; and skip the zero terminating byte.
   89 00:43F9 0E 01 -  -  		ld 		c,XTYPE_STRING 				; mark it as a string object, address in UHL
   90 00:43FB C9 -  -  -  		ret
   91 00:43FC -  -  -  -  		;
   92 00:43FC -  -  -  -  		; 		Found a keyword $80-$FF, check for unary function, then check for & and then the dual use operators.
   93 00:43FC -  -  -  -  		;
   94 00:43FC -  -  -  -  _ETFoundKeyword:
   95 00:43FC DD 23 -  -  		inc 	ix 							; skip token, which is in A.
   96 00:43FE FE 93 -  -  		cp 		KWC_FIRST_UNARY 			; check if level 0 unary function
   97 00:4400 38 19 -  -  		jr 		c,_ETNotUnaryFunction0
   98 00:4402 FE 9E -  -  		cp 		KWC_FIRST_NORMAL 
   99 00:4404 30 15 -  -  		jr 		nc,_ETNotUnaryFunction0
  100 00:4406 -  -  -  -  		;
  101 00:4406 -  -  -  -  		;		Unary group 0
  102 00:4406 -  -  -  -  		;
  103 00:4406 E6 7F 21 00 
              00 6F 29 11 
              D6 46 19 5E 
              23 56 ED 53 
              4E 40 -  -  		dispatch(VectorsSet0) 				; set up call address
  104 00:4418 C3 4D 40 -  		jp 		JumpCode 					; and go there.
  105 00:441B -  -  -  -  
  106 00:441B -  -  -  -  _ETNotUnaryFunction0:	
  107 00:441B FE 89 -  -  		cp 		KWD_MINUS 					; is it -term ?
  108 00:441D 20 07 -  -  		jr 		nz,_ETCheckIndirection
  109 00:441F -  -  -  -  		;
  110 00:441F -  -  -  -  		; 		- term
  111 00:441F -  -  -  -  		;
  112 00:441F CD 9E 43 -  		call 	EvaluateTerm 				; evaluate term
  113 00:4422 CD DD 42 -  		call 	NegateHLHL 					; negate HLHL type defpendent.
  114 00:4425 C9 -  -  -  		ret
  115 00:4426 -  -  -  -  		;
  116 00:4426 -  -  -  -  		;		! ? indirection check
  117 00:4426 -  -  -  -  		;
  118 00:4426 -  -  -  -  _ETCheckIndirection:	
  119 00:4426 FE 84 -  -  		cp 		KWD_QMARK 					; check if ? !
  120 00:4428 28 05 -  -  		jr 		z,_ETIndirection
  121 00:442A FE 83 -  -  		cp 		KWD_PLING
  122 00:442C C2 D3 41 -  		jp 		nz,SyntaxError 				; give up otherwise.
  123 00:442F -  -  -  -  		;
  124 00:442F -  -  -  -  		; 		! ? indirection
  125 00:442F -  -  -  -  		;
  126 00:442F -  -  -  -  _ETIndirection:
  127 00:442F F5 -  -  -  		push 	af 							; check type of indirection.
  128 00:4430 CD 9E 43 -  		call 	EvaluateTerm 				; get reference value to HL'HL
  129 00:4433 CD 6E 43 -  		call 	Dereference 				; dereference it so it's a value.
  130 00:4436 CB 41 -  -  		bit 	CIsString,c 				; check it is an integer.
  131 00:4438 20 0E -  -  		jr 		nz,_ETStringIndirect
  132 00:443A CD 9C 43 -  		call 	DRConvertHLHLtoAddress 		; make it a real physical address in UHL.
  133 00:443D F1 -  -  -  		pop 	af 							; get type back
  134 00:443E 0E 00 -  -  		ld 		c,XTYPE_INTEGER 			; integer ?
  135 00:4440 CB F9 -  -  		set 	CIsReference,c
  136 00:4442 FE 83 -  -  		cp 		KWD_PLING
  137 00:4444 C8 -  -  -  		ret 	z
  138 00:4445 CB F1 -  -  		set 	CIsByteReference,c 			; otherwise it's a byte reference
  139 00:4447 C9 -  -  -  		ret
  140 00:4448 -  -  -  -  _ETStringIndirect:
  141 00:4448 3E 02 C3 76 
              41 -  -  -  		ERR_BADTYPE 						; tried to do !?<string>		
  142 00:444D -  -  -  -  		;
  143 00:444D -  -  -  -  		; 		Found an identifier.
  144 00:444D -  -  -  -  		;
  145 00:444D -  -  -  -  _ETVariable:
  146 00:444D 3E 0C C3 76 
              41 -  -  -  		ERR_TODO
  147 00:4452 3E 0D C3 76 
              41 -  -  -  		ERR_UNKNOWNVAR 						; unknown variable
  148 00:4457 -  -  -  -  		
  149 00:4457 -  -  -  -  ; ***************************************************************************************
  150 00:4457 -  -  -  -  ;
  151 00:4457 -  -  -  -  ;									Changes and Updates
  152 00:4457 -  -  -  -  ;
  153 00:4457 -  -  -  -  ; ***************************************************************************************
  154 00:4457 -  -  -  -  ;
  155 00:4457 -  -  -  -  ;		Date			Notes
  156 00:4457 -  -  -  -  ;		==== 			=====
  157 00:4457 -  -  -  -  ;
  158 00:4457 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   31 00:4457 -  -  -  -  #include "core/expression/unary/page.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/unary/page.asm"
    1 00:4457 -  -  -  -  ; ***************************************************************************************
    2 00:4457 -  -  -  -  ; ***************************************************************************************
    3 00:4457 -  -  -  -  ;
    4 00:4457 -  -  -  -  ;		Name : 		page.asm
    5 00:4457 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4457 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4457 -  -  -  -  ;		Reviewed :	No
    8 00:4457 -  -  -  -  ;		Purpose :	Various constants.
    9 00:4457 -  -  -  -  ;
   10 00:4457 -  -  -  -  ; ***************************************************************************************
   11 00:4457 -  -  -  -  ; ***************************************************************************************
   12 00:4457 -  -  -  -  
   13 00:4457 -  -  -  -  ; ***************************************************************************************
   14 00:4457 -  -  -  -  ;
   15 00:4457 -  -  -  -  ;							page unary function (no bracket)
   16 00:4457 -  -  -  -  ;
   17 00:4457 -  -  -  -  ; ***************************************************************************************
   18 00:4457 -  -  -  -  
   19 00:4457 -  -  -  -  Unary_Page:	;; [page]
   20 00:4457 2A 31 40 -  			ld 		hl,(CodeAddress) 		; get address of code
   21 00:445A D9 -  -  -  			exx
   22 00:445B 2A 33 40 -  			ld 		hl,(CodeAddress+2)
   23 00:445E D9 -  -  -  			exx
   24 00:445F 0E 00 -  -  			ld 		c,XTYPE_INTEGER 		; this makes it an integer.
   25 00:4461 C9 -  -  -  			ret
   26 00:4462 -  -  -  -  
   27 00:4462 -  -  -  -  ; ***************************************************************************************
   28 00:4462 -  -  -  -  ;
   29 00:4462 -  -  -  -  ;									Changes and Updates
   30 00:4462 -  -  -  -  ;
   31 00:4462 -  -  -  -  ; ***************************************************************************************
   32 00:4462 -  -  -  -  ;
   33 00:4462 -  -  -  -  ;		Date			Notes
   34 00:4462 -  -  -  -  ;		==== 			=====
   35 00:4462 -  -  -  -  ;
   36 00:4462 -  -  -  -  ; ***************************************************************************************
   37 00:4462 -  -  -  -  			
Listing for file "_build.asm"
   32 00:4462 -  -  -  -  #include "core/expression/unary/simple.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/expression/unary/simple.asm"
    1 00:4462 -  -  -  -  ; ***************************************************************************************
    2 00:4462 -  -  -  -  ; ***************************************************************************************
    3 00:4462 -  -  -  -  ;
    4 00:4462 -  -  -  -  ;		Name : 		simple.asm
    5 00:4462 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4462 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4462 -  -  -  -  ;		Reviewed :	No
    8 00:4462 -  -  -  -  ;		Purpose :	Brackets, @ and & unary functions
    9 00:4462 -  -  -  -  ;
   10 00:4462 -  -  -  -  ; ***************************************************************************************
   11 00:4462 -  -  -  -  ; ***************************************************************************************
   12 00:4462 -  -  -  -  
   13 00:4462 -  -  -  -  ; ***************************************************************************************
   14 00:4462 -  -  -  -  ;
   15 00:4462 -  -  -  -  ;								( unary function (think about it)
   16 00:4462 -  -  -  -  ;
   17 00:4462 -  -  -  -  ; ***************************************************************************************
   18 00:4462 -  -  -  -  
   19 00:4462 -  -  -  -  Unary_Brackets:	;; [(]
   20 00:4462 CD EB 42 -  		call 	EvaluateAtPrecedence0
   21 00:4465 C3 51 41 -  		jp  	CheckRightBracket
   22 00:4468 -  -  -  -  
   23 00:4468 -  -  -  -  ; ***************************************************************************************
   24 00:4468 -  -  -  -  ;
   25 00:4468 -  -  -  -  ;									Handle &x
   26 00:4468 -  -  -  -  ;
   27 00:4468 -  -  -  -  ; ***************************************************************************************
   28 00:4468 -  -  -  -  
   29 00:4468 -  -  -  -  Unary_Ampersand: 	;; [&]
   30 00:4468 DD 7E 00 -  		ld 			a,(ix+0) 				; check followed by a number
   31 00:446B E6 C0 -  -  		and 		$C0
   32 00:446D FE 40 -  -  		cp 			$40
   33 00:446F C2 D3 41 -  		jp 			nz,SyntaxError 			; no then error
   34 00:4472 C3 9E 43 -  		jp 			EvaluateTerm 			; yes, reenter Term code.
   35 00:4475 -  -  -  -  
   36 00:4475 -  -  -  -  ; ***************************************************************************************
   37 00:4475 -  -  -  -  ;
   38 00:4475 -  -  -  -  ;									Changes and Updates
   39 00:4475 -  -  -  -  ;
   40 00:4475 -  -  -  -  ; ***************************************************************************************
   41 00:4475 -  -  -  -  ;
   42 00:4475 -  -  -  -  ;		Date			Notes
   43 00:4475 -  -  -  -  ;		==== 			=====
   44 00:4475 -  -  -  -  ;
   45 00:4475 -  -  -  -  ; ***************************************************************************************
   46 00:4475 -  -  -  -  		
Listing for file "_build.asm"
   33 00:4475 -  -  -  -  #include "core/setup/clear.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/setup/clear.asm"
    1 00:4475 -  -  -  -  ; ***************************************************************************************
    2 00:4475 -  -  -  -  ; ***************************************************************************************
    3 00:4475 -  -  -  -  ;
    4 00:4475 -  -  -  -  ;		Name : 		clear.asm
    5 00:4475 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4475 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4475 -  -  -  -  ;		Reviewed :	No
    8 00:4475 -  -  -  -  ;		Purpose :	Clear command.
    9 00:4475 -  -  -  -  ;
   10 00:4475 -  -  -  -  ; ***************************************************************************************
   11 00:4475 -  -  -  -  ; ***************************************************************************************
   12 00:4475 -  -  -  -  
   13 00:4475 -  -  -  -  ; ***************************************************************************************
   14 00:4475 -  -  -  -  ;
   15 00:4475 -  -  -  -  ;										CLEAR command
   16 00:4475 -  -  -  -  ;
   17 00:4475 -  -  -  -  ; ***************************************************************************************
   18 00:4475 -  -  -  -  
   19 00:4475 -  -  -  -  Command_CLEAR: 	;; [clear]
   20 00:4475 -  -  -  -  		;
   21 00:4475 -  -  -  -  		;			Reset the low free memory pointer (e.g. just above the program space.)
   22 00:4475 -  -  -  -  		;
   23 00:4475 2A 29 40 -  		ld 		hl,(LowMemory) 				; base memory
   24 00:4478 -  -  -  -  _CCFindLow:
   25 00:4478 11 00 00 -  		ld 		de,0 						; keep adding [hl] till [hl] was zero.
   26 00:447B 5E -  -  -  		ld 		e,(hl)		
   27 00:447C 19 -  -  -  		add 	hl,de
   28 00:447D 7B -  -  -  		ld 		a,e
   29 00:447E B7 -  -  -  		or 		a
   30 00:447F 20 F7 -  -  		jr 		nz,_CCFindLow
   31 00:4481 23 -  -  -  		inc 	hl 							; one past the last $00, one for luck
   32 00:4482 23 -  -  -  		inc 	hl
   33 00:4483 22 41 40 -  		ld 		(LowAllocMemory),hl
   34 00:4486 -  -  -  -  		;
   35 00:4486 -  -  -  -  		; 	 		Reset the language stack
   36 00:4486 -  -  -  -  		;
   37 00:4486 2A 2D 40 -  		ld 		hl,(HighMemory) 			; this is high memory, also top of stack
   38 00:4489 -  -  -  -  		;
   39 00:4489 36 FF -  -  		ld 		(hl),$FF 					; top of stack marker.
   40 00:448B 22 35 40 -  		ld 		(LanguageStack),hl 			; going down from here		
   41 00:448E 11 00 F8 -  		ld 		de,-LanguageStackSize 		; allocate space for language stack.
   42 00:4491 19 -  -  -  		add 	hl,de
   43 00:4492 2E 00 -  -  		ld 		l,$00 						; put on page boundary.
   44 00:4494 22 39 40 -  		ld 		(LanguageStackEnd),hl 		; where it runs out.
   45 00:4497 -  -  -  -  		;
   46 00:4497 11 80 FF -  		ld 		de,-128 					; allow 128 bytes for the 26 x 4 integer variables.
   47 00:449A 19 -  -  -  		add 	hl,de
   48 00:449B 22 3D 40 -  		ld 		(StandardIntegers),hl
   49 00:449E -  -  -  -  		;
   50 00:449E -  -  -  -  		; 		TODO:Allocate space for, and erase all hash table pointers, 
   51 00:449E -  -  -  -  		;
   52 00:449E -  -  -  -  
   53 00:449E -  -  -  -  		;
   54 00:449E -  -  -  -  		; 		TODO:Seed the RNG incase the seeds were all zero which gives bad results
   55 00:449E -  -  -  -  		;
   56 00:449E -  -  -  -  
   57 00:449E C9 -  -  -  		ret
   58 00:449F -  -  -  -  
   59 00:449F -  -  -  -  ; ***************************************************************************************
   60 00:449F -  -  -  -  ;
   61 00:449F -  -  -  -  ;									Changes and Updates
   62 00:449F -  -  -  -  ;
   63 00:449F -  -  -  -  ; ***************************************************************************************
   64 00:449F -  -  -  -  ;
   65 00:449F -  -  -  -  ;		Date			Notes
   66 00:449F -  -  -  -  ;		==== 			=====
   67 00:449F -  -  -  -  ;
   68 00:449F -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   34 00:449F -  -  -  -  #include "core/setup/instance.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/setup/instance.asm"
    1 00:449F -  -  -  -  ; ***************************************************************************************
    2 00:449F -  -  -  -  ; ***************************************************************************************
    3 00:449F -  -  -  -  ;
    4 00:449F -  -  -  -  ;		Name : 		instance.asm
    5 00:449F -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:449F -  -  -  -  ;		Date : 		3rd June 2022
    7 00:449F -  -  -  -  ;		Reviewed :	No
    8 00:449F -  -  -  -  ;		Purpose :	Instance handling
    9 00:449F -  -  -  -  ;
   10 00:449F -  -  -  -  ; ***************************************************************************************
   11 00:449F -  -  -  -  ; ***************************************************************************************
   12 00:449F -  -  -  -  
   13 00:449F -  -  -  -  ; ***************************************************************************************
   14 00:449F -  -  -  -  ;
   15 00:449F -  -  -  -  ;				Switch to instance beginning at DE and ending at HL
   16 00:449F -  -  -  -  ;
   17 00:449F -  -  -  -  ; ***************************************************************************************
   18 00:449F -  -  -  -  
   19 00:449F -  -  -  -  SetCurrentInstance:
   20 00:449F ED 53 29 40 		ld 		(LowMemory),de 				; set low and high memory
   21 00:44A3 22 2D 40 -  		ld 		(HighMemory),hl 
   22 00:44A6 ED 53 31 40 		ld 		(CodeAddress),de 			; program code is at the start.
   23 00:44AA -  -  -  -  
   24 00:44AA C9 -  -  -  		ret
   25 00:44AB -  -  -  -  
   26 00:44AB -  -  -  -  
   27 00:44AB -  -  -  -  ; ***************************************************************************************
   28 00:44AB -  -  -  -  ;
   29 00:44AB -  -  -  -  ;									Changes and Updates
   30 00:44AB -  -  -  -  ;
   31 00:44AB -  -  -  -  ; ***************************************************************************************
   32 00:44AB -  -  -  -  ;
   33 00:44AB -  -  -  -  ;		Date			Notes
   34 00:44AB -  -  -  -  ;		==== 			=====
   35 00:44AB -  -  -  -  ;
   36 00:44AB -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   35 00:44AB -  -  -  -  #include "core/setup/new.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/setup/new.asm"
    1 00:44AB -  -  -  -  ; ***************************************************************************************
    2 00:44AB -  -  -  -  ; ***************************************************************************************
    3 00:44AB -  -  -  -  ;
    4 00:44AB -  -  -  -  ;		Name : 		new.asm
    5 00:44AB -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:44AB -  -  -  -  ;		Date : 		3rd June 2022
    7 00:44AB -  -  -  -  ;		Reviewed :	No
    8 00:44AB -  -  -  -  ;		Purpose :	New command.
    9 00:44AB -  -  -  -  ;
   10 00:44AB -  -  -  -  ; ***************************************************************************************
   11 00:44AB -  -  -  -  ; ***************************************************************************************
   12 00:44AB -  -  -  -  
   13 00:44AB -  -  -  -  ; ***************************************************************************************
   14 00:44AB -  -  -  -  ;
   15 00:44AB -  -  -  -  ;										NEW command
   16 00:44AB -  -  -  -  ;
   17 00:44AB -  -  -  -  ; ***************************************************************************************
   18 00:44AB -  -  -  -  
   19 00:44AB -  -  -  -  Command_NEW: 	;; [new]
   20 00:44AB 2A 31 40 -  		ld 		hl,(CodeAddress) 			; write $00 at start of code erasing program
   21 00:44AE 36 00 -  -  		ld 		(hl),0
   22 00:44B0 CD 75 44 -  		call 	Command_CLEAR 				; clear all variables
   23 00:44B3 3E 00 C3 76 
              41 -  -  -  		ERR_WARMSTART 						; warm start.		
Listing for file "/home/paulr/Projects/dax-basic/source/core/setup/new.asm"
   24 00:44B8 -  -  -  -  
   25 00:44B8 -  -  -  -  ; ***************************************************************************************
   26 00:44B8 -  -  -  -  ;
   27 00:44B8 -  -  -  -  ;									Changes and Updates
   28 00:44B8 -  -  -  -  ;
   29 00:44B8 -  -  -  -  ; ***************************************************************************************
   30 00:44B8 -  -  -  -  ;
   31 00:44B8 -  -  -  -  ;		Date			Notes
   32 00:44B8 -  -  -  -  ;		==== 			=====
   33 00:44B8 -  -  -  -  ;
   34 00:44B8 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   36 00:44B8 -  -  -  -  #include "core/utility/utility.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/core/utility/utility.asm"
    1 00:44B8 -  -  -  -  ; ***************************************************************************************
    2 00:44B8 -  -  -  -  ; ***************************************************************************************
    3 00:44B8 -  -  -  -  ;
    4 00:44B8 -  -  -  -  ;		Name : 		utility.asm
    5 00:44B8 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:44B8 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:44B8 -  -  -  -  ;		Reviewed :	No
    8 00:44B8 -  -  -  -  ;		Purpose :	Utility routines
    9 00:44B8 -  -  -  -  ;
   10 00:44B8 -  -  -  -  ; ***************************************************************************************
   11 00:44B8 -  -  -  -  ; ***************************************************************************************
   12 00:44B8 -  -  -  -  
   13 00:44B8 -  -  -  -  ; ***************************************************************************************
   14 00:44B8 -  -  -  -  ;
   15 00:44B8 -  -  -  -  ;							Print ASCIIZ string at HL
   16 00:44B8 -  -  -  -  ;
   17 00:44B8 -  -  -  -  ; ***************************************************************************************
   18 00:44B8 -  -  -  -  
   19 00:44B8 -  -  -  -  PrintStringAtHL:
   20 00:44B8 7E -  -  -  		ld 		a,(hl)
   21 00:44B9 B7 -  -  -  		or 		a
   22 00:44BA C8 -  -  -  		ret 	z
   23 00:44BB CD 40 49 -  		call 	SYSPrintChar
   24 00:44BE 23 -  -  -  		inc 	hl
   25 00:44BF 18 F7 -  -  		jr 		PrintStringAtHL
   26 00:44C1 -  -  -  -  
   27 00:44C1 -  -  -  -  ; ***************************************************************************************
   28 00:44C1 -  -  -  -  ;
   29 00:44C1 -  -  -  -  ;									Changes and Updates
   30 00:44C1 -  -  -  -  ;
   31 00:44C1 -  -  -  -  ; ***************************************************************************************
   32 00:44C1 -  -  -  -  ;
   33 00:44C1 -  -  -  -  ;		Date			Notes
   34 00:44C1 -  -  -  -  ;		==== 			=====
   35 00:44C1 -  -  -  -  ;
   36 00:44C1 -  -  -  -  ; ***************************************************************************************
   37 00:44C1 -  -  -  -  		
Listing for file "_build.asm"
   37 00:44C1 -  -  -  -  #include "generated/kwd_keywords.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/kwd_keywords.asm"
    1 00:44C1 -  -  -  -  ;
    2 00:44C1 -  -  -  -  ;	This file is automatically generated.
    3 00:44C1 -  -  -  -  ;
    4 00:44C1 -  -  -  -  ;
    5 00:44C1 -  -  -  -  ;	Keywords for set 0
    6 00:44C1 -  -  -  -  ;
    7 00:44C1 -  -  -  -  KeywordsSet0:
    8 00:44C1 01 20 -  -  	.db	1," "              ; $0080
    9 00:44C3 01 20 -  -  	.db	1," "              ; $0081
   10 00:44C5 01 20 -  -  	.db	1," "              ; $0082
   11 00:44C7 01 21 -  -  	.db	1,"!"              ; $0083
   12 00:44C9 01 3F -  -  	.db	1,"?"              ; $0084
   13 00:44CB 01 2A -  -  	.db	1,"*"              ; $0085
   14 00:44CD 01 2F -  -  	.db	1,"/"              ; $0086
   15 00:44CF 03 4D 4F 44 	.db	3,"MOD"            ; $0087
   16 00:44D3 01 2B -  -  	.db	1,"+"              ; $0088
   17 00:44D5 01 2D -  -  	.db	1,"-"              ; $0089
   18 00:44D7 02 3E 3D -  	.db	2,">="             ; $008a
   19 00:44DA 02 3C 3D -  	.db	2,"<="             ; $008b
   20 00:44DD 01 3E -  -  	.db	1,">"              ; $008c
   21 00:44DF 01 3C -  -  	.db	1,"<"              ; $008d
   22 00:44E1 01 3D -  -  	.db	1,"="              ; $008e
   23 00:44E3 02 3C 3E -  	.db	2,"<>"             ; $008f
   24 00:44E6 03 41 4E 44 	.db	3,"AND"            ; $0090
   25 00:44EA 02 4F 52 -  	.db	2,"OR"             ; $0091
   26 00:44ED 03 45 4F 52 	.db	3,"EOR"            ; $0092
   27 00:44F1 01 26 -  -  	.db	1,"&"              ; $0093
   28 00:44F3 01 28 -  -  	.db	1,"("              ; $0094
   29 00:44F5 01 24 -  -  	.db	1,"$"              ; $0095
   30 00:44F7 03 52 4E 44 	.db	3,"RND"            ; $0096
   31 00:44FB 03 4C 45 4E 	.db	3,"LEN"            ; $0097
   32 00:44FF 03 41 42 53 	.db	3,"ABS"            ; $0098
   33 00:4503 03 53 47 4E 	.db	3,"SGN"            ; $0099
   34 00:4507 03 49 4E 54 	.db	3,"INT"            ; $009a
   35 00:450B 04 53 54 52 
              24 -  -  -  	.db	4,"STR$"           ; $009b
   36 00:4510 03 41 53 43 	.db	3,"ASC"            ; $009c
   37 00:4514 04 50 41 47 
              45 -  -  -  	.db	4,"PAGE"           ; $009d
   38 00:4519 01 29 -  -  	.db	1,")"              ; $009e
   39 00:451B 01 2C -  -  	.db	1,","              ; $009f
   40 00:451D 01 3A -  -  	.db	1,":"              ; $00a0
   41 00:451F 01 3B -  -  	.db	1,";"              ; $00a1
   42 00:4521 01 27 -  -  	.db	1,"'"              ; $00a2
   43 00:4523 06 52 45 50 
              45 41 54 -  	.db	6,"REPEAT"         ; $00a3
   44 00:452A 05 55 4E 54 
              49 4C -  -  	.db	5,"UNTIL"          ; $00a4
   45 00:4530 02 49 46 -  	.db	2,"IF"             ; $00a5
   46 00:4533 04 54 48 45 
              4E -  -  -  	.db	4,"THEN"           ; $00a6
   47 00:4538 04 45 4C 53 
              45 -  -  -  	.db	4,"ELSE"           ; $00a7
   48 00:453D 03 46 4F 52 	.db	3,"FOR"            ; $00a8
   49 00:4541 02 54 4F -  	.db	2,"TO"             ; $00a9
   50 00:4544 04 53 54 45 
              50 -  -  -  	.db	4,"STEP"           ; $00aa
   51 00:4549 04 4E 45 58 
              54 -  -  -  	.db	4,"NEXT"           ; $00ab
   52 00:454E 03 44 45 46 	.db	3,"DEF"            ; $00ac
   53 00:4552 04 50 52 4F 
              43 -  -  -  	.db	4,"PROC"           ; $00ad
   54 00:4557 07 45 4E 44 
              50 52 4F 43 	.db	7,"ENDPROC"        ; $00ae
   55 00:455F 05 4C 4F 43 
              41 4C -  -  	.db	5,"LOCAL"          ; $00af
   56 00:4565 03 44 49 4D 	.db	3,"DIM"            ; $00b0
   57 00:4569 03 52 45 4D 	.db	3,"REM"            ; $00b1
   58 00:456D 03 4C 45 54 	.db	3,"LET"            ; $00b2
   59 00:4571 03 56 44 55 	.db	3,"VDU"            ; $00b3
   60 00:4575 05 50 52 49 
              4E 54 -  -  	.db	5,"PRINT"          ; $00b4
   61 00:457B 04 4C 4F 41 
              44 -  -  -  	.db	4,"LOAD"           ; $00b5
   62 00:4580 04 53 41 56 
              45 -  -  -  	.db	4,"SAVE"           ; $00b6
   63 00:4585 04 4C 49 53 
              54 -  -  -  	.db	4,"LIST"           ; $00b7
   64 00:458A 03 4E 45 57 	.db	3,"NEW"            ; $00b8
   65 00:458E 03 52 55 4E 	.db	3,"RUN"            ; $00b9
   66 00:4592 04 52 45 41 
              44 -  -  -  	.db	4,"READ"           ; $00ba
   67 00:4597 04 44 41 54 
              41 -  -  -  	.db	4,"DATA"           ; $00bb
   68 00:459C 07 52 45 53 
              54 4F 52 45 	.db	7,"RESTORE"        ; $00bc
   69 00:45A4 06 41 53 53 
              45 52 54 -  	.db	6,"ASSERT"         ; $00bd
   70 00:45AB 05 43 4C 45 
              41 52 -  -  	.db	5,"CLEAR"          ; $00be
   71 00:45B1 03 45 4E 44 	.db	3,"END"            ; $00bf
   72 00:45B5 04 53 54 4F 
              50 -  -  -  	.db	4,"STOP"           ; $00c0
   73 00:45BA 00 -  -  -  	.db	0
   74 00:45BB -  -  -  -  ;
   75 00:45BB -  -  -  -  ;	Keywords for set 1
   76 00:45BB -  -  -  -  ;
   77 00:45BB -  -  -  -  KeywordsSet1:
   78 00:45BB 00 -  -  -  	.db	0
   79 00:45BC -  -  -  -  ;
   80 00:45BC -  -  -  -  ;	Keywords for set 2
   81 00:45BC -  -  -  -  ;
   82 00:45BC -  -  -  -  KeywordsSet2:
   83 00:45BC 00 -  -  -  	.db	0
Listing for file "_build.asm"
   38 00:45BD -  -  -  -  #include "generated/kwd_misc.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/kwd_misc.asm"
    1 00:45BD -  -  -  -  ;
    2 00:45BD -  -  -  -  ;	This file is automatically generated.
    3 00:45BD -  -  -  -  ;
    4 00:45BD 00 00 00 -  	.block	$20-($ & $1F)
    5 00:45C0 -  -  -  -  PrecedenceTable:
    6 00:45C0 06 -  -  -  	.db	6	; $0083 !
    7 00:45C1 06 -  -  -  	.db	6	; $0084 ?
    8 00:45C2 05 -  -  -  	.db	5	; $0085 *
    9 00:45C3 05 -  -  -  	.db	5	; $0086 /
   10 00:45C4 05 -  -  -  	.db	5	; $0087 mod
   11 00:45C5 04 -  -  -  	.db	4	; $0088 +
   12 00:45C6 04 -  -  -  	.db	4	; $0089 -
   13 00:45C7 03 -  -  -  	.db	3	; $008a >=
   14 00:45C8 03 -  -  -  	.db	3	; $008b <=
   15 00:45C9 03 -  -  -  	.db	3	; $008c >
   16 00:45CA 03 -  -  -  	.db	3	; $008d <
   17 00:45CB 03 -  -  -  	.db	3	; $008e =
   18 00:45CC 03 -  -  -  	.db	3	; $008f <>
   19 00:45CD 02 -  -  -  	.db	2	; $0090 and
   20 00:45CE 01 -  -  -  	.db	1	; $0091 or
   21 00:45CF 01 -  -  -  	.db	1	; $0092 eor
   22 00:45D0 -  -  -  -  
Listing for file "_build.asm"
   39 00:45D0 -  -  -  -  #include "generated/messagetext.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/messagetext.asm"
    1 00:45D0 -  -  -  -  ;
    2 00:45D0 -  -  -  -  ;	This is automatically generated.
    3 00:45D0 -  -  -  -  ;
    4 00:45D0 -  -  -  -  ErrorIDTable:
    5 00:45D0 08 46 00 00 	.dw	ErrText_warmstart & $FFFF,ErrText_warmstart >> 16
    6 00:45D4 0E 46 00 00 	.dw	ErrText_assert & $FFFF,ErrText_assert >> 16
    7 00:45D8 1F 46 00 00 	.dw	ErrText_badtype & $FFFF,ErrText_badtype >> 16
    8 00:45DC 2D 46 00 00 	.dw	ErrText_badvalue & $FFFF,ErrText_badvalue >> 16
    9 00:45E0 37 46 00 00 	.dw	ErrText_disabled & $FFFF,ErrText_disabled >> 16
   10 00:45E4 51 46 00 00 	.dw	ErrText_divzero & $FFFF,ErrText_divzero >> 16
   11 00:45E8 62 46 00 00 	.dw	ErrText_memory & $FFFF,ErrText_memory >> 16
   12 00:45EC 70 46 00 00 	.dw	ErrText_nocomma & $FFFF,ErrText_nocomma >> 16
   13 00:45F0 7E 46 00 00 	.dw	ErrText_norbracket & $FFFF,ErrText_norbracket >> 16
   14 00:45F4 94 46 00 00 	.dw	ErrText_notref & $FFFF,ErrText_notref >> 16
   15 00:45F8 A2 46 00 00 	.dw	ErrText_stop & $FFFF,ErrText_stop >> 16
   16 00:45FC A7 46 00 00 	.dw	ErrText_syntax & $FFFF,ErrText_syntax >> 16
   17 00:4600 B4 46 00 00 	.dw	ErrText_todo & $FFFF,ErrText_todo >> 16
   18 00:4604 C5 46 00 00 	.dw	ErrText_unknownvar & $FFFF,ErrText_unknownvar >> 16
   19 00:4608 -  -  -  -  
   20 00:4608 -  -  -  -  ErrText_warmstart:
   21 00:4608 52 65 61 64 
              79 00 -  -  	.db "Ready",0
   22 00:460E -  -  -  -  ErrText_assert:
   23 00:460E 41 73 73 65 
              72 74 69 6F 
              6E 20 66 61 
              69 6C 65 64 
              00 -  -  -  	.db "Assertion failed",0
   24 00:461F -  -  -  -  ErrText_badtype:
   25 00:461F 54 79 70 65 
              20 4D 69 73 
              6D 61 74 63 
              68 00 -  -  	.db "Type Mismatch",0
   26 00:462D -  -  -  -  ErrText_badvalue:
   27 00:462D 42 61 64 20 
              56 61 6C 75 
              65 00 -  -  	.db "Bad Value",0
   28 00:4637 -  -  -  -  ErrText_disabled:
   29 00:4637 46 75 6E 63 
              74 69 6F 6E 
              61 6C 69 74 
              79 20 6E 6F 
              74 20 65 6E 
              61 62 6C 65 
              64 00 -  -  	.db "Functionality not enabled",0
   30 00:4651 -  -  -  -  ErrText_divzero:
   31 00:4651 44 69 76 69 
              73 69 6F 6E 
              20 62 79 20 
              5A 65 72 6F 
              00 -  -  -  	.db "Division by Zero",0
   32 00:4662 -  -  -  -  ErrText_memory:
   33 00:4662 4F 75 74 20 
              6F 66 20 6D 
              65 6D 6F 72 
              79 00 -  -  	.db "Out of memory",0
   34 00:4670 -  -  -  -  ErrText_nocomma:
   35 00:4670 4D 69 73 73 
              69 6E 67 20 
              43 6F 6D 6D 
              61 00 -  -  	.db "Missing Comma",0
   36 00:467E -  -  -  -  ErrText_norbracket:
   37 00:467E 4D 69 73 73 
              69 6E 67 20 
              52 69 67 68 
              74 20 42 72 
              61 63 6B 65 
              74 00 -  -  	.db "Missing Right Bracket",0
   38 00:4694 -  -  -  -  ErrText_notref:
   39 00:4694 43 61 6E 6E 
              6F 74 20 61 
              73 73 69 67 
              6E 00 -  -  	.db "Cannot assign",0
   40 00:46A2 -  -  -  -  ErrText_stop:
   41 00:46A2 53 74 6F 70 
              00 -  -  -  	.db "Stop",0
   42 00:46A7 -  -  -  -  ErrText_syntax:
   43 00:46A7 53 79 6E 74 
              61 78 20 45 
              72 72 6F 72 
              00 -  -  -  	.db "Syntax Error",0
   44 00:46B4 -  -  -  -  ErrText_todo:
   45 00:46B4 43 6F 64 65 
              20 6E 6F 74 
              20 77 72 69 
              74 74 65 6E 
              00 -  -  -  	.db "Code not written",0
   46 00:46C5 -  -  -  -  ErrText_unknownvar:
   47 00:46C5 55 6E 6B 6E 
              6F 77 6E 20 
              56 61 72 69 
              61 62 6C 65 
              00 -  -  -  	.db "Unknown Variable",0
Listing for file "_build.asm"
   40 00:46D6 -  -  -  -  #include "generated/vectors.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/generated/vectors.asm"
    1 00:46D6 -  -  -  -  ;
    2 00:46D6 -  -  -  -  ;	Vectors for set 0
    3 00:46D6 -  -  -  -  ;
    4 00:46D6 -  -  -  -  VectorsSet0:
    5 00:46D6 C1 40 -  -  	addr(EOLHandler)                 ; $0080 [[eol]]
Listing for file "/home/paulr/Projects/dax-basic/source/generated/vectors.asm"
    6 00:46D8 1F 40 -  -  	addr(Unimplemented)              ; $0081 [[shift1]]
    7 00:46DA 1F 40 -  -  	addr(Unimplemented)              ; $0082 [[shift2]]
    8 00:46DC 30 42 -  -  	addr(ALULongReference)           ; $0083 !
    9 00:46DE 38 42 -  -  	addr(ALUByteReference)           ; $0084 ?
   10 00:46E0 EE 41 -  -  	addr(ALUMultiply)                ; $0085 *
   11 00:46E2 F9 41 -  -  	addr(ALUDivide)                  ; $0086 /
   12 00:46E4 04 42 -  -  	addr(ALUModulus)                 ; $0087 mod
   13 00:46E6 D8 41 -  -  	addr(ALUAdd)                     ; $0088 +
   14 00:46E8 E3 41 -  -  	addr(ALUSubtract)                ; $0089 -
   15 00:46EA 8B 42 -  -  	addr(ALUCompareGreaterEqual)     ; $008a >=
   16 00:46EC 82 42 -  -  	addr(ALUCompareLessEqual)        ; $008b <=
   17 00:46EE 70 42 -  -  	addr(ALUCompareGreater)          ; $008c >
   18 00:46F0 67 42 -  -  	addr(ALUCompareLess)             ; $008d <
   19 00:46F2 5E 42 -  -  	addr(ALUCompareEqual)            ; $008e =
   20 00:46F4 79 42 -  -  	addr(ALUCompareNotEqual)         ; $008f <>
   21 00:46F6 0F 42 -  -  	addr(ALUAnd)                     ; $0090 and
   22 00:46F8 1A 42 -  -  	addr(ALUOr)                      ; $0091 or
   23 00:46FA 25 42 -  -  	addr(ALUXor)                     ; $0092 eor
   24 00:46FC 68 44 -  -  	addr(Unary_Ampersand)            ; $0093 &
   25 00:46FE 62 44 -  -  	addr(Unary_Brackets)             ; $0094 (
   26 00:4700 1F 40 -  -  	addr(Unimplemented)              ; $0095 $
   27 00:4702 1F 40 -  -  	addr(Unimplemented)              ; $0096 rnd
   28 00:4704 1F 40 -  -  	addr(Unimplemented)              ; $0097 len
   29 00:4706 1F 40 -  -  	addr(Unimplemented)              ; $0098 abs
   30 00:4708 1F 40 -  -  	addr(Unimplemented)              ; $0099 sgn
   31 00:470A 1F 40 -  -  	addr(Unimplemented)              ; $009a int
   32 00:470C 1F 40 -  -  	addr(Unimplemented)              ; $009b str$
   33 00:470E 1F 40 -  -  	addr(Unimplemented)              ; $009c asc
   34 00:4710 57 44 -  -  	addr(Unary_Page)                 ; $009d page
   35 00:4712 B8 40 -  -  	addr(BadCmd_RBracket)            ; $009e )
   36 00:4714 B8 40 -  -  	addr(BadCmd_Comma)               ; $009f ,
   37 00:4716 BB 40 -  -  	addr(Command_Colon)              ; $00a0 :
   38 00:4718 B8 40 -  -  	addr(BadCmd_SemiColon)           ; $00a1 ;
   39 00:471A D4 40 -  -  	addr(Command_REM2)               ; $00a2 '
   40 00:471C 1F 40 -  -  	addr(Unimplemented)              ; $00a3 repeat
   41 00:471E 1F 40 -  -  	addr(Unimplemented)              ; $00a4 until
   42 00:4720 1F 40 -  -  	addr(Unimplemented)              ; $00a5 if
   43 00:4722 B8 40 -  -  	addr(BadCmd_Then)                ; $00a6 then
   44 00:4724 1F 40 -  -  	addr(Unimplemented)              ; $00a7 else
   45 00:4726 1F 40 -  -  	addr(Unimplemented)              ; $00a8 for
   46 00:4728 B8 40 -  -  	addr(BadCmd_To)                  ; $00a9 to
   47 00:472A 1F 40 -  -  	addr(Unimplemented)              ; $00aa step
   48 00:472C 1F 40 -  -  	addr(Unimplemented)              ; $00ab next
   49 00:472E B8 40 -  -  	addr(BadCmd_Defproc)             ; $00ac def
   50 00:4730 1F 40 -  -  	addr(Unimplemented)              ; $00ad proc
   51 00:4732 1F 40 -  -  	addr(Unimplemented)              ; $00ae endproc
   52 00:4734 1F 40 -  -  	addr(Unimplemented)              ; $00af local
   53 00:4736 1F 40 -  -  	addr(Unimplemented)              ; $00b0 dim
   54 00:4738 D4 40 -  -  	addr(Command_REM)                ; $00b1 rem
   55 00:473A 1F 40 -  -  	addr(Unimplemented)              ; $00b2 let
   56 00:473C 1F 40 -  -  	addr(Unimplemented)              ; $00b3 vdu
   57 00:473E 1F 40 -  -  	addr(Unimplemented)              ; $00b4 print
   58 00:4740 1F 40 -  -  	addr(Unimplemented)              ; $00b5 load
   59 00:4742 1F 40 -  -  	addr(Unimplemented)              ; $00b6 save
   60 00:4744 1F 40 -  -  	addr(Unimplemented)              ; $00b7 list
   61 00:4746 AB 44 -  -  	addr(Command_NEW)                ; $00b8 new
   62 00:4748 EF 40 -  -  	addr(Command_RUN)                ; $00b9 run
   63 00:474A 1F 40 -  -  	addr(Unimplemented)              ; $00ba read
   64 00:474C 1F 40 -  -  	addr(Unimplemented)              ; $00bb data
   65 00:474E 1F 40 -  -  	addr(Unimplemented)              ; $00bc restore
   66 00:4750 A9 40 -  -  	addr(Command_ASSERT)             ; $00bd assert
   67 00:4752 75 44 -  -  	addr(Command_CLEAR)              ; $00be clear
   68 00:4754 BC 40 -  -  	addr(Command_END)                ; $00bf end
   69 00:4756 4C 41 -  -  	addr(Command_STOP)               ; $00c0 stop
   70 00:4758 -  -  -  -  ;
   71 00:4758 -  -  -  -  ;	Vectors for set 1
   72 00:4758 -  -  -  -  ;
   73 00:4758 -  -  -  -  VectorsSet1:
   74 00:4758 -  -  -  -  ;
   75 00:4758 -  -  -  -  ;	Vectors for set 2
   76 00:4758 -  -  -  -  ;
   77 00:4758 -  -  -  -  VectorsSet2:
Listing for file "_build.asm"
   41 00:4758 -  -  -  -  #include "int32/idivide.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/idivide.asm"
    1 00:4758 -  -  -  -  ; ***************************************************************************************
    2 00:4758 -  -  -  -  ; ***************************************************************************************
    3 00:4758 -  -  -  -  ;
    4 00:4758 -  -  -  -  ;		Name : 		idivide.asm
    5 00:4758 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4758 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4758 -  -  -  -  ;		Reviewed :	No
    8 00:4758 -  -  -  -  ;		Purpose :	Divide HL'HL by DE'DE and variants
    9 00:4758 -  -  -  -  ;
   10 00:4758 -  -  -  -  ; ***************************************************************************************
   11 00:4758 -  -  -  -  ; ***************************************************************************************
   12 00:4758 -  -  -  -  
   13 00:4758 -  -  -  -  ; ***************************************************************************************
   14 00:4758 -  -  -  -  ;
   15 00:4758 -  -  -  -  ;								Unsigned integer divide
   16 00:4758 -  -  -  -  ;
   17 00:4758 -  -  -  -  ; ***************************************************************************************
   18 00:4758 -  -  -  -  
   19 00:4758 -  -  -  -  Int32UDivide:
   20 00:4758 37 -  -  -  		scf
   21 00:4759 C3 97 47 -  		jp 		_I32UnsignedDivide		
   22 00:475C -  -  -  -  
   23 00:475C -  -  -  -  ; ***************************************************************************************
   24 00:475C -  -  -  -  ;
   25 00:475C -  -  -  -  ;							Signed integer divide/Modulus
   26 00:475C -  -  -  -  ;
   27 00:475C -  -  -  -  ; ***************************************************************************************
   28 00:475C -  -  -  -  
   29 00:475C -  -  -  -  Int32SDivide:
   30 00:475C 37 -  -  -  		scf
   31 00:475D 18 01 -  -  		jr 		_I32SDivide
   32 00:475F -  -  -  -  Int32Modulus:
   33 00:475F AF -  -  -  		xor 	a
   34 00:4760 -  -  -  -  _I32SDivide:
   35 00:4760 08 -  -  -  		ex 		af,af' 						; push AF'
   36 00:4761 F5 -  -  -  		push 	af
   37 00:4762 08 -  -  -  		ex 		af,af'
   38 00:4763 -  -  -  -  
   39 00:4763 D5 -  -  -  		push 	de 							; push DE'DE as we might remove sign
   40 00:4764 D9 -  -  -  		exx
   41 00:4765 D5 -  -  -  		push 	de
   42 00:4766 D9 -  -  -  		exx
   43 00:4767 -  -  -  -  
   44 00:4767 F5 -  -  -  		push 	af 							; save flag (CS Divide, CC Modulus) on stack.
   45 00:4768 AF -  -  -  		xor 	a 							; clear sign count.
   46 00:4769 CD 85 47 -  		call 	_I32CheckHLSignSwap
   47 00:476C CD 85 47 -  		call 	_I32CheckHLSignSwap
   48 00:476F 08 -  -  -  		ex 		af,af' 						; save count in AF'
   49 00:4770 F1 -  -  -  		pop 	af 							; get/save function flag
   50 00:4771 F5 -  -  -  		push 	af
   51 00:4772 CD 97 47 -  		call 	_I32UnsignedDivide 			; do the unsigned divide or modulus
   52 00:4775 F1 -  -  -  		pop 	af 							; get function back
   53 00:4776 30 06 -  -  		jr 		nc,_I32SDExit 				; if modulus don't reapply the sign
   54 00:4778 08 -  -  -  		ex 	 	af,af' 						; get count
   55 00:4779 CB 47 -  -  		bit 	0,a 						; if even do not reapply sign
   56 00:477B C4 E0 48 -  		call 	nz,Int32Negate 				; if odd, reapply sign.
   57 00:477E -  -  -  -  _I32SDExit:
   58 00:477E D9 -  -  -  		exx 								; restore DE'DE
   59 00:477F D1 -  -  -  		pop 	de
   60 00:4780 D9 -  -  -  		exx
   61 00:4781 D1 -  -  -  		pop 	de
   62 00:4782 F1 -  -  -  		pop 	af 							; restore AF'	
   63 00:4783 08 -  -  -  		ex 		af,af'
   64 00:4784 C9 -  -  -  		ret
   65 00:4785 -  -  -  -  
   66 00:4785 -  -  -  -  
   67 00:4785 -  -  -  -  _I32CheckHLSignSwap:
   68 00:4785 D9 -  -  -  		exx 								; check if HL'HL is negative.
   69 00:4786 CB 7C -  -  		bit 	7,h
   70 00:4788 D9 -  -  -  		exx
   71 00:4789 28 07 -  -  		jr 		z,_I32CHSPositive 		
   72 00:478B -  -  -  -  		;
   73 00:478B C6 01 -  -  		add 	a,1 						; if so increment counter in A
   74 00:478D F5 -  -  -  		push 	af  						; negate HL'HL preserving A
   75 00:478E CD E0 48 -  		call 	Int32Negate 				
   76 00:4791 F1 -  -  -  		pop 	af
   77 00:4792 -  -  -  -  _I32CHSPositive:
   78 00:4792 D9 -  -  -  		exx 	 							; swap HL'HL and DE'DE
   79 00:4793 EB -  -  -  		ex 		de,hl
   80 00:4794 D9 -  -  -  		exx		
   81 00:4795 EB -  -  -  		ex 		de,hl
   82 00:4796 C9 -  -  -  		ret
   83 00:4797 -  -  -  -  
   84 00:4797 -  -  -  -  ; ***************************************************************************************
   85 00:4797 -  -  -  -  ;
   86 00:4797 -  -  -  -  ;		Divide HL'HL by DE'DE. Preserves BC'BC and DE'DE. If CS return carry else 
   87 00:4797 -  -  -  -  ;		return the modulus. Always returns modulus LSB in A.
   88 00:4797 -  -  -  -  ;
   89 00:4797 -  -  -  -  ; ***************************************************************************************
   90 00:4797 -  -  -  -  
   91 00:4797 -  -  -  -  _I32UnsignedDivide:
   92 00:4797 C5 -  -  -  		push 	bc 							; save BC'BC and DE'DE
   93 00:4798 D5 -  -  -  		push 	de
   94 00:4799 D9 -  -  -  		exx
   95 00:479A C5 -  -  -  		push 	bc
   96 00:479B D5 -  -  -  		push 	de 							
   97 00:479C D9 -  -  -  		exx
   98 00:479D -  -  -  -  
   99 00:479D F5 -  -  -  		push 	af 							; save CS for exit check
  100 00:479E -  -  -  -  
  101 00:479E 7A -  -  -  		ld 		a,d 						; check if DE = 0
  102 00:479F B3 -  -  -  		or 		e
  103 00:47A0 D9 -  -  -  		exx
  104 00:47A1 B2 -  -  -  		or 		d
  105 00:47A2 B3 -  -  -  		or 		e
  106 00:47A3 D9 -  -  -  		exx
  107 00:47A4 CA 24 40 -  		jp 		z,Int32DivZeroHandler 		; if so, error.
  108 00:47A7 -  -  -  -  
  109 00:47A7 -  -  -  -  
  110 00:47A7 44 -  -  -  		ld 		b,h 						; put Q (divisor) in BC, clear A (result)
  111 00:47A8 4D -  -  -  		ld		c,l
  112 00:47A9 21 00 00 -  		ld 		hl,$0000
  113 00:47AC D9 -  -  -  		exx
  114 00:47AD 44 -  -  -  		ld 		b,h
  115 00:47AE 4D -  -  -  		ld		c,l
  116 00:47AF 21 00 00 -  		ld 		hl,$0000
  117 00:47B2 D9 -  -  -  		exx
  118 00:47B3 -  -  -  -  
  119 00:47B3 3E 20 -  -  		ld 		a,32 						; loop counter
  120 00:47B5 -  -  -  -  _I32DivideLoop:
  121 00:47B5 F5 -  -  -  		push 	af
  122 00:47B6 -  -  -  -  
  123 00:47B6 CB 21 -  -  		sla 	c 							; shift AQ left : A = HL'HL Q = BC'BC
  124 00:47B8 CB 10 -  -  		rl 		b
  125 00:47BA D9 -  -  -  		exx
  126 00:47BB CB 11 -  -  		rl 		c
  127 00:47BD CB 10 -  -  		rl 		b
  128 00:47BF D9 -  -  -  		exx
  129 00:47C0 CB 15 -  -  		rl 		l
  130 00:47C2 CB 14 -  -  		rl 		h
  131 00:47C4 D9 -  -  -  		exx
  132 00:47C5 CB 15 -  -  		rl 		l
  133 00:47C7 CB 14 -  -  		rl 		h
  134 00:47C9 D9 -  -  -  		exx
  135 00:47CA -  -  -  -  
  136 00:47CA CD 86 48 -  		call 	Int32Subtract 				; A = A - M
  137 00:47CD 38 03 -  -  		jr 		c,_I32Borrow 				; borrow, failed to subtract.
  138 00:47CF -  -  -  -  
  139 00:47CF 0C -  -  -  		inc 	c 							; set the low bit of BC'BC
  140 00:47D0 18 03 -  -  		jr 		_I32Next
  141 00:47D2 -  -  -  -  
  142 00:47D2 -  -  -  -  _I32Borrow:
  143 00:47D2 CD 80 48 -  		call 	Int32Add 					; A = A + M
  144 00:47D5 -  -  -  -  _I32Next:
  145 00:47D5 F1 -  -  -  		pop 	af
  146 00:47D6 3D -  -  -  		dec 	a
  147 00:47D7 20 DC -  -  		jr 		nz,_I32DivideLoop		 	; result is in BC'BC, remainder in HL'HL
  148 00:47D9 -  -  -  -  
  149 00:47D9 F1 -  -  -  		pop 	af 							; CS if divide, CC if modulus
  150 00:47DA -  -  -  -  
  151 00:47DA 7D -  -  -  		ld 		a,l 						; A has LSB of modulus.
  152 00:47DB 30 06 -  -  		jr 		nc,_I32Modulus1
  153 00:47DD -  -  -  -  
  154 00:47DD 60 -  -  -  		ld  	h,b
  155 00:47DE 69 -  -  -  		ld 		l,c
  156 00:47DF D9 -  -  -  		exx
  157 00:47E0 60 -  -  -  		ld  	h,b
  158 00:47E1 69 -  -  -  		ld 		l,c
  159 00:47E2 D9 -  -  -  		exx
  160 00:47E3 -  -  -  -  _I32Modulus1:		
  161 00:47E3 D9 -  -  -  		exx 								; restore BC'BC and DE'DE
  162 00:47E4 D1 -  -  -  		pop 	de
  163 00:47E5 C1 -  -  -  		pop 	bc
  164 00:47E6 D9 -  -  -  		exx
  165 00:47E7 D1 -  -  -  		pop 	de
  166 00:47E8 C1 -  -  -  		pop 	bc
  167 00:47E9 C9 -  -  -  		ret
  168 00:47EA -  -  -  -  
  169 00:47EA -  -  -  -  ; ***************************************************************************************
  170 00:47EA -  -  -  -  ;
  171 00:47EA -  -  -  -  ;									Changes and Updates
  172 00:47EA -  -  -  -  ;
  173 00:47EA -  -  -  -  ; ***************************************************************************************
  174 00:47EA -  -  -  -  ;
  175 00:47EA -  -  -  -  ;		Date			Notes
  176 00:47EA -  -  -  -  ;		==== 			=====
  177 00:47EA -  -  -  -  ;
  178 00:47EA -  -  -  -  ; ***************************************************************************************
  179 00:47EA -  -  -  -  		
Listing for file "_build.asm"
   42 00:47EA -  -  -  -  #include "int32/ifromstring.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/ifromstring.asm"
    1 00:47EA -  -  -  -  ; ***************************************************************************************
    2 00:47EA -  -  -  -  ; ***************************************************************************************
    3 00:47EA -  -  -  -  ;
    4 00:47EA -  -  -  -  ;		Name : 		ifromstring.asm
    5 00:47EA -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:47EA -  -  -  -  ;		Date : 		3rd June 2022
    7 00:47EA -  -  -  -  ;		Reviewed :	No
    8 00:47EA -  -  -  -  ;		Purpose :	Convert string to integer.
    9 00:47EA -  -  -  -  ;
   10 00:47EA -  -  -  -  ; ***************************************************************************************
   11 00:47EA -  -  -  -  ; ***************************************************************************************
   12 00:47EA -  -  -  -  
   13 00:47EA -  -  -  -  ; ***************************************************************************************
   14 00:47EA -  -  -  -  ;
   15 00:47EA -  -  -  -  ;			Convert string at (BC) base A (-ve = sign) to number at HL'HL
   16 00:47EA -  -  -  -  ;			Return first 'bad' character in A, Z flag set if EOS.
   17 00:47EA -  -  -  -  ;
   18 00:47EA -  -  -  -  ; ***************************************************************************************
   19 00:47EA -  -  -  -  
   20 00:47EA -  -  -  -  Int32FromString:
   21 00:47EA C5 -  -  -   		push 	bc 							; save BC on stack
   22 00:47EB D9 -  -  -  		exx 								; push DE'DE on the stack
   23 00:47EC D5 -  -  -  		push 	de
   24 00:47ED D9 -  -  -  		exx
   25 00:47EE D5 -  -  -  		push 	de
   26 00:47EF -  -  -  -  
   27 00:47EF 21 00 00 -  		ld 		hl,$0000 					; zero HL'HL the result and the DE'DE
   28 00:47F2 11 00 00 -  		ld 		de,$0000
   29 00:47F5 D9 -  -  -  		exx
   30 00:47F6 21 00 00 -  		ld 		hl,$0000
   31 00:47F9 11 00 00 -  		ld 		de,$0000
   32 00:47FC D9 -  -  -  		exx
   33 00:47FD -  -  -  -  
   34 00:47FD 5F -  -  -  		ld 		e,a 						; base in E
   35 00:47FE CB 7F -  -  		bit 	7,a 						; base -ve e.g. do it signed
   36 00:4800 28 0D -  -  		jr 		z,_I32FSNotSigned
   37 00:4802 ED 44 -  -  		neg 		 						; fix up the base
   38 00:4804 5F -  -  -  		ld 		e,a 						; save in E.
   39 00:4805 -  -  -  -  		;
   40 00:4805 0A -  -  -  		ld 		a,(bc) 						; push first character on the stack.
   41 00:4806 F5 -  -  -  		push 	af
   42 00:4807 FE 2D -  -  		cp 		'-' 						; is it a minus ?
   43 00:4809 7B -  -  -  		ld 		a,e 						; restore base in A
   44 00:480A 20 04 -  -  		jr 		nz,_I32FSMain 				; (the compare above)
   45 00:480C 03 -  -  -  		inc 	bc 							; skip over it and start scanning
   46 00:480D 18 01 -  -  		jr 		_I32FSMain
   47 00:480F -  -  -  -  _I32FSNotSigned:		
   48 00:480F E5 -  -  -  		push 	hl 							; this is a dummy first char, will be zero.
   49 00:4810 -  -  -  -  		;
   50 00:4810 -  -  -  -  		; 		Main conversion loop.
   51 00:4810 -  -  -  -  		; 		
   52 00:4810 -  -  -  -  _I32FSMain:		
   53 00:4810 0A -  -  -  		ld 		a,(bc) 						; get next character
   54 00:4811 FE 60 -  -  		cp 		96 							; simple but sufficient L->U
   55 00:4813 38 02 -  -  		jr 		c,_I32FSNotLower
   56 00:4815 D6 20 -  -  		sub 	32
   57 00:4817 -  -  -  -  _I32FSNotLower:
   58 00:4817 FE 30 -  -  		cp 		'0' 						; check in range
   59 00:4819 38 21 -  -  		jr 		c,_I32FSExit
   60 00:481B FE 3A -  -  		cp 		'9'+1
   61 00:481D 38 0A -  -  		jr 		c,_I32FSOkay
   62 00:481F FE 41 -  -  		cp 		'A'
   63 00:4821 38 19 -  -  		jr 		c,_I32FSExit
   64 00:4823 FE 47 -  -  		cp 		'F'+1
   65 00:4825 30 15 -  -  		jr 		nc,_I32FSExit
   66 00:4827 D6 07 -  -  		sub 	7 							; hex->decimal mod.
   67 00:4829 -  -  -  -  _I32FSOkay:
   68 00:4829 D6 30 -  -  		sub 	'0' 						; now should be 0-15
   69 00:482B BB -  -  -  		cp 		e 							; fail if >= base
   70 00:482C 30 0E -  -  		jr 		nc,_I32FSExit 
   71 00:482E 03 -  -  -  		inc 	bc 							; consume character
   72 00:482F D5 -  -  -  		push 	de 							; save DE, containing base on stack.
   73 00:4830 F5 -  -  -  		push 	af 							; save additive on stack
   74 00:4831 CD 4A 48 -  		call 	Int32Multiply 				; result *= base
   75 00:4834 F1 -  -  -  		pop 	af 							; additive in DE
   76 00:4835 5F -  -  -  		ld 		e,a
   77 00:4836 CD 80 48 -  		call 	Int32Add 					; and add it.
   78 00:4839 D1 -  -  -  		pop 	de 							; restore DE containing base.
   79 00:483A 18 D4 -  -  		jr 		_I32FSMain 					; and go round the loop again.
   80 00:483C -  -  -  -  
   81 00:483C -  -  -  -  _I32FSExit:
   82 00:483C F1 -  -  -  		pop 	af 							; get sign back
   83 00:483D FE 2D -  -  		cp 		'-' 						; if -ve negate result
   84 00:483F CC E0 48 -  		call 	z,Int32Negate
   85 00:4842 0A -  -  -  		ld 		a,(bc) 						; get fail character
   86 00:4843 D1 -  -  -  		pop 	de 							; restore DE'DE BC
   87 00:4844 D9 -  -  -  		exx
   88 00:4845 D1 -  -  -  		pop 	de
   89 00:4846 D9 -  -  -  		exx
   90 00:4847 C1 -  -  -  		pop 	bc
   91 00:4848 B7 -  -  -  		or 		a 							; set Z flag if zero.
   92 00:4849 C9 -  -  -  		ret				
   93 00:484A -  -  -  -  
   94 00:484A -  -  -  -  ; ***************************************************************************************
   95 00:484A -  -  -  -  ;
   96 00:484A -  -  -  -  ;									Changes and Updates
   97 00:484A -  -  -  -  ;
   98 00:484A -  -  -  -  ; ***************************************************************************************
   99 00:484A -  -  -  -  ;
  100 00:484A -  -  -  -  ;		Date			Notes
  101 00:484A -  -  -  -  ;		==== 			=====
  102 00:484A -  -  -  -  ;
  103 00:484A -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   43 00:484A -  -  -  -  #include "int32/imultiply.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/imultiply.asm"
    1 00:484A -  -  -  -  ; ***************************************************************************************
    2 00:484A -  -  -  -  ; ***************************************************************************************
    3 00:484A -  -  -  -  ;
    4 00:484A -  -  -  -  ;		Name : 		imultiply.asm
    5 00:484A -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:484A -  -  -  -  ;		Date : 		3rd June 2022
    7 00:484A -  -  -  -  ;		Reviewed :	No
    8 00:484A -  -  -  -  ;		Purpose :	Multiply HL'HL by DE'DE
    9 00:484A -  -  -  -  ;
   10 00:484A -  -  -  -  ; ***************************************************************************************
   11 00:484A -  -  -  -  ; ***************************************************************************************
   12 00:484A -  -  -  -  
   13 00:484A -  -  -  -  Int32Multiply:
   14 00:484A C5 -  -  -  		push 	bc 							; save BC'BC and DE'DE, copy HL'HL to BC'BC and zero HL'HL
   15 00:484B D5 -  -  -  		push 	de
   16 00:484C 44 -  -  -  		ld 		b,h
   17 00:484D 4D -  -  -  		ld 		c,l
   18 00:484E 21 00 00 -  		ld 		hl,$0000
   19 00:4851 -  -  -  -  
   20 00:4851 D9 -  -  -  		exx
   21 00:4852 C5 -  -  -  		push 	bc
   22 00:4853 D5 -  -  -  		push 	de
   23 00:4854 44 -  -  -  		ld 		b,h
   24 00:4855 4D -  -  -  		ld 		c,l
   25 00:4856 21 00 00 -  		ld 		hl,$0000		
   26 00:4859 D9 -  -  -  		exx
   27 00:485A -  -  -  -  
   28 00:485A -  -  -  -  _I32MultiplyLoop:
   29 00:485A CB 41 -  -  		bit 	0,c 						; is bit 0 of BC'BC set ?
   30 00:485C C4 80 48 -  		call 	nz,Int32Add 				; add DE'DE to HL'HL
   31 00:485F -  -  -  -  		;
   32 00:485F D9 -  -  -  		exx 								; shift BC'BC right.
   33 00:4860 CB 38 -  -  		srl 	b
   34 00:4862 CB 19 -  -  		rr 		c
   35 00:4864 D9 -  -  -  		exx
   36 00:4865 CB 18 -  -  		rr 		b
   37 00:4867 CB 19 -  -  		rr 		c
   38 00:4869 -  -  -  -  		;
   39 00:4869 CB 23 -  -  		sla 	e 							; shift DE'DE left.
   40 00:486B CB 12 -  -  		rl 		d
   41 00:486D D9 -  -  -  		exx
   42 00:486E CB 13 -  -  		rl 		e
   43 00:4870 CB 12 -  -  		rl 		d
   44 00:4872 -  -  -  -  
   45 00:4872 78 -  -  -  		ld 		a,b 						; check BC is zero in last exx
   46 00:4873 B1 -  -  -  		or 		c
   47 00:4874 D9 -  -  -  		exx
   48 00:4875 B0 -  -  -  		or 		b
   49 00:4876 B1 -  -  -  		or 		c
   50 00:4877 20 E1 -  -  		jr 		nz,_I32MultiplyLoop
   51 00:4879 -  -  -  -  
   52 00:4879 D9 -  -  -  		exx  								; pop DE'DE and BC'BC
   53 00:487A D1 -  -  -  		pop 	de
   54 00:487B C1 -  -  -  		pop 	bc
   55 00:487C D9 -  -  -  		exx
   56 00:487D D1 -  -  -  		pop 	de
   57 00:487E C1 -  -  -  		pop 	bc
   58 00:487F C9 -  -  -  		ret
   59 00:4880 -  -  -  -  
   60 00:4880 -  -  -  -  ; ***************************************************************************************
   61 00:4880 -  -  -  -  ;
   62 00:4880 -  -  -  -  ;									Changes and Updates
   63 00:4880 -  -  -  -  ;
   64 00:4880 -  -  -  -  ; ***************************************************************************************
   65 00:4880 -  -  -  -  ;
   66 00:4880 -  -  -  -  ;		Date			Notes
   67 00:4880 -  -  -  -  ;		==== 			=====
   68 00:4880 -  -  -  -  ;
   69 00:4880 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   44 00:4880 -  -  -  -  #include "int32/isimple.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/isimple.asm"
    1 00:4880 -  -  -  -  ; ***************************************************************************************
    2 00:4880 -  -  -  -  ; ***************************************************************************************
    3 00:4880 -  -  -  -  ;
    4 00:4880 -  -  -  -  ;		Name : 		isimple.asm
    5 00:4880 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4880 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4880 -  -  -  -  ;		Reviewed :	No
    8 00:4880 -  -  -  -  ;		Purpose :	Simple 32 bit operations
    9 00:4880 -  -  -  -  ;
   10 00:4880 -  -  -  -  ; ***************************************************************************************
   11 00:4880 -  -  -  -  ; ***************************************************************************************
   12 00:4880 -  -  -  -  
   13 00:4880 -  -  -  -  ; ***************************************************************************************
   14 00:4880 -  -  -  -  ;
   15 00:4880 -  -  -  -  ;								Add DE'DE to HL'HL
   16 00:4880 -  -  -  -  ;
   17 00:4880 -  -  -  -  ; ***************************************************************************************
   18 00:4880 -  -  -  -  
   19 00:4880 -  -  -  -  Int32Add:
   20 00:4880 19 -  -  -  		zm_add_hlde_16 						; add DE to HL
Listing for file "/home/paulr/Projects/dax-basic/source/int32/isimple.asm"
   21 00:4881 D9 -  -  -  		exx
   22 00:4882 ED 5A -  -  		zm_adc_hlde_16 						; add DE' to HL'
   23 00:4884 D9 -  -  -  		exx
   24 00:4885 C9 -  -  -  		ret
   25 00:4886 -  -  -  -  
   26 00:4886 -  -  -  -  ; ***************************************************************************************
   27 00:4886 -  -  -  -  ;
   28 00:4886 -  -  -  -  ;								Sub DE'DE from HL'HL
   29 00:4886 -  -  -  -  ;
   30 00:4886 -  -  -  -  ; ***************************************************************************************
   31 00:4886 -  -  -  -  
   32 00:4886 -  -  -  -  Int32Subtract:
   33 00:4886 AF -  -  -  		xor 	a 							; clear carry
   34 00:4887 ED 52 -  -  		zm_sbc_hlde_16  					; subtract DE from HL
   35 00:4889 D9 -  -  -  		exx
   36 00:488A ED 52 -  -  		zm_sbc_hlde_16 						; subtrace DE' from HL'
   37 00:488C D9 -  -  -  		exx
   38 00:488D C9 -  -  -  		ret
   39 00:488E -  -  -  -  
   40 00:488E -  -  -  -  ; ***************************************************************************************
   41 00:488E -  -  -  -  ;
   42 00:488E -  -  -  -  ;								And DE'DE into HL'HL
   43 00:488E -  -  -  -  ;
   44 00:488E -  -  -  -  ; ***************************************************************************************
   45 00:488E -  -  -  -  
   46 00:488E -  -  -  -  Int32And:
   47 00:488E D9 -  -  -  		exx
   48 00:488F CD 93 48 -  		call 	_I32AndHLDE
   49 00:4892 D9 -  -  -  		exx
   50 00:4893 -  -  -  -  _I32AndHLDE:		
   51 00:4893 7C -  -  -  		ld 		a,h
   52 00:4894 A2 -  -  -  		and 	d
   53 00:4895 67 -  -  -  		ld 		h,a
   54 00:4896 7D -  -  -  		ld 		a,l
   55 00:4897 A3 -  -  -  		and 	e
   56 00:4898 6F -  -  -  		ld 		l,a
   57 00:4899 C9 -  -  -  		ret
   58 00:489A -  -  -  -  
   59 00:489A -  -  -  -  ; ***************************************************************************************
   60 00:489A -  -  -  -  ;
   61 00:489A -  -  -  -  ;								Or DE'DE into HL'HL
   62 00:489A -  -  -  -  ;
   63 00:489A -  -  -  -  ; ***************************************************************************************
   64 00:489A -  -  -  -  
   65 00:489A -  -  -  -  Int32Or:
   66 00:489A D9 -  -  -  		exx
   67 00:489B CD 9F 48 -  		call 	_I32OrHLDE
   68 00:489E D9 -  -  -  		exx
   69 00:489F -  -  -  -  _I32OrHLDE:		
   70 00:489F 7C -  -  -  		ld 		a,h
   71 00:48A0 B2 -  -  -  		or 		d
   72 00:48A1 67 -  -  -  		ld 		h,a
   73 00:48A2 7D -  -  -  		ld 		a,l
   74 00:48A3 B3 -  -  -  		or 		e
   75 00:48A4 6F -  -  -  		ld 		l,a
   76 00:48A5 C9 -  -  -  		ret
   77 00:48A6 -  -  -  -  
   78 00:48A6 -  -  -  -  ; ***************************************************************************************
   79 00:48A6 -  -  -  -  ;
   80 00:48A6 -  -  -  -  ;								Xor DE'DE into HL'HL
   81 00:48A6 -  -  -  -  ;
   82 00:48A6 -  -  -  -  ; ***************************************************************************************
   83 00:48A6 -  -  -  -  
   84 00:48A6 -  -  -  -  Int32Xor:
   85 00:48A6 D9 -  -  -  		exx
   86 00:48A7 CD AB 48 -  		call 	_I32XorHLDE
   87 00:48AA D9 -  -  -  		exx
   88 00:48AB -  -  -  -  _I32XorHLDE:		
   89 00:48AB 7C -  -  -  		ld 		a,h
   90 00:48AC AA -  -  -  		xor 	d
   91 00:48AD 67 -  -  -  		ld 		h,a
   92 00:48AE 7D -  -  -  		ld 		a,l
   93 00:48AF AB -  -  -  		xor 	e
   94 00:48B0 6F -  -  -  		ld 		l,a
   95 00:48B1 C9 -  -  -  		ret
   96 00:48B2 -  -  -  -  
   97 00:48B2 -  -  -  -  ; ***************************************************************************************
   98 00:48B2 -  -  -  -  ;
   99 00:48B2 -  -  -  -  ;								 Check if HL'HL zero
  100 00:48B2 -  -  -  -  ;
  101 00:48B2 -  -  -  -  ; ***************************************************************************************
  102 00:48B2 -  -  -  -  
  103 00:48B2 -  -  -  -  Int32Zero:
  104 00:48B2 D9 -  -  -  		exx
  105 00:48B3 7D -  -  -  		ld 		a,l
  106 00:48B4 B4 -  -  -  		or 		h
  107 00:48B5 D9 -  -  -  		exx
  108 00:48B6 B5 -  -  -  		or 		l
  109 00:48B7 B4 -  -  -  		or 		h
  110 00:48B8 C9 -  -  -  		ret
  111 00:48B9 -  -  -  -  
  112 00:48B9 -  -  -  -  ; ***************************************************************************************
  113 00:48B9 -  -  -  -  ;
  114 00:48B9 -  -  -  -  ;								Compare HL'HL vs DE'DE
  115 00:48B9 -  -  -  -  ;
  116 00:48B9 -  -  -  -  ; ***************************************************************************************
  117 00:48B9 -  -  -  -  
  118 00:48B9 -  -  -  -  Int32Compare:
  119 00:48B9 E5 -  -  -  		push 	hl 							; save HL
  120 00:48BA AF -  -  -  		xor 	a 							; clear carry
  121 00:48BB ED 52 -  -  		zm_sbc_hlde_16  					; subtract DE from HL
  122 00:48BD D9 -  -  -  		exx
  123 00:48BE E5 -  -  -  		push 	hl 							; save HL'
  124 00:48BF ED 52 -  -  		zm_sbc_hlde_16 						; subtrace DE' from HL'
  125 00:48C1 -  -  -  -  		;
  126 00:48C1 44 -  -  -  		ld 		b,h 						; save most significant byte in B
  127 00:48C2 E2 C9 48 -  		jp 		po,_I32CNoOverflow  		; on overflow flip B bit 7 (compare signed trick)
  128 00:48C5 78 -  -  -  		ld 		a,b
  129 00:48C6 EE 80 -  -  		xor 	$80
  130 00:48C8 47 -  -  -  		ld 		b,a
  131 00:48C9 -  -  -  -  _I32CNoOverflow:
  132 00:48C9 7C -  -  -  		ld 		a,h 						; work out if result is zero
  133 00:48CA B5 -  -  -  		or 		l
  134 00:48CB D9 -  -  -  		exx 
  135 00:48CC B4 -  -  -  		or 		h
  136 00:48CD B5 -  -  -  		or 		l
  137 00:48CE 28 0A -  -  		jr 		z,_I32NotPos 				; if zero, return zero.
  138 00:48D0 -  -  -  -  		;
  139 00:48D0 D9 -  -  -  		exx 								; is B' -ve 	
  140 00:48D1 CB 78 -  -  		bit 	7,b
  141 00:48D3 D9 -  -  -  		exx
  142 00:48D4 3E 01 -  -  		ld 		a,1 						; if B' +ve return 1.
  143 00:48D6 28 02 -  -  		jr 		z,_I32NotPos
  144 00:48D8 3E FF -  -  		ld 		a,$FF
  145 00:48DA -  -  -  -  _I32NotPos:
  146 00:48DA D9 -  -  -  		exx
  147 00:48DB E1 -  -  -  		pop 	hl 							; restore HL'
  148 00:48DC D9 -  -  -  		exx
  149 00:48DD E1 -  -  -  		pop 	hl 							; restore HL
  150 00:48DE B7 -  -  -  		or 		a 							; set flags and exit		
  151 00:48DF C9 -  -  -  		ret
  152 00:48E0 -  -  -  -  
  153 00:48E0 -  -  -  -  ; ***************************************************************************************
  154 00:48E0 -  -  -  -  ;
  155 00:48E0 -  -  -  -  ;										Negate HL'HL
  156 00:48E0 -  -  -  -  ;
  157 00:48E0 -  -  -  -  ; ***************************************************************************************
  158 00:48E0 -  -  -  -  
  159 00:48E0 -  -  -  -  Int32Negate:
  160 00:48E0 AF -  -  -  		xor 	a
  161 00:48E1 CD EA 48 -  		call 	_I32NSubtract
  162 00:48E4 D9 -  -  -  		exx
  163 00:48E5 CD EA 48 -  		call 	_I32NSubtract
  164 00:48E8 D9 -  -  -  		exx
  165 00:48E9 C9 -  -  -  		ret
  166 00:48EA -  -  -  -  _I32NSubtract:
  167 00:48EA D5 -  -  -  		push 	de
  168 00:48EB EB -  -  -  		ex 		de,hl
  169 00:48EC 21 00 00 -  		ld 		hl,$0000
  170 00:48EF ED 52 -  -  		zm_sbc_hlde_16		
  171 00:48F1 D1 -  -  -  		pop 	de
  172 00:48F2 C9 -  -  -  		ret
  173 00:48F3 -  -  -  -  		
  174 00:48F3 -  -  -  -  ; ***************************************************************************************
  175 00:48F3 -  -  -  -  ;
  176 00:48F3 -  -  -  -  ;									Changes and Updates
  177 00:48F3 -  -  -  -  ;
  178 00:48F3 -  -  -  -  ; ***************************************************************************************
  179 00:48F3 -  -  -  -  ;
  180 00:48F3 -  -  -  -  ;		Date			Notes
  181 00:48F3 -  -  -  -  ;		==== 			=====
  182 00:48F3 -  -  -  -  ;
  183 00:48F3 -  -  -  -  ; ***************************************************************************************
  184 00:48F3 -  -  -  -  		
Listing for file "_build.asm"
   45 00:48F3 -  -  -  -  #include "int32/itostring.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/int32/itostring.asm"
    1 00:48F3 -  -  -  -  ; ***************************************************************************************
    2 00:48F3 -  -  -  -  ; ***************************************************************************************
    3 00:48F3 -  -  -  -  ;
    4 00:48F3 -  -  -  -  ;		Name : 		itostring.asm
    5 00:48F3 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:48F3 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:48F3 -  -  -  -  ;		Reviewed :	No
    8 00:48F3 -  -  -  -  ;		Purpose :	Convert integer to string 
    9 00:48F3 -  -  -  -  ;
   10 00:48F3 -  -  -  -  ; ***************************************************************************************
   11 00:48F3 -  -  -  -  ;
   12 00:48F3 -  -  -  -  ; 			Convert HL'HL to ASCIIZ string at BC in base A. A = -ve => Signed
   13 00:48F3 -  -  -  -  ;
   14 00:48F3 -  -  -  -  ; ***************************************************************************************
   15 00:48F3 -  -  -  -  
   16 00:48F3 -  -  -  -  Int32ToString:
   17 00:48F3 C5 -  -  -  		push 	bc 							; save string start
   18 00:48F4 D5 -  -  -  		push 	de 							; save DE'DE and HL'HL, zero DE
   19 00:48F5 E5 -  -  -  		push 	hl
   20 00:48F6 11 00 00 -  		ld	 	de,$0000
   21 00:48F9 D9 -  -  -  		exx
   22 00:48FA D5 -  -  -  		push 	de
   23 00:48FB E5 -  -  -  		push 	hl
   24 00:48FC 11 00 00 -  		ld 		de,$000
   25 00:48FF D9 -  -  -  		exx
   26 00:4900 5F -  -  -  		ld 		e,a 						; put base in E
   27 00:4901 -  -  -  -  		;
   28 00:4901 CB 7F -  -  		bit 	7,a 						; -ve base => signed
   29 00:4903 28 10 -  -  		jr 		z,_I32TSNotNegative
   30 00:4905 ED 44 -  -  		neg 								; negate base and put in E
   31 00:4907 5F -  -  -  		ld 		e,a
   32 00:4908 -  -  -  -  		;
   33 00:4908 D9 -  -  -  		exx 								; is it -ve ?
   34 00:4909 CB 7C -  -  		bit 	7,h
   35 00:490B D9 -  -  -  		exx
   36 00:490C 28 07 -  -  		jr 		z,_I32TSNotNegative
   37 00:490E -  -  -  -  		;
   38 00:490E CD E0 48 -  		call 	Int32Negate 				; yes, negate HL'HL
   39 00:4911 -  -  -  -  		;
   40 00:4911 3E 2D -  -  		ld 		a,'-' 						; output a leading minus.
   41 00:4913 02 -  -  -  		ld 		(bc),a
   42 00:4914 03 -  -  -  		inc 	bc
   43 00:4915 -  -  -  -  _I32TSNotNegative:	
   44 00:4915 CD 22 49 -  		call 	_I32RecursiveConvert 		; convert the integer to a string		
   45 00:4918 -  -  -  -  _I32TSExit:
   46 00:4918 AF -  -  -  		xor 	a  							; write the end of string code
   47 00:4919 02 -  -  -  		ld 		(bc),a 
   48 00:491A -  -  -  -  
   49 00:491A D9 -  -  -  		exx 								; restore registers and exit.
   50 00:491B E1 -  -  -  		pop 	hl
   51 00:491C D1 -  -  -  		pop 	de
   52 00:491D D9 -  -  -  		exx
   53 00:491E E1 -  -  -  		pop 	hl
   54 00:491F D1 -  -  -  		pop 	de
   55 00:4920 C1 -  -  -  		pop 	bc
   56 00:4921 C9 -  -  -  		ret
   57 00:4922 -  -  -  -  
   58 00:4922 -  -  -  -  _I32RecursiveConvert:
   59 00:4922 CD 58 47 -  		call 	Int32UDivide 				; unsigned divide. Mod is in A
   60 00:4925 F5 -  -  -  		push 	af 							; save remainder
   61 00:4926 CD B2 48 -  		call 	Int32Zero		 			; check result is non zero
   62 00:4929 C4 22 49 -  		call 	nz,_I32RecursiveConvert 	; if non zero keep dividing
   63 00:492C F1 -  -  -  		pop 	af 							; restore remainder
   64 00:492D FE 0A -  -  		cp 		10 							; convert 10+ to hex
   65 00:492F 38 02 -  -  		jr 		c,_I32NotHex
   66 00:4931 C6 07 -  -  		add 	a,7
   67 00:4933 -  -  -  -  _I32NotHex:
   68 00:4933 C6 30 -  -  		add 	a,48
   69 00:4935 02 -  -  -  		ld 		(bc),a 						; write out to buffer
   70 00:4936 03 -  -  -  		inc 	bc
   71 00:4937 C9 -  -  -  		ret		
   72 00:4938 -  -  -  -  
   73 00:4938 -  -  -  -  ; ***************************************************************************************
   74 00:4938 -  -  -  -  ;
   75 00:4938 -  -  -  -  ;									Changes and Updates
   76 00:4938 -  -  -  -  ;
   77 00:4938 -  -  -  -  ; ***************************************************************************************
   78 00:4938 -  -  -  -  ;
   79 00:4938 -  -  -  -  ;		Date			Notes
   80 00:4938 -  -  -  -  ;		==== 			=====
   81 00:4938 -  -  -  -  ;
   82 00:4938 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   46 00:4938 -  -  -  -  #include "simplehardware/_aquarius/aquarius_io.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/simplehardware/_aquarius/aquarius_io.asm"
    1 00:4938 -  -  -  -  ; ***************************************************************************************
    2 00:4938 -  -  -  -  ; ***************************************************************************************
    3 00:4938 -  -  -  -  ;
    4 00:4938 -  -  -  -  ;		Name : 		aquarius_io.asm
    5 00:4938 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4938 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4938 -  -  -  -  ;		Reviewed :	No
    8 00:4938 -  -  -  -  ;		Purpose :	Aquarius specific code.
    9 00:4938 -  -  -  -  ;
   10 00:4938 -  -  -  -  ; ***************************************************************************************
   11 00:4938 -  -  -  -  ; ***************************************************************************************
   12 00:4938 -  -  -  -  
   13 00:4938 -  -  -  -  #ifdef AQUARIUS
   14 00:4938 -  -  -  -  
   15 00:4938 -  -  -  -  ; ***************************************************************************************
   16 00:4938 -  -  -  -  ;
   17 00:4938 -  -  -  -  ;								Initialise system stuff
   18 00:4938 -  -  -  -  ;
   19 00:4938 -  -  -  -  ; ***************************************************************************************
   20 00:4938 -  -  -  -  
   21 00:4938 -  -  -  -  SYSInitialise:
   22 00:4938 3E 0B -  -  	ld 		a,$0b 								; Aquarius clear screen
   23 00:493A CD 40 49 -  	call 	SYSPrintChar
   24 00:493D C9 -  -  -  	ret
   25 00:493E -  -  -  -  
   26 00:493E -  -  -  -  ; ***************************************************************************************
   27 00:493E -  -  -  -  ;
   28 00:493E -  -  -  -  ;								Terminate system stuff
   29 00:493E -  -  -  -  ;
   30 00:493E -  -  -  -  ; ***************************************************************************************
   31 00:493E -  -  -  -  
   32 00:493E -  -  -  -  SYSTerminate:
   33 00:493E 18 FE -  -  	jr 		SYSTerminate
   34 00:4940 -  -  -  -  
   35 00:4940 -  -  -  -  ; ***************************************************************************************
   36 00:4940 -  -  -  -  ;
   37 00:4940 -  -  -  -  ;								Print A character
   38 00:4940 -  -  -  -  ;
   39 00:4940 -  -  -  -  ; ***************************************************************************************
   40 00:4940 -  -  -  -  
   41 00:4940 -  -  -  -  SYSPrintChar:
   42 00:4940 F5 -  -  -  	push 	af 									; we stack everything including alt registers
   43 00:4941 C5 -  -  -  	push 	bc
   44 00:4942 D5 -  -  -  	push 	de
   45 00:4943 E5 -  -  -  	push 	hl
   46 00:4944 DD E5 -  -  	push 	ix
   47 00:4946 FD E5 -  -  	push 	iy
   48 00:4948 D9 -  -  -  	exx
   49 00:4949 C5 -  -  -  	push 	bc
   50 00:494A D5 -  -  -  	push 	de
   51 00:494B E5 -  -  -  	push 	hl
   52 00:494C CD 94 1D -  	call 	$1D94 								; the Aquarius equivalent uses alt-registers to save.
   53 00:494F E1 -  -  -  	pop 	hl
   54 00:4950 D1 -  -  -  	pop 	de
   55 00:4951 C1 -  -  -  	pop 	bc
   56 00:4952 D9 -  -  -  	exx
   57 00:4953 FD E1 -  -  	pop 	iy
   58 00:4955 DD E1 -  -  	pop 	ix
   59 00:4957 E1 -  -  -  	pop 	hl
   60 00:4958 D1 -  -  -  	pop 	de
   61 00:4959 C1 -  -  -  	pop 	bc
   62 00:495A F1 -  -  -  	pop 	af
   63 00:495B C9 -  -  -  	ret		
   64 00:495C -  -  -  -  
   65 00:495C -  -  -  -  ; ***************************************************************************************
   66 00:495C -  -  -  -  ;
   67 00:495C -  -  -  -  ;									Print Newline
   68 00:495C -  -  -  -  ;
   69 00:495C -  -  -  -  ; ***************************************************************************************
   70 00:495C -  -  -  -  
   71 00:495C -  -  -  -  SYSPrintCRLF:
   72 00:495C F5 -  -  -  	push 	af
   73 00:495D 3E 0D -  -  	ld 		a,13
   74 00:495F CD 40 49 -  	call 	SYSPrintChar
   75 00:4962 3E 0A -  -  	ld 		a,10
   76 00:4964 CD 40 49 -  	call 	SYSPrintChar
   77 00:4967 F1 -  -  -  	pop 	af
   78 00:4968 C9 -  -  -  	ret
   79 00:4969 -  -  -  -  
   80 00:4969 -  -  -  -  #endif
   81 00:4969 -  -  -  -  
   82 00:4969 -  -  -  -  ; ***************************************************************************************
   83 00:4969 -  -  -  -  ;
   84 00:4969 -  -  -  -  ;									Changes and Updates
   85 00:4969 -  -  -  -  ;
   86 00:4969 -  -  -  -  ; ***************************************************************************************
   87 00:4969 -  -  -  -  ;
   88 00:4969 -  -  -  -  ;		Date			Notes
   89 00:4969 -  -  -  -  ;		==== 			=====
   90 00:4969 -  -  -  -  ;
   91 00:4969 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   47 00:4969 -  -  -  -  #include "simplehardware/_dummy/dummy_io.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/simplehardware/_dummy/dummy_io.asm"
    1 00:4969 -  -  -  -  ; ***************************************************************************************
    2 00:4969 -  -  -  -  ; ***************************************************************************************
    3 00:4969 -  -  -  -  ;
    4 00:4969 -  -  -  -  ;		Name : 		dummy_io.asm
    5 00:4969 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4969 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4969 -  -  -  -  ;		Reviewed :	No
    8 00:4969 -  -  -  -  ;		Purpose :	eZ80 build System code.,a
    9 00:4969 -  -  -  -  ;
   10 00:4969 -  -  -  -  ; ***************************************************************************************
   11 00:4969 -  -  -  -  ; ***************************************************************************************
   12 00:4969 -  -  -  -  
   13 00:4969 -  -  -  -  #ifdef CLEANEZ80
   14 00:4969             
   15 00:4969             ; ***************************************************************************************
   16 00:4969             ;
   17 00:4969             ;								Initialise system stuff
   18 00:4969             ;
   19 00:4969             ; ***************************************************************************************
   20 00:4969             
   21 00:4969             SYSInitialise:
   22 00:4969             	ret
   23 00:4969             
   24 00:4969             ; ***************************************************************************************
   25 00:4969             ;
   26 00:4969             ;								Terminate system stuff
   27 00:4969             ;
   28 00:4969             ; ***************************************************************************************
   29 00:4969             
   30 00:4969             SYSTerminate:
   31 00:4969             	ret
   32 00:4969             
   33 00:4969             ; ***************************************************************************************
   34 00:4969             ;
   35 00:4969             ;								Print A character
   36 00:4969             ;
   37 00:4969             ; ***************************************************************************************
   38 00:4969             
   39 00:4969             SYSPrintChar:
   40 00:4969             	ret		
   41 00:4969             
   42 00:4969             ; ***************************************************************************************
   43 00:4969             ;
   44 00:4969             ;									Print Newline
   45 00:4969             ;
   46 00:4969             ; ***************************************************************************************
   47 00:4969             
   48 00:4969             SYSPrintCRLF:
   49 00:4969             	ret
   50 00:4969             
   51 00:4969             #endif
   52 00:4969 -  -  -  -  
   53 00:4969 -  -  -  -  ; ***************************************************************************************
   54 00:4969 -  -  -  -  ;
   55 00:4969 -  -  -  -  ;									Changes and Updates
   56 00:4969 -  -  -  -  ;
   57 00:4969 -  -  -  -  ; ***************************************************************************************
   58 00:4969 -  -  -  -  ;
   59 00:4969 -  -  -  -  ;		Date			Notes
   60 00:4969 -  -  -  -  ;		==== 			=====
   61 00:4969 -  -  -  -  ;
   62 00:4969 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   48 00:4969 -  -  -  -  #include "simplehardware/_ti84/ti_84io.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/simplehardware/_ti84/ti_84io.asm"
    1 00:4969 -  -  -  -  ; ***************************************************************************************
    2 00:4969 -  -  -  -  ; ***************************************************************************************
    3 00:4969 -  -  -  -  ;
    4 00:4969 -  -  -  -  ;		Name : 		ti84_io.asm
    5 00:4969 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4969 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4969 -  -  -  -  ;		Reviewed :	No
    8 00:4969 -  -  -  -  ;		Purpose :	TI84 specific code
    9 00:4969 -  -  -  -  ;
   10 00:4969 -  -  -  -  ; ***************************************************************************************
   11 00:4969 -  -  -  -  ; ***************************************************************************************
   12 00:4969 -  -  -  -  
   13 00:4969 -  -  -  -  #ifdef TI84
   14 00:4969             
   15 00:4969             ; ***************************************************************************************
   16 00:4969             ;
   17 00:4969             ;								Initialise system stuff
   18 00:4969             ;
   19 00:4969             ; ***************************************************************************************
   20 00:4969             
   21 00:4969             SYSInitialise:
   22 00:4969             	di
   23 00:4969             	ld 		(_StackTemp84),sp 					; TI84 we preserve IY and SP.
   24 00:4969             	ld 		(_IYTemp84),iy
   25 00:4969             	ret
   26 00:4969             
   27 00:4969             ; ***************************************************************************************
   28 00:4969             ;
   29 00:4969             ;								Terminate system stuff
   30 00:4969             ;
   31 00:4969             ; ***************************************************************************************
   32 00:4969             
   33 00:4969             SYSTerminate:
   34 00:4969             	ld 		sp,(_StackTemp84) 					; TI84 restore SP
   35 00:4969             	pop 	iy 									; throw return address from SYSInitialise call
   36 00:4969             	ld 		iy,(_IYTemp84) 						; restore IY
   37 00:4969             	res 	donePrgm,(iy+doneFlags) 			; marks program as complete (task switching ?)
   38 00:4969             	ei
   39 00:4969             	ret 										; and exit.
   40 00:4969             
   41 00:4969             _StackTemp84:									; temp var for TI84 only.
   42 00:4969             	.dw 	0,0
   43 00:4969             _IYTemp84:
   44 00:4969             	.dw 	0,0		
   45 00:4969             
   46 00:4969             ; ***************************************************************************************
   47 00:4969             ;
   48 00:4969             ;								Print A character
   49 00:4969             ;
   50 00:4969             ; ***************************************************************************************
   51 00:4969             
   52 00:4969             SYSPrintChar:
   53 00:4969             	push 	af 									; we stack everything including alt registers
   54 00:4969             	push 	bc
   55 00:4969             	push 	de
   56 00:4969             	push 	hl
   57 00:4969             	push 	ix
   58 00:4969             	push 	iy
   59 00:4969             	exx
   60 00:4969             	push 	bc
   61 00:4969             	push 	de
   62 00:4969             	push 	hl
   63 00:4969             
   64 00:4969             	ld 		iy,(_IYTemp84)
   65 00:4969             	call 	_PutC 								; print A as character
   66 00:4969             	di
   67 00:4969             	ld 		(_IYTemp84),iy
   68 00:4969             
   69 00:4969             	pop 	hl
   70 00:4969             	pop 	de
   71 00:4969             	pop 	bc
   72 00:4969             	exx
   73 00:4969             	pop 	iy
   74 00:4969             	pop 	ix
   75 00:4969             	pop 	hl
   76 00:4969             	pop 	de
   77 00:4969             	pop 	bc
   78 00:4969             	pop 	af
   79 00:4969             	ret		
   80 00:4969             
   81 00:4969             ; ***************************************************************************************
   82 00:4969             ;
   83 00:4969             ;									Print Newline
   84 00:4969             ;
   85 00:4969             ; ***************************************************************************************
   86 00:4969             
   87 00:4969             SYSPrintCRLF:
   88 00:4969             	push 	af 									; we stack everything including alt registers
   89 00:4969             	push 	bc
   90 00:4969             	push 	de
   91 00:4969             	push 	hl
   92 00:4969             	push 	ix
   93 00:4969             	push 	iy
   94 00:4969             	exx
   95 00:4969             	push 	bc
   96 00:4969             	push 	de
   97 00:4969             	push 	hl
   98 00:4969             
   99 00:4969             	ld 		iy,(_IYTemp84)
  100 00:4969             	call 	_newline
  101 00:4969             	di
  102 00:4969             	ld 		(_IYTemp84),iy
  103 00:4969             
  104 00:4969             	pop 	hl
  105 00:4969             	pop 	de
  106 00:4969             	pop 	bc
  107 00:4969             	exx
  108 00:4969             	pop 	iy
  109 00:4969             	pop 	ix
  110 00:4969             	pop 	hl
  111 00:4969             	pop 	de
  112 00:4969             	pop 	bc
  113 00:4969             	pop 	af
  114 00:4969             	ret
  115 00:4969             
  116 00:4969             #endif
  117 00:4969 -  -  -  -  
  118 00:4969 -  -  -  -  ; ***************************************************************************************
  119 00:4969 -  -  -  -  ;
  120 00:4969 -  -  -  -  ;									Changes and Updates
  121 00:4969 -  -  -  -  ;
  122 00:4969 -  -  -  -  ; ***************************************************************************************
  123 00:4969 -  -  -  -  ;
  124 00:4969 -  -  -  -  ;		Date			Notes
  125 00:4969 -  -  -  -  ;		==== 			=====
  126 00:4969 -  -  -  -  ;
  127 00:4969 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   49 00:4969 -  -  -  -  #include "testprogram/basic.asm"
Listing for file "/home/paulr/Projects/dax-basic/source/testprogram/basic.asm"
    1 00:4969 -  -  -  -  ; ***************************************************************************************
    2 00:4969 -  -  -  -  ; ***************************************************************************************
    3 00:4969 -  -  -  -  ;
    4 00:4969 -  -  -  -  ;		Name : 		basic.asm
    5 00:4969 -  -  -  -  ;		Author :	Paul Robson (paul@robsons.org.uk)
    6 00:4969 -  -  -  -  ;		Date : 		3rd June 2022
    7 00:4969 -  -  -  -  ;		Reviewed :	No
    8 00:4969 -  -  -  -  ;		Purpose :	Main program.
    9 00:4969 -  -  -  -  ;
   10 00:4969 -  -  -  -  ; ***************************************************************************************
   11 00:4969 -  -  -  -  ; ***************************************************************************************
   12 00:4969 -  -  -  -  
   13 00:4969 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 -  		.block 		$400-($ & $3FF)
   14 00:4C00 -  -  -  -  TestInstance:
   15 00:4C00 -  -  -  -  		#include 	"testprogram/testprogram.dat"
Listing for file "/home/paulr/Projects/dax-basic/source/testprogram/testprogram.dat"
    1 00:4C00 -  -  -  -  ;
    2 00:4C00 -  -  -  -  ;	This code automatically generated.
    3 00:4C00 -  -  -  -  ;
    4 00:4C00 -  -  -  -  TestProgram:
    5 00:4C00 22 01 00 B1 
              3F 1A 41 42 
              43 44 45 46 
              47 48 49 4A 
              4B 4C 4D 4E 
              4F 50 51 52 
              53 54 55 56 
              57 58 59 5A 
              0D 80 14 02 
              00 B1 3F 0C 
              53 65 65 64 
              20 3D 20 31 
              39 38 39 30 
              0D 80 10 03 
              00 BD 94 89 
              55 89 89 41 
              55 9E 8E 41 
              40 80 35 04 
              00 BD 94 94 
              70 85 89 41 
              59 90 89 41 
              5C 9E 90 94 
              89 45 85 89 
              6E 9E 85 94 
              5C 85 89 41 
              4A 88 66 9E 
              89 94 89 4B 
              89 41 4D 88 
              89 66 9E 9E 
              8E 89 41 73 
              4C 40 80 23 
              05 00 BD 94 
              94 89 7B 88 
              89 41 51 90 
              89 41 55 9E 
              89 94 41 64 
              85 42 89 59 
              88 89 76 9E 
              9E 8E 89 45 
              59 80 35 06 
              00 BD 94 94 
              89 72 91 89 
              41 4C 89 89 
              69 9E 85 94 
              89 41 44 88 
              89 6C 9E 91 
              94 89 4E 85 
              89 41 50 89 
              89 41 44 89 
              89 69 9E 88 
              94 41 4A 89 
              51 9E 9E 8E 
              7D 76 80 2C 
              07 00 BD 94 
              94 89 41 46 
              85 89 60 91 
              6D 91 41 52 
              9E 88 94 89 
              64 91 89 7B 
              9E 89 94 89 
              41 88 89 68 
              88 41 41 91 
              51 9E 9E 8E 
              63 43 80 32 
              08 00 BD 94 
              94 89 7F 85 
              89 76 9E 89 
              94 89 5C 88 
              4E 9E 85 94 
              89 73 90 41 
              52 89 89 6E 
              9E 89 94 89 
              45 90 41 40 
              89 89 44 88 
              89 73 9E 9E 
              8E 41 50 79 
              80 15 09 00 
              BD 94 76 85 
              89 42 88 89 
              41 50 89 59 
              9E 8E 89 43 
              55 80 68 0A 
              00 BD 94 94 
              94 89 52 88 
              89 4E 88 41 
              60 89 6B 9E 
              89 94 7F 88 
              7B 9E 85 94 
              4D 89 89 41 
              5C 85 89 41 
              56 88 89 70 
              9E 91 94 89 
              51 89 4D 89 
              89 41 4D 89 
              41 54 9E 9E 
              85 94 94 89 
              4D 88 89 51 
              89 41 5B 89 
              65 9E 85 94 
              89 6B 85 5B 
              9E 85 94 89 
              76 89 7D 88 
              89 64 9E 85 
              94 89 57 85 
              89 5C 9E 9E 
              9E 8E 49 66 
              6B 7D 69 54 
              68 80 0E 0B 
              00 BD 94 7B 
              89 41 50 9E 
              8E 89 55 80 
              0D 0C 00 BD 
              94 89 56 90 
              5A 9E 8E 4A 
              80 13 0D 00 
              BD 94 89 41 
              60 88 41 4B 
              91 89 45 9E 
              8E 89 45 80 
              2A 0E 00 BD 
              94 94 5D 89 
              7B 9E 85 94 
              89 41 53 89 
              4E 9E 89 94 
              89 77 89 41 
              40 9E 90 94 
              89 41 5C 88 
              5A 88 89 76 
              9E 9E 8E 6E 
              40 80 1F 0F 
              00 BD 94 94 
              41 5C 85 44 
              85 40 9E 85 
              94 41 4C 88 
              41 4D 90 89 
              6F 85 89 75 
              9E 9E 8E 40 
              80 38 10 00 
              BD 94 94 89 
              77 89 89 4C 
              88 45 9E 85 
              94 89 62 85 
              89 41 4F 88 
              41 5D 9E 88 
              94 89 7E 89 
              89 41 49 9E 
              89 94 89 50 
              88 77 92 41 
              5C 89 89 41 
              64 9E 9E 8E 
              89 59 75 5E 
              80 92 11 00 
              BD 94 94 94 
              89 41 42 85 
              89 77 88 89 
              78 91 41 5A 
              9E 89 94 61 
              91 7E 89 75 
              9E 91 94 41 
              4E 88 89 41 
              56 89 89 52 
              88 89 62 9E 
              85 94 89 41 
              4C 85 42 88 
              4C 9E 9E 88 
              94 94 89 78 
              89 62 9E 88 
              94 89 41 60 
              89 5B 85 41 
              5B 89 6C 9E 
              9E 88 94 94 
              4B 89 41 5C 
              9E 89 94 89 
              72 88 89 5F 
              85 7A 9E 88 
              94 60 91 4D 
              9E 89 94 89 
              4C 91 89 72 
              91 72 89 89 
              77 9E 9E 88 
              94 94 89 5B 
              91 41 4C 85 
              89 75 85 41 
              5F 9E 89 94 
              41 53 91 89 
              7B 89 89 47 
              9E 9E 9E 8E 
              6A 69 80 0D 
              12 00 BD 94 
              41 4F 89 76 
              9E 8E 59 80 
              2F 13 00 BD 
              94 94 89 43 
              89 53 85 89 
              41 63 85 55 
              9E 89 94 64 
              88 74 89 89 
              4A 9E 88 94 
              89 41 61 88 
              41 47 89 41 
              49 85 41 5F 
              9E 9E 8E 47 
              7A 77 80 11 
              14 00 BD 94 
              89 76 85 41 
              60 9E 8E 89 
              41 51 40 80 
              7D 15 00 BD 
              94 94 94 89 
              67 85 67 9E 
              89 94 41 4F 
              85 64 9E 85 
              94 89 41 4A 
              85 41 47 89 
              66 9E 88 94 
              66 89 89 6D 
              85 89 5A 89 
              89 5F 9E 9E 
              85 94 94 89 
              41 64 89 59 
              89 44 9E 85 
              94 89 59 85 
              89 7C 85 89 
              5A 88 47 9E 
              89 94 6D 85 
              89 43 9E 9E 
              88 94 94 89 
              41 61 89 5F 
              92 89 52 92 
              89 71 9E 92 
              94 89 41 62 
              89 89 4E 89 
              89 72 92 41 
              42 9E 92 94 
              40 92 89 7D 
              9E 9E 9E 8E 
              51 4D 5F 65 
              53 7E 50 6E 
              80 33 16 00 
              BD 94 94 66 
              85 89 59 88 
              89 50 9E 90 
              94 5A 89 56 
              85 41 41 88 
              65 9E 88 94 
              6A 88 54 88 
              77 88 41 60 
              9E 85 94 89 
              58 88 89 7B 
              9E 9E 8E 89 
              44 6F 66 80 
              92 17 00 BD 
              94 94 94 89 
              41 49 89 89 
              41 63 88 89 
              41 45 88 89 
              51 9E 89 94 
              89 50 89 7C 
              9E 89 94 45 
              90 89 41 50 
              89 89 5A 89 
              89 41 46 9E 
              9E 88 94 94 
              68 88 7F 85 
              7B 90 79 9E 
              89 94 89 68 
              88 5F 89 4C 
              85 89 43 9E 
              89 94 89 7E 
              89 89 41 53 
              9E 9E 90 94 
              94 4B 90 53 
              88 89 41 45 
              9E 89 94 89 
              41 5E 85 89 
              6C 89 46 90 
              89 69 9E 9E 
              90 94 94 89 
              41 59 85 89 
              6B 89 41 54 
              90 77 9E 88 
              94 4F 89 89 
              41 61 85 45 
              9E 85 94 89 
              57 85 89 78 
              90 46 88 50 
              9E 9E 9E 8E 
              40 80 0F 18 
              00 BD 94 41 
              4E 88 41 58 
              9E 8E 42 66 
              80 12 19 00 
              BD 94 44 89 
              89 41 62 88 
              89 41 5E 9E 
              8E 48 80 1E 
              1A 00 BD 94 
              94 57 90 77 
              89 41 57 9E 
              90 94 89 54 
              88 89 41 40 
              90 89 41 4C 
              9E 9E 8E 40 
              80 77 1B 00 
              BD 94 94 94 
              5E 89 89 6C 
              88 41 60 92 
              89 6D 9E 89 
              94 41 58 88 
              41 53 88 72 
              9E 92 94 4D 
              92 89 53 85 
              6B 9E 89 94 
              5F 92 42 89 
              44 88 89 41 
              63 9E 9E 92 
              94 94 89 73 
              89 89 41 42 
              88 89 48 85 
              4A 9E 89 94 
              41 50 92 58 
              9E 9E 88 94 
              94 89 49 92 
              41 49 92 89 
              6F 9E 89 94 
              48 88 89 4B 
              9E 88 94 41 
              4A 85 89 41 
              46 92 89 5E 
              9E 92 94 41 
              45 88 41 64 
              9E 9E 9E 8E 
              41 40 4A 80 
              21 1C 00 BD 
              94 94 89 5F 
              88 89 5E 9E 
              88 94 89 7B 
              85 89 7D 85 
              89 4B 92 89 
              41 51 9E 9E 
              8E 49 6A 77 
              80 16 1D 00 
              BD 94 89 41 
              59 88 42 88 
              89 41 60 85 
              56 9E 8E 89 
              62 57 80 10 
              1E 00 BD 94 
              89 4C 89 89 
              41 5F 9E 8E 
              41 53 80 A2 
              1F 00 BD 94 
              94 94 89 73 
              92 89 41 4B 
              9E 85 94 7F 
              89 89 7C 9E 
              89 94 89 41 
              53 88 89 41 
              45 85 89 6F 
              92 41 57 9E 
              9E 88 94 94 
              89 4C 88 89 
              5B 9E 88 94 
              41 52 88 5A 
              88 89 41 43 
              9E 92 94 89 
              6E 92 89 41 
              51 85 41 5C 
              9E 9E 89 94 
              94 65 89 4A 
              85 89 60 88 
              41 61 9E 92 
              94 61 88 89 
              5A 92 89 73 
              9E 85 94 89 
              5D 85 89 5A 
              9E 89 94 89 
              41 51 85 4C 
              85 5A 85 78 
              9E 9E 88 94 
              94 41 40 85 
              89 5B 89 89 
              42 92 40 9E 
              85 94 57 92 
              41 40 89 41 
              59 85 89 41 
              47 9E 89 94 
              89 41 5A 88 
              89 41 5E 9E 
              9E 9E 8E 89 
              6F 50 55 7D 
              80 85 20 00 
              BD 94 94 94 
              48 88 89 72 
              88 89 41 56 
              9E 88 94 56 
              90 89 41 51 
              85 41 4D 9E 
              88 94 89 70 
              85 55 90 89 
              55 90 89 41 
              57 9E 89 94 
              50 89 41 60 
              88 89 41 55 
              88 89 78 9E 
              9E 90 94 94 
              89 67 89 89 
              6E 9E 90 94 
              89 68 85 41 
              55 85 59 85 
              89 54 9E 88 
              94 41 62 88 
              89 41 56 89 
              41 61 9E 9E 
              88 94 94 89 
              7C 90 89 41 
              55 90 89 5E 
              9E 90 94 6F 
              85 58 9E 89 
              94 89 41 64 
              88 89 41 44 
              88 89 41 5A 
              90 89 53 9E 
              9E 9E 8E 50 
              43 80 1A 21 
              00 BD 94 94 
              89 47 88 41 
              54 9E 85 94 
              89 41 5B 88 
              6E 9E 9E 8E 
              89 76 49 80 
              38 22 00 BD 
              94 94 89 7C 
              88 41 54 92 
              41 51 89 63 
              9E 85 94 89 
              41 5B 85 41 
              47 89 58 9E 
              85 94 6A 85 
              48 9E 89 94 
              41 5C 92 89 
              41 5E 88 77 
              89 65 9E 9E 
              8E 89 47 40 
              76 61 48 80 
              3F 23 00 BD 
              94 94 94 5D 
              90 89 41 5B 
              9E 85 94 89 
              4B 85 89 41 
              43 9E 9E 89 
              94 94 89 41 
              5D 90 89 41 
              63 90 40 9E 
              90 94 41 4D 
              88 41 64 89 
              89 51 9E 89 
              94 60 85 89 
              50 89 89 6F 
              9E 9E 9E 8E 
              79 65 80 65 
              24 00 BD 94 
              94 94 89 44 
              85 89 41 50 
              91 89 41 41 
              9E 88 94 89 
              71 85 89 41 
              53 89 46 9E 
              91 94 89 7E 
              89 89 50 89 
              62 9E 89 94 
              89 41 45 91 
              62 91 79 85 
              89 60 9E 9E 
              85 94 94 41 
              5F 88 52 9E 
              85 94 89 41 
              5E 85 41 5E 
              91 89 41 60 
              85 89 41 5E 
              9E 89 94 89 
              48 91 41 48 
              88 64 9E 91 
              94 55 91 89 
              41 51 9E 9E 
              9E 8E 43 80 
              95 25 00 BD 
              94 94 94 89 
              41 62 90 49 
              9E 85 94 5C 
              85 89 6F 89 
              89 53 9E 90 
              94 41 4F 85 
              41 53 90 41 
              62 9E 89 94 
              89 60 90 89 
              79 90 89 44 
              9E 9E 88 94 
              94 89 4D 85 
              89 4E 9E 88 
              94 89 41 53 
              90 41 54 85 
              55 85 89 41 
              9E 85 94 89 
              41 64 89 57 
              85 41 50 85 
              5D 9E 9E 89 
              94 94 41 62 
              89 41 59 85 
              41 46 85 5D 
              9E 85 94 89 
              41 64 85 69 
              85 54 90 58 
              9E 9E 88 94 
              94 89 41 54 
              88 89 53 90 
              6A 9E 85 94 
              89 55 88 41 
              53 85 70 85 
              71 9E 88 94 
              43 89 72 9E 
              9E 9E 8E 45 
              7B 7E 71 6F 
              80 16 26 00 
              BD 94 41 5A 
              85 75 90 89 
              67 90 89 41 
              43 9E 8E 41 
              4A 40 80 12 
              27 00 BD 94 
              7B 88 41 45 
              85 89 45 9E 
              8E 89 44 5E 
              80 95 28 00 
              BD 94 94 94 
              41 4C 92 41 
              41 88 77 9E 
              88 94 7B 92 
              89 6D 85 6D 
              85 51 9E 89 
              94 5E 92 7D 
              9E 9E 88 94 
              94 41 58 92 
              89 54 9E 92 
              94 41 64 85 
              89 63 9E 9E 
              89 94 94 77 
              92 89 79 92 
              89 41 54 88 
              89 78 9E 92 
              94 89 75 92 
              7C 92 41 46 
              85 89 78 9E 
              92 94 41 49 
              85 89 76 88 
              41 42 9E 9E 
              92 94 94 89 
              52 85 89 41 
              62 92 89 68 
              9E 85 94 89 
              42 88 89 41 
              59 89 7F 85 
              41 57 9E 89 
              94 89 67 92 
              41 49 92 41 
              54 92 43 9E 
              85 94 6F 89 
              41 5A 88 60 
              9E 9E 9E 8E 
              89 64 74 63 
              6D 80 12 29 
              00 BD 94 89 
              41 42 90 66 
              89 78 9E 8E 
              89 41 52 80 
              39 2A 00 BD 
              94 94 89 41 
              52 92 51 89 
              7C 85 41 40 
              9E 92 94 89 
              41 57 92 89 
              41 53 88 45 
              9E 85 94 89 
              41 4F 92 41 
              5E 9E 85 94 
              89 41 59 92 
              89 55 92 89 
              41 48 9E 9E 
              8E 41 6C 7B 
              80 38 2B 00 
              BD 94 94 7F 
              89 89 53 90 
              89 41 4C 9E 
              85 94 89 41 
              54 89 79 9E 
              89 94 41 58 
              85 41 5E 85 
              89 53 90 54 
              9E 85 94 79 
              90 41 58 90 
              89 41 43 88 
              41 4B 9E 9E 
              8E 89 65 50 
              80 6F 2C 00 
              BD 94 94 94 
              41 4F 85 89 
              41 49 85 41 
              53 9E 88 94 
              89 55 85 59 
              9E 90 94 61 
              90 89 4D 9E 
              9E 90 94 94 
              41 4D 89 6A 
              9E 89 94 89 
              45 90 89 58 
              85 89 41 4E 
              9E 89 94 89 
              41 43 85 41 
              5F 88 41 4A 
              85 89 6E 9E 
              89 94 78 88 
              41 4E 90 76 
              9E 9E 89 94 
              94 41 63 90 
              89 41 41 89 
              89 62 88 89 
              61 9E 88 94 
              5B 90 89 5C 
              85 41 53 88 
              89 70 9E 9E 
              9E 8E 40 80 
              16 2D 00 BD 
              94 89 41 4D 
              90 57 88 89 
              41 50 88 44 
              9E 8E 89 41 
              7D 80 0E 2E 
              00 BD 94 41 
              63 92 41 4E 
              9E 8E 6D 80 
              11 2F 00 BD 
              94 89 41 4F 
              85 7E 9E 8E 
              89 41 4C 62 
              80 0E 30 00 
              BD 94 7F 91 
              41 55 9E 8E 
              41 7F 80 3E 
              31 00 BD 94 
              94 94 70 90 
              41 63 9E 85 
              94 89 79 85 
              89 63 88 89 
              4D 9E 90 94 
              41 4D 90 89 
              73 85 89 41 
              9E 9E 89 94 
              94 41 47 90 
              89 67 88 89 
              7E 9E 85 94 
              89 6E 88 89 
              41 4A 9E 9E 
              9E 8E 45 68 
              80 31 32 00 
              BD 94 94 74 
              85 89 59 91 
              89 78 88 89 
              41 40 9E 89 
              94 89 41 48 
              91 89 41 49 
              85 89 41 4E 
              88 6E 9E 91 
              94 89 41 4B 
              89 89 41 46 
              9E 9E 8E 89 
              45 80 15 33 
              00 BD 94 89 
              5C 85 41 61 
              92 57 85 41 
              51 9E 8E 89 
              77 5D 80 1C 
              34 00 BD 94 
              94 89 41 43 
              85 49 9E 89 
              94 41 4B 89 
              65 88 41 58 
              9E 9E 8E 89 
              4B 59 80 3A 
              35 00 BD 94 
              94 89 53 88 
              89 41 46 89 
              89 41 41 88 
              89 41 45 9E 
              88 94 41 5E 
              88 6C 89 89 
              7D 9E 88 94 
              5F 90 89 5E 
              9E 88 94 89 
              7A 85 5D 85 
              89 41 4D 90 
              89 4E 9E 9E 
              8E 5F 69 4E 
              80 AE 36 00 
              BD 94 94 94 
              89 4B 91 89 
              41 5C 9E 88 
              94 89 5E 89 
              89 4E 89 6A 
              88 89 7E 9E 
              91 94 41 45 
              88 41 5F 9E 
              9E 88 94 94 
              89 74 91 7C 
              88 89 43 91 
              89 42 9E 88 
              94 5E 88 89 
              66 91 64 9E 
              85 94 89 41 
              4C 85 49 9E 
              89 94 41 50 
              91 41 5D 9E 
              9E 85 94 94 
              61 91 5E 89 
              45 85 89 4D 
              9E 88 94 6E 
              85 89 7C 9E 
              89 94 89 70 
              88 89 41 58 
              88 89 6A 89 
              89 72 9E 91 
              94 89 7B 85 
              5F 88 89 5C 
              89 47 9E 9E 
              89 94 94 89 
              66 85 41 5E 
              9E 91 94 89 
              41 5D 88 89 
              41 54 9E 85 
              94 89 41 56 
              85 5E 88 89 
              4D 9E 88 94 
              89 41 40 91 
              41 55 85 41 
              59 9E 9E 9E 
              8E 89 43 4E 
              4D 73 80 31 
              37 00 BD 94 
              94 41 4B 88 
              7F 89 4E 9E 
              89 94 89 58 
              92 57 89 4C 
              9E 88 94 4D 
              89 89 59 9E 
              89 94 89 41 
              52 92 41 4F 
              89 89 7E 92 
              89 6B 9E 9E 
              8E 89 77 80 
              0F 38 00 BD 
              94 62 89 89 
              41 5D 9E 8E 
              41 7F 80 24 
              39 00 BD 94 
              94 41 51 89 
              89 6C 85 74 
              9E 88 94 42 
              90 7D 85 41 
              56 9E 88 94 
              4A 90 89 41 
              4D 9E 9E 8E 
              65 45 80 12 
              3A 00 BD 94 
              41 45 85 89 
              41 60 9E 8E 
              89 41 67 60 
              80 0D 3B 00 
              BD 94 45 89 
              89 62 9E 8E 
              67 80 0F 3C 
              00 BD 94 89 
              41 5D 90 41 
              5F 9E 8E 43 
              80 10 3D 00 
              BD 94 89 57 
              85 89 41 40 
              9E 8E 57 40 
              80 47 3E 00 
              BD 94 94 94 
              41 42 89 41 
              44 9E 89 94 
              41 54 91 6A 
              89 89 6D 9E 
              9E 91 94 94 
              89 41 5A 85 
              41 4C 85 5E 
              9E 88 94 67 
              91 47 85 7B 
              9E 91 94 89 
              4E 85 41 4C 
              91 7E 88 89 
              60 9E 91 94 
              89 41 4E 88 
              54 9E 9E 9E 
              8E 89 41 80 
              13 3F 00 BD 
              94 89 6E 88 
              89 41 50 91 
              89 4C 9E 8E 
              89 4A 80 3A 
              40 00 BD 94 
              94 94 56 90 
              89 79 88 89 
              6E 9E 85 94 
              89 53 88 89 
              6C 85 41 54 
              89 6F 9E 9E 
              85 94 94 89 
              41 5C 90 5F 
              90 89 50 9E 
              90 94 89 41 
              54 88 89 71 
              89 89 6F 9E 
              9E 9E 8E 40 
              80 33 41 00 
              BD 94 94 46 
              89 7A 9E 88 
              94 89 74 85 
              89 6F 85 70 
              89 48 9E 91 
              94 4E 89 89 
              41 63 9E 88 
              94 41 59 91 
              89 41 60 85 
              73 89 89 6D 
              9E 9E 8E 89 
              41 40 72 80 
              81 42 00 BD 
              94 94 94 89 
              4F 89 41 4A 
              9E 88 94 89 
              65 91 89 4C 
              85 89 4E 9E 
              85 94 89 41 
              57 89 89 64 
              89 7F 89 89 
              7E 9E 9E 88 
              94 94 89 41 
              4A 91 89 41 
              5B 91 89 41 
              61 89 7A 9E 
              88 94 89 6C 
              85 89 48 89 
              60 9E 9E 85 
              94 94 89 48 
              85 71 89 89 
              41 59 91 89 
              4A 9E 89 94 
              51 85 41 56 
              88 89 74 88 
              89 41 61 9E 
              85 94 89 67 
              88 41 59 9E 
              88 94 89 7A 
              85 41 44 89 
              41 5A 89 89 
              41 57 9E 9E 
              9E 8E 89 41 
              52 64 7E 7F 
              80 16 43 00 
              BD 94 41 88 
              89 41 44 89 
              89 78 88 89 
              76 9E 8E 89 
              41 41 80 87 
              44 00 BD 94 
              94 94 89 41 
              4E 85 41 58 
              85 41 4F 9E 
              89 94 62 88 
              89 41 61 85 
              89 43 92 89 
              46 9E 9E 85 
              94 94 7D 89 
              89 62 92 70 
              85 89 41 9E 
              85 94 73 88 
              41 60 9E 9E 
              85 94 94 89 
              41 43 92 89 
              41 59 85 89 
              4F 9E 89 94 
              7A 85 89 47 
              9E 92 94 89 
              54 92 89 50 
              89 44 9E 88 
              94 89 58 88 
              4B 88 7E 9E 
              9E 85 94 94 
              89 44 92 89 
              71 89 41 49 
              88 89 41 63 
              9E 85 94 58 
              92 89 51 92 
              89 72 9E 9E 
              9E 8E 89 46 
              59 57 5D 5E 
              62 5F 4F 46 
              75 80 94 45 
              00 BD 94 94 
              94 89 44 88 
              89 49 85 89 
              41 47 9E 89 
              94 89 6F 89 
              89 44 90 89 
              7E 85 7F 9E 
              9E 89 94 94 
              89 7E 90 40 
              85 41 52 90 
              89 41 61 9E 
              89 94 7C 89 
              41 4E 9E 85 
              94 5C 88 54 
              89 41 5D 9E 
              9E 85 94 94 
              41 58 89 44 
              9E 85 94 89 
              7A 85 57 89 
              41 46 9E 90 
              94 79 90 89 
              68 9E 9E 89 
              94 94 89 59 
              89 89 41 46 
              90 89 41 54 
              89 89 41 53 
              9E 90 94 52 
              88 89 41 52 
              85 41 53 90 
              7F 9E 88 94 
              89 41 4E 88 
              41 5E 88 58 
              9E 88 94 89 
              41 50 89 89 
              41 41 9E 9E 
              9E 8E 44 52 
              42 80 2B 46 
              00 BD 94 94 
              7C 89 60 9E 
              89 94 89 69 
              88 41 54 89 
              77 9E 92 94 
              66 89 46 9E 
              89 94 5C 89 
              41 46 89 89 
              5B 89 89 48 
              9E 9E 8E 4F 
              80 15 47 00 
              BD 94 89 6A 
              89 41 5D 91 
              89 52 91 89 
              6F 9E 8E 89 
              41 80 37 48 
              00 BD 94 94 
              89 41 53 90 
              41 55 90 41 
              5C 89 89 41 
              41 9E 88 94 
              89 69 89 41 
              51 90 41 47 
              9E 88 94 89 
              41 43 88 89 
              60 9E 85 94 
              41 47 89 89 
              58 9E 9E 8E 
              89 42 52 72 
              80 3A 49 00 
              BD 94 94 89 
              41 62 85 89 
              47 91 41 45 
              89 71 9E 88 
              94 89 7F 85 
              89 41 60 9E 
              89 94 60 91 
              41 4F 89 89 
              41 43 9E 85 
              94 5E 88 41 
              59 91 41 5B 
              85 5B 9E 9E 
              8E 89 41 6D 
              63 70 80 36 
              4A 00 BD 94 
              94 89 46 85 
              58 91 41 4D 
              9E 85 94 89 
              5B 91 41 49 
              88 5E 88 89 
              41 4D 9E 89 
              94 45 88 7D 
              9E 91 94 89 
              48 85 89 41 
              55 88 49 85 
              89 41 46 9E 
              9E 8E 41 73 
              80 6D 4B 00 
              BD 94 94 94 
              52 89 44 85 
              89 42 88 89 
              4C 9E 89 94 
              56 85 6C 89 
              4C 89 41 57 
              9E 90 94 41 
              43 88 89 41 
              4F 90 4D 9E 
              9E 85 94 94 
              89 41 47 89 
              89 63 89 89 
              57 9E 90 94 
              89 58 89 89 
              6B 9E 9E 88 
              94 94 47 90 
              89 65 85 89 
              41 51 89 89 
              72 9E 89 94 
              89 41 64 89 
              89 5B 9E 85 
              94 89 69 85 
              41 48 89 41 
              5D 85 89 41 
              5D 9E 9E 9E 
              8E 41 65 62 
              50 80 16 4C 
              00 BD 94 89 
              41 5F 85 89 
              46 89 89 41 
              56 88 7E 9E 
              8E 4B 4E 80 
              16 4D 00 BD 
              94 41 43 85 
              58 85 89 4D 
              90 89 73 9E 
              8E 89 45 46 
              78 80 2C 4E 
              00 BD 94 94 
              79 85 45 90 
              41 61 9E 85 
              94 89 49 85 
              51 88 89 7C 
              9E 85 94 41 
              5E 89 89 41 
              4A 9E 90 94 
              89 5C 85 89 
              41 9E 9E 8E 
              58 80 14 4F 
              00 BD 94 69 
              92 89 41 57 
              85 6F 92 53 
              9E 8E 89 7F 
              43 80 2A 50 
              00 BD 94 94 
              89 41 4C 89 
              89 41 59 9E 
              90 94 89 73 
              89 66 85 89 
              41 41 9E 88 
              94 89 6C 89 
              56 89 77 90 
              89 41 52 9E 
              9E 8E 49 80 
              B7 51 00 BD 
              94 94 94 89 
              71 89 89 41 
              45 88 5B 90 
              6E 9E 89 94 
              79 85 89 52 
              9E 89 94 89 
              44 89 89 68 
              85 41 54 85 
              89 48 9E 9E 
              85 94 94 89 
              41 48 88 41 
              59 88 89 6E 
              89 69 9E 88 
              94 41 4B 85 
              89 5A 89 64 
              88 4A 9E 85 
              94 41 89 41 
              88 89 7B 85 
              4A 9E 9E 88 
              94 94 41 46 
              89 41 4D 85 
              89 41 4B 85 
              49 9E 88 94 
              89 76 89 4C 
              9E 85 94 89 
              41 62 85 89 
              41 4D 9E 89 
              94 4F 90 89 
              7A 9E 9E 88 
              94 94 89 58 
              85 89 41 52 
              90 89 4D 88 
              89 41 48 9E 
              89 94 89 41 
              48 85 89 5C 
              9E 90 94 89 
              58 90 89 41 
              61 89 89 74 
              90 41 4E 9E 
              88 94 45 88 
              89 5E 85 89 
              50 88 41 5C 
              9E 9E 9E 8E 
              5E 56 60 53 
              4D 5B 80 11 
              52 00 BD 94 
              5C 89 89 43 
              88 89 64 9E 
              8E 89 45 80 
              1D 53 00 BD 
              94 94 89 71 
              88 41 63 9E 
              89 94 5D 88 
              42 85 89 70 
              88 89 63 9E 
              9E 8E 42 58 
              80 12 54 00 
              BD 94 89 41 
              48 89 89 61 
              91 68 9E 8E 
              89 47 80 6B 
              55 00 BD 94 
              94 94 4B 88 
              89 64 89 89 
              62 9E 91 94 
              68 88 89 63 
              9E 89 94 89 
              41 49 85 89 
              41 57 91 41 
              5B 89 49 9E 
              85 94 41 43 
              85 89 41 62 
              88 41 58 85 
              89 5C 9E 9E 
              85 94 94 40 
              91 89 68 85 
              41 63 9E 88 
              94 41 41 89 
              41 41 9E 91 
              94 89 41 46 
              85 89 7E 91 
              6A 9E 85 94 
              89 7A 88 89 
              41 58 85 89 
              7B 9E 9E 9E 
              8E 89 42 4A 
              49 5B 5B 77 
              6C 80 42 56 
              00 BD 94 94 
              94 65 92 5D 
              9E 89 94 43 
              89 89 52 88 
              5D 9E 9E 88 
              94 94 89 41 
              5E 89 89 67 
              88 89 5A 9E 
              92 94 89 76 
              89 89 41 64 
              9E 89 94 4A 
              89 41 40 88 
              7C 9E 85 94 
              89 49 88 41 
              64 9E 9E 9E 
              8E 46 69 80 
              27 57 00 BD 
              94 94 89 4F 
              91 89 41 4A 
              89 6E 9E 85 
              94 89 5F 85 
              72 88 7D 88 
              77 9E 91 94 
              58 88 89 45 
              9E 9E 8E 42 
              5C 77 80 13 
              58 00 BD 94 
              6C 89 89 54 
              85 71 88 89 
              52 9E 8E 4F 
              6E 80 81 59 
              00 BD 94 94 
              94 89 64 88 
              89 50 89 53 
              92 74 9E 88 
              94 52 89 73 
              9E 9E 85 94 
              94 89 41 4C 
              88 89 61 92 
              69 85 45 9E 
              89 94 4B 85 
              68 92 41 62 
              85 7C 9E 85 
              94 46 85 89 
              65 9E 9E 89 
              94 94 41 56 
              92 89 48 88 
              89 6A 9E 85 
              94 89 59 88 
              89 41 48 9E 
              9E 85 94 94 
              66 89 53 92 
              54 92 89 5F 
              9E 89 94 89 
              7B 92 89 41 
              59 9E 88 94 
              89 55 85 41 
              44 89 89 6D 
              9E 85 94 89 
              71 85 89 60 
              9E 9E 9E 8E 
              54 4C 56 4E 
              44 48 80 17 
              5A 00 BD 94 
              89 67 85 89 
              41 4E 88 89 
              41 54 88 89 
              51 9E 8E 6D 
              7D 80 8B 5B 
              00 BD 94 94 
              94 89 41 89 
              89 47 91 43 
              91 89 7F 9E 
              85 94 5C 85 
              41 4B 91 41 
              50 85 7A 9E 
              89 94 89 6C 
              85 89 41 51 
              89 57 85 7B 
              9E 9E 91 94 
              94 89 73 88 
              89 41 50 89 
              89 41 46 89 
              89 46 9E 88 
              94 89 41 59 
              85 89 41 61 
              91 89 41 54 
              85 89 41 58 
              9E 89 94 58 
              89 41 48 9E 
              85 94 89 79 
              85 4E 88 89 
              6C 9E 9E 91 
              94 94 89 41 
              45 91 89 55 
              85 4B 85 5C 
              9E 91 94 89 
              54 91 41 40 
              9E 88 94 89 
              41 4B 91 89 
              51 89 89 7C 
              91 65 9E 9E 
              9E 8E 89 41 
              80 62 5C 00 
              BD 94 94 94 
              41 58 88 89 
              4A 89 89 60 
              85 40 9E 85 
              94 41 5E 88 
              56 9E 90 94 
              89 41 5F 85 
              7E 88 89 5D 
              9E 85 94 89 
              66 90 41 56 
              90 5B 85 89 
              41 59 9E 9E 
              85 94 94 89 
              41 5D 89 77 
              90 41 47 9E 
              85 94 4B 90 
              4C 89 5A 9E 
              85 94 6B 90 
              89 41 64 85 
              50 90 89 46 
              9E 88 94 6C 
              89 78 9E 9E 
              9E 8E 89 41 
              63 40 80 94 
              5D 00 BD 94 
              94 94 89 67 
              85 41 5A 92 
              41 53 85 41 
              60 9E 89 94 
              89 52 85 61 
              9E 85 94 89 
              7A 89 45 89 
              41 48 88 41 
              43 9E 9E 85 
              94 94 89 6B 
              92 89 52 88 
              72 89 50 9E 
              92 94 50 88 
              89 41 55 89 
              89 55 9E 88 
              94 52 89 89 
              41 60 88 41 
              40 89 89 65 
              9E 9E 89 94 
              94 68 89 89 
              4B 92 41 61 
              9E 92 94 4B 
              89 41 55 9E 
              92 94 41 42 
              89 54 88 89 
              60 88 49 9E 
              88 94 41 5A 
              92 60 9E 9E 
              85 94 94 89 
              41 4D 89 45 
              9E 85 94 89 
              5A 89 41 4B 
              89 41 64 89 
              89 71 9E 9E 
              9E 8E 61 74 
              66 54 80 68 
              5E 00 BD 94 
              94 94 89 4C 
              88 89 7F 9E 
              88 94 89 41 
              46 91 41 5D 
              89 6A 9E 88 
              94 89 47 89 
              89 53 85 5C 
              89 89 73 9E 
              9E 85 94 94 
              50 88 89 41 
              63 91 41 61 
              91 6B 9E 89 
              94 69 89 89 
              4D 89 89 61 
              91 41 55 9E 
              91 94 89 66 
              89 89 71 9E 
              9E 89 94 94 
              89 7F 88 73 
              9E 91 94 41 
              60 85 41 61 
              91 89 47 85 
              41 52 9E 9E 
              9E 8E 89 4A 
              69 66 80 16 
              5F 00 BD 94 
              7B 85 89 53 
              85 89 4E 92 
              89 4D 9E 8E 
              89 43 75 43 
              80 1D 60 00 
              BD 94 94 89 
              41 53 89 89 
              41 41 9E 92 
              94 5F 85 41 
              48 89 6C 9E 
              9E 8E 89 62 
              5E 80 6F 61 
              00 BD 94 94 
              94 41 88 41 
              5A 9E 91 94 
              5F 89 47 91 
              41 88 6F 9E 
              88 94 89 7D 
              89 89 41 61 
              9E 89 94 89 
              41 53 85 41 
              50 9E 9E 91 
              94 94 54 85 
              5C 85 47 89 
              89 60 9E 85 
              94 60 91 89 
              78 9E 91 94 
              58 91 89 5B 
              88 89 41 48 
              88 63 9E 9E 
              85 94 94 41 
              44 88 41 42 
              9E 91 94 89 
              79 89 89 5A 
              88 4C 9E 89 
              94 42 91 5C 
              88 89 4F 88 
              67 9E 9E 9E 
              8E 41 6D 7F 
              80 48 62 00 
              BD 94 94 94 
              41 59 89 53 
              9E 88 94 89 
              6D 88 89 55 
              85 5A 9E 91 
              94 89 41 51 
              88 56 9E 9E 
              88 94 94 89 
              5C 88 89 60 
              85 89 67 91 
              89 6C 9E 91 
              94 72 89 7F 
              9E 88 94 41 
              4C 88 89 41 
              49 91 73 89 
              89 7B 9E 9E 
              9E 8E 89 53 
              80 36 63 00 
              BD 94 94 94 
              89 41 56 85 
              89 6B 92 89 
              45 89 42 9E 
              92 94 65 88 
              89 6F 85 89 
              7F 9E 9E 85 
              94 94 71 89 
              89 41 43 9E 
              85 94 89 6E 
              89 49 9E 9E 
              9E 8E 63 79 
              5F 44 80 1E 
              64 00 BD 94 
              94 89 5A 89 
              66 89 76 85 
              41 5B 9E 85 
              94 67 90 89 
              56 9E 9E 8E 
              89 69 54 64 
              80 32 65 00 
              BD 94 94 89 
              41 51 91 41 
              40 9E 89 94 
              41 4F 89 89 
              50 88 89 6A 
              9E 91 94 89 
              41 52 88 41 
              85 66 9E 91 
              94 60 88 40 
              88 61 85 89 
              73 9E 9E 8E 
              89 41 80 2D 
              66 00 BD 94 
              94 89 58 85 
              89 41 52 91 
              89 7A 91 55 
              9E 91 94 57 
              89 89 6A 85 
              4D 89 4F 9E 
              85 94 79 89 
              89 7F 89 89 
              41 5A 9E 9E 
              8E 89 49 80 
              2B 67 00 BD 
              94 94 89 56 
              85 41 44 85 
              64 85 89 4E 
              9E 89 94 47 
              85 89 5C 9E 
              89 94 89 62 
              92 4B 89 89 
              73 85 53 9E 
              9E 8E 42 78 
              57 7A 80 49 
              68 00 BD 94 
              94 94 7B 88 
              89 4B 92 89 
              41 88 64 9E 
              85 94 89 75 
              85 89 50 9E 
              9E 92 94 94 
              54 88 6E 88 
              89 44 92 52 
              9E 89 94 89 
              41 61 88 4C 
              89 89 73 9E 
              88 94 89 62 
              89 41 45 9E 
              89 94 77 89 
              41 47 85 67 
              9E 9E 9E 8E 
              43 51 71 80 
              8C 69 00 BD 
              94 94 94 89 
              7B 85 89 41 
              4D 88 89 56 
              92 89 43 9E 
              88 94 89 4A 
              89 89 41 41 
              92 89 6B 88 
              41 47 9E 88 
              94 41 89 89 
              78 9E 89 94 
              67 88 41 4F 
              85 41 4C 9E 
              9E 89 94 94 
              89 46 85 59 
              85 89 66 88 
              41 49 9E 89 
              94 41 49 92 
              67 89 5F 85 
              89 7E 9E 9E 
              89 94 94 89 
              63 92 89 47 
              9E 88 94 73 
              85 64 92 41 
              64 9E 9E 92 
              94 94 5C 92 
              41 43 88 48 
              9E 92 94 61 
              88 6A 92 41 
              56 89 89 4F 
              9E 88 94 89 
              6D 88 7C 85 
              5E 88 40 9E 
              9E 9E 8E 89 
              43 66 66 80 
              17 6A 00 BD 
              94 77 89 89 
              67 88 41 5E 
              85 89 41 4D 
              9E 8E 89 41 
              6F 68 80 21 
              6B 00 BD 94 
              94 89 4E 90 
              41 58 88 89 
              6D 90 45 9E 
              89 94 89 77 
              85 89 41 64 
              9E 9E 8E 89 
              41 55 7C 80 
              3B 6C 00 BD 
              94 94 41 4C 
              85 7F 85 89 
              74 9E 85 94 
              51 89 89 41 
              55 9E 85 94 
              43 89 89 41 
              64 91 41 50 
              9E 85 94 41 
              5E 85 89 41 
              53 91 89 53 
              85 89 75 9E 
              9E 8E 44 7B 
              7E 56 46 4D 
              76 60 80 27 
              6D 00 BD 94 
              94 89 5F 90 
              6E 88 89 41 
              51 89 78 9E 
              89 94 89 4E 
              90 89 41 9E 
              88 94 56 89 
              89 79 85 59 
              9E 9E 8E 55 
              56 80 24 6E 
              00 BD 94 94 
              5A 85 41 5E 
              90 89 41 4C 
              9E 89 94 89 
              56 89 41 43 
              9E 88 94 89 
              60 88 41 61 
              9E 9E 8E 68 
              5E 80 1F 6F 
              00 BD 94 94 
              41 42 92 77 
              85 41 61 9E 
              92 94 41 4C 
              92 89 50 89 
              89 66 9E 9E 
              8E 41 53 4F 
              80 26 70 00 
              BD 94 94 41 
              5B 88 89 79 
              9E 89 94 89 
              6D 89 89 42 
              89 89 7C 85 
              5D 9E 85 94 
              75 85 41 9E 
              9E 8E 89 55 
              7C 73 80 10 
              71 00 BD 94 
              41 51 85 89 
              55 9E 8E 89 
              5A 65 80 8A 
              72 00 BD 94 
              94 94 89 65 
              85 89 67 9E 
              85 94 89 78 
              89 89 6C 9E 
              89 94 89 6F 
              88 89 66 90 
              43 9E 9E 89 
              94 94 41 57 
              88 41 88 41 
              50 88 89 41 
              4B 9E 88 94 
              89 58 90 41 
              53 9E 90 94 
              40 85 89 46 
              90 89 41 4A 
              85 41 58 9E 
              9E 88 94 94 
              89 41 60 85 
              89 51 9E 88 
              94 50 85 45 
              85 89 41 53 
              9E 90 94 69 
              88 89 48 88 
              69 88 41 9E 
              9E 88 94 94 
              89 5C 88 89 
              76 89 89 41 
              46 85 89 4A 
              9E 89 94 89 
              76 85 7D 85 
              89 4D 90 53 
              9E 9E 9E 8E 
              89 44 59 77 
              80 1E 73 00 
              BD 94 94 4A 
              90 5C 90 6A 
              88 69 9E 88 
              94 89 69 85 
              41 46 88 57 
              9E 9E 8E 89 
              6C 5F 80 44 
              74 00 BD 94 
              94 94 41 4E 
              91 89 65 9E 
              88 94 67 88 
              89 7D 9E 9E 
              91 94 94 47 
              85 89 5C 9E 
              91 94 89 53 
              89 89 69 9E 
              9E 91 94 94 
              65 91 89 45 
              85 89 7F 88 
              49 9E 88 94 
              46 91 89 41 
              56 89 89 7B 
              9E 9E 9E 8E 
              89 41 80 BE 
              75 00 BD 94 
              94 94 54 91 
              89 41 52 85 
              89 5D 88 41 
              5F 9E 89 94 
              5C 85 41 49 
              88 89 47 89 
              89 7B 9E 85 
              94 89 67 88 
              41 5F 89 89 
              41 61 9E 91 
              94 89 41 5C 
              91 41 60 89 
              89 41 43 9E 
              9E 88 94 94 
              89 41 51 91 
              89 41 46 89 
              4A 88 89 4A 
              9E 88 94 41 
              42 91 89 41 
              54 88 89 4C 
              89 89 74 9E 
              88 94 89 41 
              51 88 89 63 
              85 41 5E 9E 
              85 94 41 49 
              88 4E 89 41 
              42 91 49 9E 
              9E 89 94 94 
              89 45 88 57 
              9E 89 94 53 
              85 89 51 88 
              89 44 9E 85 
              94 51 85 89 
              41 4C 89 89 
              64 85 89 43 
              9E 91 94 41 
              4F 85 89 4A 
              89 89 78 88 
              41 9E 9E 91 
              94 94 89 57 
              89 52 89 89 
              41 50 91 89 
              70 9E 89 94 
              63 85 89 4C 
              9E 9E 9E 8E 
              89 57 78 45 
              80 11 76 00 
              BD 94 41 43 
              89 6C 85 74 
              90 6F 9E 8E 
              43 80 30 77 
              00 BD 94 94 
              41 57 88 89 
              41 5B 88 89 
              68 9E 85 94 
              72 85 89 4B 
              9E 92 94 41 
              64 92 89 4F 
              9E 92 94 4B 
              89 4F 85 7F 
              88 41 47 9E 
              9E 8E 45 76 
              7C 80 1F 78 
              00 BD 94 94 
              4D 92 89 48 
              9E 92 94 4B 
              89 89 41 5E 
              89 89 47 85 
              89 41 44 9E 
              9E 8E 45 78 
              80 12 79 00 
              BD 94 89 51 
              85 65 88 41 
              4E 9E 8E 89 
              48 67 80 2D 
              7A 00 BD 94 
              94 48 88 71 
              88 89 41 4F 
              85 89 65 9E 
              89 94 89 41 
              4B 85 41 50 
              85 89 64 90 
              40 9E 89 94 
              41 56 90 89 
              41 41 9E 9E 
              8E 6E 4E 80 
              6D 7B 00 BD 
              94 94 94 44 
              85 61 9E 89 
              94 70 90 89 
              5D 9E 88 94 
              89 43 85 89 
              4C 90 46 9E 
              85 94 5D 89 
              64 9E 9E 90 
              94 94 89 7A 
              88 41 45 90 
              57 89 89 43 
              9E 89 94 66 
              89 89 48 89 
              63 9E 90 94 
              89 41 42 85 
              41 61 9E 88 
              94 46 90 89 
              54 85 89 64 
              90 89 41 45 
              9E 9E 89 94 
              94 7A 88 89 
              41 5A 90 41 
              4D 9E 89 94 
              89 41 58 85 
              41 4A 9E 9E 
              9E 8E 41 48 
              80 78 7C 00 
              BD 94 94 94 
              89 4D 91 89 
              76 85 89 41 
              62 9E 91 94 
              41 43 88 50 
              9E 9E 88 94 
              94 71 89 89 
              49 85 89 41 
              53 85 72 9E 
              89 94 41 4A 
              91 7A 85 89 
              4F 88 89 41 
              40 9E 91 94 
              41 42 85 89 
              4B 9E 88 94 
              89 41 54 89 
              89 41 41 85 
              89 6A 88 89 
              41 48 9E 9E 
              89 94 94 5B 
              88 89 41 54 
              89 89 41 52 
              91 41 5D 9E 
              89 94 75 89 
              41 5E 85 63 
              9E 85 94 89 
              41 45 85 5D 
              9E 9E 9E 8E 
              58 6C 5D 4C 
              80 4E 7D 00 
              BD 94 94 94 
              89 49 85 45 
              91 89 41 56 
              89 66 9E 91 
              94 5D 85 59 
              9E 85 94 5B 
              88 89 6D 89 
              41 47 9E 88 
              94 54 88 89 
              4A 88 44 91 
              5E 9E 9E 88 
              94 94 89 7F 
              88 89 41 46 
              91 89 41 47 
              9E 89 94 41 
              5D 88 89 6F 
              85 89 6E 9E 
              9E 9E 8E 89 
              63 7D 80 0E 
              7E 00 BD 94 
              41 52 89 4C 
              9E 8E 41 46 
              80 0E 7F 00 
              BD 94 66 88 
              41 40 9E 8E 
              41 66 80 11 
              80 00 BD 94 
              41 64 90 41 
              5C 88 56 9E 
              8E 41 60 80 
              29 81 00 BD 
              94 94 5C 89 
              41 49 90 89 
              4D 9E 90 94 
              78 88 89 51 
              9E 88 94 89 
              6E 89 89 68 
              9E 88 94 56 
              89 41 43 9E 
              9E 8E 89 70 
              80 54 82 00 
              BD 94 94 94 
              41 40 85 4F 
              9E 85 94 41 
              4F 88 89 41 
              55 89 41 5F 
              9E 92 94 89 
              41 45 92 89 
              41 40 85 89 
              41 50 9E 85 
              94 5C 88 41 
              49 89 89 7F 
              9E 9E 88 94 
              94 89 49 89 
              5C 92 89 41 
              58 92 4B 9E 
              88 94 41 62 
              92 41 54 85 
              69 88 89 55 
              9E 9E 9E 8E 
              43 59 51 41 
              80 0C 83 00 
              BD 94 5D 90 
              7C 9E 8E 5C 
              80 0F 84 00 
              BD 94 75 85 
              89 46 9E 8E 
              89 44 7E 80 
              6E 85 00 BD 
              94 94 94 89 
              41 42 85 89 
              41 4D 85 89 
              4D 9E 92 94 
              89 50 89 89 
              4F 89 4F 92 
              41 5F 9E 92 
              94 41 62 92 
              89 41 53 92 
              89 74 85 6B 
              9E 88 94 77 
              88 41 5A 9E 
              9E 85 94 94 
              78 85 41 40 
              9E 85 94 89 
              41 5D 88 89 
              41 5E 89 41 
              4F 92 7C 9E 
              85 94 41 45 
              92 89 5F 88 
              41 48 9E 88 
              94 5C 89 89 
              41 41 85 42 
              9E 9E 9E 8E 
              89 41 77 60 
              74 74 42 72 
              5A 80 29 86 
              00 BD 94 94 
              89 51 92 41 
              5D 9E 89 94 
              45 88 41 49 
              92 4E 92 89 
              41 63 9E 85 
              94 63 85 41 
              43 89 89 77 
              9E 9E 8E 54 
              5F 52 80 8E 
              87 00 BD 94 
              94 94 89 41 
              42 85 89 69 
              85 89 74 9E 
              85 94 89 41 
              47 85 89 79 
              85 89 6F 88 
              89 54 9E 85 
              94 41 57 88 
              89 42 89 89 
              46 9E 85 94 
              89 51 85 52 
              9E 9E 91 94 
              94 56 89 45 
              9E 91 94 41 
              91 89 56 88 
              56 9E 91 94 
              4E 88 4F 89 
              89 71 85 89 
              41 44 9E 91 
              94 4D 88 55 
              9E 9E 85 94 
              94 89 41 88 
              57 9E 85 94 
              89 61 85 89 
              41 61 9E 85 
              94 47 89 52 
              85 89 41 60 
              85 56 9E 89 
              94 41 56 91 
              89 41 52 85 
              51 85 75 9E 
              9E 9E 8E 89 
              41 5E 40 54 
              40 50 62 64 
              80 0F 88 00 
              BD 94 4B 85 
              89 61 9E 8E 
              89 45 6B 80 
              89 89 00 BD 
              94 94 94 41 
              44 89 89 47 
              9E 85 94 89 
              7D 85 89 5D 
              9E 88 94 75 
              88 4A 85 6A 
              9E 90 94 89 
              41 55 89 89 
              60 89 51 85 
              89 5B 9E 9E 
              89 94 94 7D 
              85 89 6A 85 
              89 7C 9E 85 
              94 53 90 6C 
              9E 90 94 89 
              66 89 41 53 
              85 53 85 89 
              41 5D 9E 89 
              94 89 41 45 
              85 41 45 88 
              4A 90 41 42 
              9E 9E 90 94 
              94 55 88 89 
              7E 89 41 5F 
              9E 89 94 89 
              67 89 41 5B 
              9E 85 94 42 
              89 5E 85 89 
              4B 90 6F 9E 
              88 94 89 41 
              59 88 89 41 
              60 85 7F 9E 
              9E 9E 8E 54 
              80 11 8A 00 
              BD 94 89 41 
              46 88 79 92 
              89 47 9E 8E 
              4A 80 36 8B 
              00 BD 94 94 
              70 92 41 48 
              9E 88 94 89 
              5C 85 89 73 
              88 89 41 47 
              9E 89 94 5E 
              92 89 54 88 
              89 65 92 89 
              72 9E 85 94 
              89 4C 88 89 
              41 52 85 89 
              42 9E 9E 8E 
              89 5F 63 80 
              9F 8C 00 BD 
              94 94 94 89 
              7A 89 89 44 
              88 59 9E 85 
              94 89 69 88 
              89 41 45 88 
              89 56 85 89 
              57 9E 9E 92 
              94 94 75 92 
              89 5B 85 41 
              41 85 89 57 
              9E 92 94 89 
              74 89 89 5D 
              88 7D 85 89 
              4A 9E 88 94 
              89 58 85 89 
              48 9E 9E 89 
              94 94 77 85 
              89 7D 92 89 
              52 88 4A 9E 
              89 94 7E 85 
              89 41 4F 85 
              73 9E 89 94 
              64 89 41 4E 
              92 47 9E 89 
              94 89 78 88 
              89 50 88 63 
              85 72 9E 9E 
              89 94 94 89 
              41 58 89 7B 
              85 4D 9E 89 
              94 41 58 88 
              48 89 89 61 
              9E 92 94 46 
              88 41 56 85 
              4C 9E 85 94 
              4D 89 41 50 
              88 41 61 9E 
              9E 9E 8E 7D 
              53 6B 80 26 
              8D 00 BD 94 
              94 6A 89 89 
              43 89 89 41 
              5A 9E 89 94 
              89 41 48 85 
              41 9E 85 94 
              89 41 49 92 
              40 9E 9E 8E 
              89 41 50 41 
              80 16 8E 00 
              BD 94 41 52 
              85 7D 85 89 
              52 88 41 47 
              9E 8E 89 55 
              7D 6D 80 46 
              8F 00 BD 94 
              94 94 43 92 
              63 89 40 88 
              89 64 9E 92 
              94 89 4D 88 
              89 60 9E 9E 
              89 94 94 5F 
              89 89 62 9E 
              85 94 89 52 
              92 89 41 64 
              92 89 41 43 
              92 6D 9E 85 
              94 89 41 40 
              85 89 7D 85 
              89 51 9E 9E 
              9E 8E 89 47 
              6D 6C 45 51 
              80 87 90 00 
              BD 94 94 94 
              89 5B 89 89 
              41 43 9E 85 
              94 89 61 91 
              41 4C 91 89 
              5F 88 7F 9E 
              9E 89 94 94 
              67 91 89 5A 
              9E 89 94 41 
              52 88 75 89 
              89 5E 85 41 
              5D 9E 85 94 
              89 68 85 89 
              41 43 88 89 
              56 9E 91 94 
              89 41 45 85 
              89 55 88 46 
              9E 9E 88 94 
              94 41 60 91 
              68 85 89 41 
              46 85 50 9E 
              88 94 89 57 
              89 5B 88 6C 
              89 89 41 4A 
              9E 9E 89 94 
              94 89 4D 91 
              78 89 70 9E 
              91 94 89 41 
              62 89 89 41 
              4A 91 89 41 
              41 88 40 9E 
              9E 9E 8E 5D 
              5F 47 4E 80 
              10 91 00 BD 
              94 41 42 92 
              70 89 89 78 
              9E 8E 6A 80 
              2D 92 00 BD 
              94 94 89 41 
              42 92 89 41 
              40 89 41 5F 
              9E 85 94 89 
              41 59 89 89 
              41 4D 85 41 
              4F 9E 89 94 
              66 85 7C 89 
              51 9E 9E 8E 
              45 45 71 7F 
              80 19 93 00 
              BD 94 94 56 
              88 89 57 89 
              89 6F 9E 89 
              94 42 89 89 
              56 9E 9E 8E 
              56 80 0F 94 
              00 BD 94 89 
              42 90 89 6E 
              9E 8E 89 6E 
              80 87 95 00 
              BD 94 94 94 
              89 4F 85 7E 
              9E 90 94 89 
              52 89 41 47 
              9E 88 94 89 
              4E 85 89 4E 
              85 89 7B 9E 
              88 94 89 41 
              59 85 5C 89 
              5B 85 89 54 
              9E 9E 89 94 
              94 7C 89 6F 
              85 4F 9E 90 
              94 41 4E 85 
              5A 88 89 41 
              55 89 89 78 
              9E 89 94 5F 
              90 89 5D 89 
              89 77 9E 85 
              94 89 68 89 
              41 55 9E 9E 
              88 94 94 64 
              85 41 5C 85 
              89 41 55 85 
              41 57 9E 85 
              94 5B 88 41 
              63 88 41 63 
              85 41 62 9E 
              90 94 89 77 
              85 59 85 64 
              90 41 55 9E 
              9E 9E 8E 89 
              44 6E 67 80 
              1B 96 00 BD 
              94 94 89 7C 
              92 41 52 9E 
              88 94 60 92 
              89 55 92 89 
              41 60 9E 9E 
              8E 41 80 2F 
              97 00 BD 94 
              94 41 49 88 
              41 5A 88 89 
              5C 89 41 5F 
              9E 89 94 60 
              88 89 6D 85 
              41 4D 9E 88 
              94 89 41 59 
              91 89 41 51 
              88 89 41 47 
              9E 9E 8E 76 
              40 80 92 98 
              00 BD 94 94 
              94 41 48 89 
              49 90 41 56 
              9E 90 94 89 
              41 63 85 41 
              4F 89 41 4F 
              88 57 9E 90 
              94 89 5B 89 
              89 41 54 9E 
              9E 89 94 94 
              47 90 41 5C 
              90 89 76 85 
              41 5D 9E 90 
              94 89 41 58 
              89 89 6C 89 
              89 46 89 6E 
              9E 9E 89 94 
              94 89 6F 88 
              89 49 89 56 
              90 41 63 9E 
              89 94 61 88 
              41 47 89 89 
              41 4C 90 51 
              9E 9E 89 94 
              94 89 41 52 
              85 89 52 9E 
              89 94 89 57 
              85 79 88 6F 
              89 4E 9E 88 
              94 69 90 89 
              43 9E 88 94 
              41 5A 88 89 
              41 43 85 4A 
              89 89 41 4B 
              9E 9E 9E 8E 
              89 63 74 80 
              16 99 00 BD 
              94 89 48 85 
              89 41 46 88 
              89 70 90 89 
              79 9E 8E 48 
              40 80 15 9A 
              00 BD 94 66 
              89 89 41 89 
              89 41 53 88 
              89 46 9E 8E 
              41 74 80 3A 
              9B 00 BD 94 
              94 94 89 78 
              89 6F 9E 89 
              94 69 88 89 
              60 9E 9E 88 
              94 94 58 89 
              89 41 49 88 
              89 41 5C 89 
              41 41 9E 89 
              94 78 88 89 
              41 49 9E 88 
              94 6C 88 89 
              7C 9E 9E 9E 
              8E 89 42 6B 
              80 26 9C 00 
              BD 94 94 54 
              89 41 57 88 
              89 41 46 91 
              89 41 4D 9E 
              88 94 89 41 
              4A 88 89 50 
              91 89 41 49 
              9E 9E 8E 89 
              41 52 80 15 
              9D 00 BD 94 
              61 89 89 41 
              4A 89 89 41 
              43 91 48 9E 
              8E 42 6E 80 
              20 9E 00 BD 
              94 94 5A 88 
              71 89 75 91 
              89 41 43 9E 
              85 94 65 85 
              41 5E 88 6A 
              9E 9E 8E 89 
              77 77 40 80 
              62 9F 00 BD 
              94 94 94 89 
              41 50 91 89 
              41 61 88 89 
              55 85 64 9E 
              88 94 89 63 
              89 42 89 41 
              44 89 89 48 
              9E 88 94 89 
              41 47 85 7D 
              91 65 9E 85 
              94 89 72 91 
              53 89 89 6A 
              9E 9E 91 94 
              94 41 58 91 
              89 41 45 89 
              89 78 9E 85 
              94 41 56 85 
              51 88 89 71 
              89 89 76 9E 
              91 94 89 58 
              85 71 91 54 
              88 89 56 9E 
              9E 9E 8E 89 
              41 80 2E A0 
              00 BD 94 94 
              89 6E 85 41 
              56 9E 88 94 
              41 47 88 41 
              54 92 89 41 
              4B 85 89 60 
              9E 88 94 59 
              88 89 60 88 
              89 5C 92 41 
              5E 9E 9E 8E 
              89 57 76 80 
              25 A1 00 BD 
              94 94 89 41 
              60 89 89 41 
              5C 88 89 41 
              49 9E 85 94 
              89 69 85 89 
              5B 91 89 6E 
              91 41 4D 9E 
              9E 8E 67 6D 
              80 10 A2 00 
              BD 94 41 5F 
              89 65 88 79 
              9E 8E 41 73 
              80 22 A3 00 
              BD 94 94 41 
              61 89 89 56 
              9E 92 94 45 
              89 66 92 55 
              9E 92 94 89 
              72 92 89 6A 
              9E 9E 8E 89 
              41 5B 80 6E 
              A4 00 BD 94 
              94 94 46 89 
              89 41 5E 9E 
              85 94 6D 89 
              44 89 89 41 
              58 91 66 9E 
              9E 91 94 94 
              89 62 88 66 
              91 89 72 89 
              89 41 43 9E 
              85 94 63 89 
              41 58 88 41 
              42 88 41 63 
              9E 9E 91 94 
              94 7D 85 41 
              61 89 89 69 
              9E 89 94 65 
              88 71 91 50 
              9E 85 94 41 
              47 88 89 41 
              46 85 89 41 
              49 91 41 41 
              9E 85 94 89 
              44 85 41 49 
              85 7F 9E 9E 
              9E 8E 47 6E 
              65 7F 7E 7E 
              80 15 A5 00 
              BD 94 89 41 
              4D 91 89 41 
              58 89 89 4D 
              9E 8E 89 41 
              49 80 10 A6 
              00 BD 94 7D 
              85 44 91 41 
              4E 9E 8E 43 
              7E 80 2F A7 
              00 BD 94 94 
              58 88 6E 88 
              89 41 45 9E 
              89 94 89 48 
              89 41 54 85 
              89 4D 88 89 
              4F 9E 85 94 
              71 90 89 44 
              90 7D 89 41 
              60 9E 9E 8E 
              89 44 4B 4F 
              80 11 A8 00 
              BD 94 7B 88 
              89 4B 85 71 
              9E 8E 89 47 
              60 80 12 A9 
              00 BD 94 89 
              41 4D 92 5B 
              88 52 9E 8E 
              89 41 62 80 
              2D AA 00 BD 
              94 94 89 41 
              5B 88 89 4B 
              89 89 55 88 
              89 4C 9E 89 
              94 45 89 89 
              61 89 89 44 
              85 41 61 9E 
              89 94 41 4B 
              88 74 9E 9E 
              8E 89 4A 46 
              80 10 AB 00 
              BD 94 89 69 
              89 41 64 9E 
              8E 89 42 4D 
              80 2A AC 00 
              BD 94 94 89 
              52 89 41 54 
              91 89 43 9E 
              85 94 41 50 
              85 41 62 85 
              89 5F 9E 91 
              94 41 4D 88 
              59 89 89 47 
              9E 9E 8E 7B 
              55 6D 80 73 
              AD 00 BD 94 
              94 94 4C 91 
              89 7D 9E 91 
              94 41 4D 91 
              5E 9E 91 94 
              42 89 41 5E 
              91 41 61 9E 
              88 94 89 41 
              88 89 5F 88 
              89 4C 9E 9E 
              85 94 94 41 
              4C 89 7B 88 
              73 9E 91 94 
              89 41 89 41 
              88 89 69 9E 
              89 94 89 65 
              85 89 4F 9E 
              89 94 89 5A 
              91 89 6D 9E 
              9E 91 94 94 
              89 41 59 88 
              89 58 9E 85 
              94 89 67 91 
              41 5D 85 89 
              71 9E 91 94 
              89 5C 89 67 
              88 41 49 9E 
              9E 9E 8E 48 
              7F 80 76 AE 
              00 BD 94 94 
              94 66 89 41 
              58 89 89 41 
              42 85 41 5C 
              9E 89 94 89 
              53 85 89 4C 
              88 89 41 5F 
              90 89 41 4A 
              9E 9E 85 94 
              94 41 5B 88 
              89 43 90 51 
              9E 88 94 78 
              85 89 5B 9E 
              90 94 89 4E 
              90 43 89 89 
              72 9E 9E 90 
              94 94 89 50 
              85 89 70 85 
              89 5A 9E 88 
              94 41 60 88 
              41 56 88 41 
              5F 88 89 43 
              9E 90 94 89 
              7F 88 89 64 
              90 41 55 9E 
              90 94 89 5E 
              88 46 90 41 
              88 7A 9E 9E 
              9E 8E 40 80 
              5E AF 00 BD 
              94 94 94 89 
              41 4A 88 89 
              55 88 7C 9E 
              85 94 63 88 
              41 5B 85 89 
              41 5D 89 41 
              5C 9E 85 94 
              6D 90 4C 88 
              7E 9E 90 94 
              41 58 89 61 
              85 59 85 6F 
              9E 9E 90 94 
              94 5A 85 41 
              41 85 89 7F 
              9E 90 94 5D 
              85 41 53 9E 
              90 94 6A 88 
              41 49 9E 90 
              94 89 49 89 
              89 41 41 85 
              45 89 89 6B 
              9E 9E 9E 8E 
              40 80 12 B0 
              00 BD 94 69 
              85 7C 85 89 
              6A 9E 8E 89 
              59 4E 58 80 
              23 B1 00 BD 
              94 94 89 41 
              40 92 89 46 
              89 41 59 9E 
              88 94 73 92 
              89 41 43 88 
              89 6A 89 89 
              7D 9E 9E 8E 
              41 44 80 2F 
              B2 00 BD 94 
              94 7D 88 59 
              85 41 5B 91 
              41 4E 9E 91 
              94 41 55 91 
              89 70 89 89 
              45 85 89 41 
              4A 9E 85 94 
              89 41 5B 91 
              62 91 41 54 
              9E 9E 8E 7F 
              6F 80 90 B3 
              00 BD 94 94 
              94 89 5E 91 
              89 41 59 9E 
              85 94 77 89 
              69 9E 89 94 
              55 88 89 74 
              9E 9E 91 94 
              94 89 78 91 
              41 58 89 70 
              9E 85 94 89 
              4E 91 89 4B 
              89 89 41 54 
              89 89 41 4E 
              9E 85 94 5F 
              85 43 9E 9E 
              88 94 94 41 
              5F 89 89 77 
              88 78 85 41 
              56 9E 91 94 
              89 41 44 85 
              58 89 89 6C 
              89 41 45 9E 
              9E 88 94 94 
              89 79 91 89 
              64 89 5B 9E 
              88 94 64 91 
              89 48 91 89 
              54 89 89 74 
              9E 91 94 89 
              41 55 85 69 
              85 89 41 64 
              9E 88 94 89 
              4D 89 89 65 
              91 59 9E 9E 
              9E 8E 89 44 
              71 80 14 B4 
              00 BD 94 89 
              57 89 89 73 
              90 89 50 89 
              89 67 9E 8E 
              54 80 13 B5 
              00 BD 94 66 
              89 89 51 92 
              89 71 88 41 
              43 9E 8E 65 
              80 1F B6 00 
              BD 94 94 89 
              73 89 5B 90 
              7A 88 89 69 
              9E 88 94 5D 
              90 89 41 57 
              85 89 68 9E 
              9E 8E 68 80 
              87 B7 00 BD 
              94 94 94 41 
              45 89 6F 88 
              41 4B 85 57 
              9E 91 94 89 
              4F 89 89 51 
              88 89 5E 9E 
              89 94 42 89 
              41 54 89 89 
              41 60 9E 9E 
              85 94 94 41 
              46 88 41 4C 
              91 89 73 9E 
              85 94 54 88 
              41 50 9E 91 
              94 7E 88 4E 
              88 89 41 4E 
              9E 9E 89 94 
              94 89 41 4D 
              89 89 52 9E 
              89 94 58 85 
              89 41 46 91 
              89 5A 9E 9E 
              91 94 94 89 
              65 85 41 48 
              9E 88 94 70 
              85 89 42 89 
              89 41 4E 9E 
              89 94 5E 89 
              89 7D 89 64 
              9E 89 94 89 
              67 91 4B 9E 
              9E 9E 8E 89 
              68 49 80 9B 
              B8 00 BD 94 
              94 94 59 89 
              41 51 90 78 
              9E 89 94 89 
              41 46 89 41 
              59 9E 89 94 
              49 88 89 41 
              64 9E 90 94 
              41 50 89 89 
              41 44 88 49 
              85 89 70 9E 
              9E 90 94 94 
              89 47 88 89 
              41 56 9E 88 
              94 89 58 88 
              77 9E 85 94 
              73 90 89 41 
              41 88 89 5E 
              9E 9E 90 94 
              94 4C 90 41 
              89 7A 9E 90 
              94 43 88 6D 
              90 41 52 85 
              89 56 9E 90 
              94 89 49 89 
              46 90 89 55 
              9E 89 94 41 
              85 89 41 55 
              9E 9E 88 94 
              94 41 55 89 
              70 88 7C 89 
              41 43 9E 88 
              94 6C 89 61 
              88 89 7C 85 
              49 9E 88 94 
              41 4E 89 6F 
              88 89 41 4C 
              9E 9E 9E 8E 
              40 80 29 B9 
              00 BD 94 94 
              59 88 79 9E 
              88 94 41 51 
              85 41 61 9E 
              89 94 41 49 
              85 89 6B 9E 
              85 94 89 68 
              88 89 6E 9E 
              9E 8E 89 7F 
              7D 7F 80 5A 
              BA 00 BD 94 
              94 94 89 70 
              88 5E 9E 88 
              94 7D 85 89 
              41 5A 9E 92 
              94 41 44 89 
              89 72 92 41 
              4B 88 89 41 
              56 9E 85 94 
              89 41 4E 92 
              67 92 41 59 
              9E 9E 92 94 
              94 89 7C 92 
              51 9E 85 94 
              4A 89 41 4B 
              92 89 41 58 
              89 89 41 48 
              9E 85 94 43 
              88 89 79 92 
              89 59 89 89 
              48 9E 9E 9E 
              8E 5E 58 5F 
              80 46 BB 00 
              BD 94 94 94 
              89 41 58 89 
              89 65 88 5D 
              9E 88 94 89 
              41 62 85 89 
              41 4C 88 66 
              88 41 46 9E 
              9E 88 94 94 
              76 89 89 5A 
              9E 90 94 41 
              60 85 89 65 
              89 89 49 9E 
              88 94 89 70 
              88 6C 85 54 
              85 89 58 9E 
              9E 9E 8E 41 
              76 7E 80 27 
              BC 00 BD 94 
              94 47 88 4C 
              9E 89 94 89 
              41 54 90 41 
              41 90 56 9E 
              89 94 89 7C 
              90 41 47 85 
              89 41 42 9E 
              9E 8E 41 4A 
              53 80 29 BD 
              00 BD 94 94 
              89 79 88 89 
              5E 88 43 89 
              47 9E 88 94 
              89 55 88 41 
              42 90 89 5B 
              9E 89 94 41 
              61 90 4D 85 
              40 9E 9E 8E 
              89 76 80 10 
              BE 00 BD 94 
              89 6E 88 41 
              88 59 9E 8E 
              89 54 80 21 
              BF 00 BD 94 
              94 5F 88 89 
              5F 88 41 45 
              89 48 9E 85 
              94 89 41 61 
              85 41 44 9E 
              9E 8E 89 41 
              62 4E 74 80 
              13 C0 00 BD 
              94 89 41 52 
              89 72 89 89 
              49 9E 8E 89 
              41 7B 80 21 
              C1 00 BD 94 
              94 89 5A 88 
              77 9E 89 94 
              41 60 89 4C 
              88 60 9E 89 
              94 89 4E 90 
              50 9E 9E 8E 
              89 41 67 80 
              21 C2 00 BD 
              94 94 52 91 
              41 55 85 40 
              85 68 9E 89 
              94 89 7C 85 
              89 41 4F 91 
              5F 9E 9E 8E 
              89 41 4A 4D 
              80 3C C3 00 
              BD 94 94 89 
              6D 89 89 41 
              58 89 89 7D 
              9E 91 94 89 
              64 85 41 43 
              85 64 85 7B 
              9E 89 94 41 
              5F 85 5B 89 
              71 89 89 41 
              60 9E 89 94 
              41 42 91 40 
              89 6C 85 7B 
              9E 9E 8E 89 
              53 62 70 42 
              80 6B C4 00 
              BD 94 94 94 
              41 4B 90 53 
              89 89 65 90 
              89 5E 9E 88 
              94 89 41 59 
              89 89 41 40 
              90 41 5F 89 
              41 53 9E 9E 
              89 94 94 89 
              41 52 85 4C 
              88 89 48 9E 
              90 94 89 74 
              85 89 41 43 
              89 89 5B 9E 
              85 94 89 7D 
              89 7C 90 89 
              6C 9E 9E 85 
              94 94 89 41 
              55 90 41 5E 
              9E 89 94 89 
              41 41 88 89 
              6A 85 89 41 
              43 88 89 69 
              9E 9E 9E 8E 
              89 41 46 49 
              68 7F 7C 80 
              3A C5 00 BD 
              94 94 41 50 
              85 89 79 9E 
              88 94 41 62 
              85 89 41 55 
              92 89 67 88 
              89 41 53 9E 
              85 94 41 60 
              88 41 43 85 
              89 41 4F 9E 
              88 94 89 5E 
              89 69 92 45 
              9E 9E 8E 89 
              42 67 4B 69 
              44 80 6A C6 
              00 BD 94 94 
              94 89 45 88 
              52 90 89 41 
              46 9E 90 94 
              5A 89 53 9E 
              88 94 77 89 
              53 9E 89 94 
              41 42 85 89 
              5D 89 89 41 
              42 9E 9E 89 
              94 94 74 88 
              89 5A 89 41 
              46 9E 89 94 
              89 7A 88 63 
              85 89 41 43 
              90 41 64 9E 
              9E 89 94 94 
              75 88 89 41 
              45 90 5A 88 
              45 9E 89 94 
              89 52 85 64 
              88 44 9E 89 
              94 89 58 90 
              89 5C 90 43 
              9E 9E 9E 8E 
              89 49 64 80 
              14 C7 00 BD 
              94 41 43 89 
              89 41 5F 85 
              89 69 9E 8E 
              89 7B 74 80 
              81 C8 00 BD 
              94 94 94 62 
              90 72 88 41 
              49 9E 90 94 
              40 90 62 9E 
              85 94 7C 88 
              89 6F 89 44 
              85 7A 9E 85 
              94 5E 89 4A 
              89 89 41 45 
              9E 9E 88 94 
              94 79 90 41 
              47 88 53 90 
              89 41 63 9E 
              90 94 89 60 
              90 89 45 9E 
              90 94 89 41 
              5B 88 89 55 
              85 41 46 89 
              89 4F 9E 9E 
              88 94 94 89 
              4C 88 89 5C 
              85 4C 9E 90 
              94 89 4C 90 
              89 6B 88 41 
              54 9E 88 94 
              6B 90 89 41 
              48 9E 88 94 
              78 88 89 76 
              90 89 54 89 
              89 41 54 9E 
              9E 9E 8E 40 
              80 23 C9 00 
              BD 94 94 89 
              62 89 89 41 
              5D 85 89 44 
              9E 89 94 41 
              43 88 55 9E 
              89 94 54 85 
              58 9E 9E 8E 
              89 4F 4E 80 
              67 CA 00 BD 
              94 94 94 89 
              59 89 41 5D 
              85 89 41 5D 
              9E 91 94 89 
              77 89 89 71 
              88 46 91 46 
              9E 85 94 48 
              91 70 85 89 
              41 50 88 89 
              46 9E 9E 85 
              94 94 89 5C 
              91 41 4C 89 
              89 6E 9E 88 
              94 69 89 89 
              41 63 85 56 
              85 89 41 4F 
              9E 88 94 7F 
              88 44 88 7B 
              85 41 49 9E 
              88 94 89 41 
              88 41 4E 88 
              44 91 89 55 
              9E 9E 9E 8E 
              43 66 51 71 
              5E 58 80 00 	.db	$22,$01,$00,$b1,$3f,$1a,$41,$42,$43,$44,$45,$46,$47,$48,$49,$4a,$4b,$4c,$4d,$4e,$4f,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$5a,$0d,$80,$14,$02,$00,$b1,$3f,$0c,$53,$65,$65,$64,$20,$3d,$20,$31,$39,$38,$39,$30,$0d,$80,$10,$03,$00,$bd,$94,$89,$55,$89,$89,$41,$55,$9e,$8e,$41,$40,$80,$35,$04,$00,$bd,$94,$94,$70,$85,$89,$41,$59,$90,$89,$41,$5c,$9e,$90,$94,$89,$45,$85,$89,$6e,$9e,$85,$94,$5c,$85,$89,$41,$4a,$88,$66,$9e,$89,$94,$89,$4b,$89,$41,$4d,$88,$89,$66,$9e,$9e,$8e,$89,$41,$73,$4c,$40,$80,$23,$05,$00,$bd,$94,$94,$89,$7b,$88,$89,$41,$51,$90,$89,$41,$55,$9e,$89,$94,$41,$64,$85,$42,$89,$59,$88,$89,$76,$9e,$9e,$8e,$89,$45,$59,$80,$35,$06,$00,$bd,$94,$94,$89,$72,$91,$89,$41,$4c,$89,$89,$69,$9e,$85,$94,$89,$41,$44,$88,$89,$6c,$9e,$91,$94,$89,$4e,$85,$89,$41,$50,$89,$89,$41,$44,$89,$89,$69,$9e,$88,$94,$41,$4a,$89,$51,$9e,$9e,$8e,$7d,$76,$80,$2c,$07,$00,$bd,$94,$94,$89,$41,$46,$85,$89,$60,$91,$6d,$91,$41,$52,$9e,$88,$94,$89,$64,$91,$89,$7b,$9e,$89,$94,$89,$41,$88,$89,$68,$88,$41,$41,$91,$51,$9e,$9e,$8e,$63,$43,$80,$32,$08,$00,$bd,$94,$94,$89,$7f,$85,$89,$76,$9e,$89,$94,$89,$5c,$88,$4e,$9e,$85,$94,$89,$73,$90,$41,$52,$89,$89,$6e,$9e,$89,$94,$89,$45,$90,$41,$40,$89,$89,$44,$88,$89,$73,$9e,$9e,$8e,$41,$50,$79,$80,$15,$09,$00,$bd,$94,$76,$85,$89,$42,$88,$89,$41,$50,$89,$59,$9e,$8e,$89,$43,$55,$80,$68,$0a,$00,$bd,$94,$94,$94,$89,$52,$88,$89,$4e,$88,$41,$60,$89,$6b,$9e,$89,$94,$7f,$88,$7b,$9e,$85,$94,$4d,$89,$89,$41,$5c,$85,$89,$41,$56,$88,$89,$70,$9e,$91,$94,$89,$51,$89,$4d,$89,$89,$41,$4d,$89,$41,$54,$9e,$9e,$85,$94,$94,$89,$4d,$88,$89,$51,$89,$41,$5b,$89,$65,$9e,$85,$94,$89,$6b,$85,$5b,$9e,$85,$94,$89,$76,$89,$7d,$88,$89,$64,$9e,$85,$94,$89,$57,$85,$89,$5c,$9e,$9e,$9e,$8e,$49,$66,$6b,$7d,$69,$54,$68,$80,$0e,$0b,$00,$bd,$94,$7b,$89,$41,$50,$9e,$8e,$89,$55,$80,$0d,$0c,$00,$bd,$94,$89,$56,$90,$5a,$9e,$8e,$4a,$80,$13,$0d,$00,$bd,$94,$89,$41,$60,$88,$41,$4b,$91,$89,$45,$9e,$8e,$89,$45,$80,$2a,$0e,$00,$bd,$94,$94,$5d,$89,$7b,$9e,$85,$94,$89,$41,$53,$89,$4e,$9e,$89,$94,$89,$77,$89,$41,$40,$9e,$90,$94,$89,$41,$5c,$88,$5a,$88,$89,$76,$9e,$9e,$8e,$6e,$40,$80,$1f,$0f,$00,$bd,$94,$94,$41,$5c,$85,$44,$85,$40,$9e,$85,$94,$41,$4c,$88,$41,$4d,$90,$89,$6f,$85,$89,$75,$9e,$9e,$8e,$40,$80,$38,$10,$00,$bd,$94,$94,$89,$77,$89,$89,$4c,$88,$45,$9e,$85,$94,$89,$62,$85,$89,$41,$4f,$88,$41,$5d,$9e,$88,$94,$89,$7e,$89,$89,$41,$49,$9e,$89,$94,$89,$50,$88,$77,$92,$41,$5c,$89,$89,$41,$64,$9e,$9e,$8e,$89,$59,$75,$5e,$80,$92,$11,$00,$bd,$94,$94,$94,$89,$41,$42,$85,$89,$77,$88,$89,$78,$91,$41,$5a,$9e,$89,$94,$61,$91,$7e,$89,$75,$9e,$91,$94,$41,$4e,$88,$89,$41,$56,$89,$89,$52,$88,$89,$62,$9e,$85,$94,$89,$41,$4c,$85,$42,$88,$4c,$9e,$9e,$88,$94,$94,$89,$78,$89,$62,$9e,$88,$94,$89,$41,$60,$89,$5b,$85,$41,$5b,$89,$6c,$9e,$9e,$88,$94,$94,$4b,$89,$41,$5c,$9e,$89,$94,$89,$72,$88,$89,$5f,$85,$7a,$9e,$88,$94,$60,$91,$4d,$9e,$89,$94,$89,$4c,$91,$89,$72,$91,$72,$89,$89,$77,$9e,$9e,$88,$94,$94,$89,$5b,$91,$41,$4c,$85,$89,$75,$85,$41,$5f,$9e,$89,$94,$41,$53,$91,$89,$7b,$89,$89,$47,$9e,$9e,$9e,$8e,$6a,$69,$80,$0d,$12,$00,$bd,$94,$41,$4f,$89,$76,$9e,$8e,$59,$80,$2f,$13,$00,$bd,$94,$94,$89,$43,$89,$53,$85,$89,$41,$63,$85,$55,$9e,$89,$94,$64,$88,$74,$89,$89,$4a,$9e,$88,$94,$89,$41,$61,$88,$41,$47,$89,$41,$49,$85,$41,$5f,$9e,$9e,$8e,$47,$7a,$77,$80,$11,$14,$00,$bd,$94,$89,$76,$85,$41,$60,$9e,$8e,$89,$41,$51,$40,$80,$7d,$15,$00,$bd,$94,$94,$94,$89,$67,$85,$67,$9e,$89,$94,$41,$4f,$85,$64,$9e,$85,$94,$89,$41,$4a,$85,$41,$47,$89,$66,$9e,$88,$94,$66,$89,$89,$6d,$85,$89,$5a,$89,$89,$5f,$9e,$9e,$85,$94,$94,$89,$41,$64,$89,$59,$89,$44,$9e,$85,$94,$89,$59,$85,$89,$7c,$85,$89,$5a,$88,$47,$9e,$89,$94,$6d,$85,$89,$43,$9e,$9e,$88,$94,$94,$89,$41,$61,$89,$5f,$92,$89,$52,$92,$89,$71,$9e,$92,$94,$89,$41,$62,$89,$89,$4e,$89,$89,$72,$92,$41,$42,$9e,$92,$94,$40,$92,$89,$7d,$9e,$9e,$9e,$8e,$51,$4d,$5f,$65,$53,$7e,$50,$6e,$80,$33,$16,$00,$bd,$94,$94,$66,$85,$89,$59,$88,$89,$50,$9e,$90,$94,$5a,$89,$56,$85,$41,$41,$88,$65,$9e,$88,$94,$6a,$88,$54,$88,$77,$88,$41,$60,$9e,$85,$94,$89,$58,$88,$89,$7b,$9e,$9e,$8e,$89,$44,$6f,$66,$80,$92,$17,$00,$bd,$94,$94,$94,$89,$41,$49,$89,$89,$41,$63,$88,$89,$41,$45,$88,$89,$51,$9e,$89,$94,$89,$50,$89,$7c,$9e,$89,$94,$45,$90,$89,$41,$50,$89,$89,$5a,$89,$89,$41,$46,$9e,$9e,$88,$94,$94,$68,$88,$7f,$85,$7b,$90,$79,$9e,$89,$94,$89,$68,$88,$5f,$89,$4c,$85,$89,$43,$9e,$89,$94,$89,$7e,$89,$89,$41,$53,$9e,$9e,$90,$94,$94,$4b,$90,$53,$88,$89,$41,$45,$9e,$89,$94,$89,$41,$5e,$85,$89,$6c,$89,$46,$90,$89,$69,$9e,$9e,$90,$94,$94,$89,$41,$59,$85,$89,$6b,$89,$41,$54,$90,$77,$9e,$88,$94,$4f,$89,$89,$41,$61,$85,$45,$9e,$85,$94,$89,$57,$85,$89,$78,$90,$46,$88,$50,$9e,$9e,$9e,$8e,$40,$80,$0f,$18,$00,$bd,$94,$41,$4e,$88,$41,$58,$9e,$8e,$42,$66,$80,$12,$19,$00,$bd,$94,$44,$89,$89,$41,$62,$88,$89,$41,$5e,$9e,$8e,$48,$80,$1e,$1a,$00,$bd,$94,$94,$57,$90,$77,$89,$41,$57,$9e,$90,$94,$89,$54,$88,$89,$41,$40,$90,$89,$41,$4c,$9e,$9e,$8e,$40,$80,$77,$1b,$00,$bd,$94,$94,$94,$5e,$89,$89,$6c,$88,$41,$60,$92,$89,$6d,$9e,$89,$94,$41,$58,$88,$41,$53,$88,$72,$9e,$92,$94,$4d,$92,$89,$53,$85,$6b,$9e,$89,$94,$5f,$92,$42,$89,$44,$88,$89,$41,$63,$9e,$9e,$92,$94,$94,$89,$73,$89,$89,$41,$42,$88,$89,$48,$85,$4a,$9e,$89,$94,$41,$50,$92,$58,$9e,$9e,$88,$94,$94,$89,$49,$92,$41,$49,$92,$89,$6f,$9e,$89,$94,$48,$88,$89,$4b,$9e,$88,$94,$41,$4a,$85,$89,$41,$46,$92,$89,$5e,$9e,$92,$94,$41,$45,$88,$41,$64,$9e,$9e,$9e,$8e,$41,$40,$4a,$80,$21,$1c,$00,$bd,$94,$94,$89,$5f,$88,$89,$5e,$9e,$88,$94,$89,$7b,$85,$89,$7d,$85,$89,$4b,$92,$89,$41,$51,$9e,$9e,$8e,$49,$6a,$77,$80,$16,$1d,$00,$bd,$94,$89,$41,$59,$88,$42,$88,$89,$41,$60,$85,$56,$9e,$8e,$89,$62,$57,$80,$10,$1e,$00,$bd,$94,$89,$4c,$89,$89,$41,$5f,$9e,$8e,$41,$53,$80,$a2,$1f,$00,$bd,$94,$94,$94,$89,$73,$92,$89,$41,$4b,$9e,$85,$94,$7f,$89,$89,$7c,$9e,$89,$94,$89,$41,$53,$88,$89,$41,$45,$85,$89,$6f,$92,$41,$57,$9e,$9e,$88,$94,$94,$89,$4c,$88,$89,$5b,$9e,$88,$94,$41,$52,$88,$5a,$88,$89,$41,$43,$9e,$92,$94,$89,$6e,$92,$89,$41,$51,$85,$41,$5c,$9e,$9e,$89,$94,$94,$65,$89,$4a,$85,$89,$60,$88,$41,$61,$9e,$92,$94,$61,$88,$89,$5a,$92,$89,$73,$9e,$85,$94,$89,$5d,$85,$89,$5a,$9e,$89,$94,$89,$41,$51,$85,$4c,$85,$5a,$85,$78,$9e,$9e,$88,$94,$94,$41,$40,$85,$89,$5b,$89,$89,$42,$92,$40,$9e,$85,$94,$57,$92,$41,$40,$89,$41,$59,$85,$89,$41,$47,$9e,$89,$94,$89,$41,$5a,$88,$89,$41,$5e,$9e,$9e,$9e,$8e,$89,$6f,$50,$55,$7d,$80,$85,$20,$00,$bd,$94,$94,$94,$48,$88,$89,$72,$88,$89,$41,$56,$9e,$88,$94,$56,$90,$89,$41,$51,$85,$41,$4d,$9e,$88,$94,$89,$70,$85,$55,$90,$89,$55,$90,$89,$41,$57,$9e,$89,$94,$50,$89,$41,$60,$88,$89,$41,$55,$88,$89,$78,$9e,$9e,$90,$94,$94,$89,$67,$89,$89,$6e,$9e,$90,$94,$89,$68,$85,$41,$55,$85,$59,$85,$89,$54,$9e,$88,$94,$41,$62,$88,$89,$41,$56,$89,$41,$61,$9e,$9e,$88,$94,$94,$89,$7c,$90,$89,$41,$55,$90,$89,$5e,$9e,$90,$94,$6f,$85,$58,$9e,$89,$94,$89,$41,$64,$88,$89,$41,$44,$88,$89,$41,$5a,$90,$89,$53,$9e,$9e,$9e,$8e,$50,$43,$80,$1a,$21,$00,$bd,$94,$94,$89,$47,$88,$41,$54,$9e,$85,$94,$89,$41,$5b,$88,$6e,$9e,$9e,$8e,$89,$76,$49,$80,$38,$22,$00,$bd,$94,$94,$89,$7c,$88,$41,$54,$92,$41,$51,$89,$63,$9e,$85,$94,$89,$41,$5b,$85,$41,$47,$89,$58,$9e,$85,$94,$6a,$85,$48,$9e,$89,$94,$41,$5c,$92,$89,$41,$5e,$88,$77,$89,$65,$9e,$9e,$8e,$89,$47,$40,$76,$61,$48,$80,$3f,$23,$00,$bd,$94,$94,$94,$5d,$90,$89,$41,$5b,$9e,$85,$94,$89,$4b,$85,$89,$41,$43,$9e,$9e,$89,$94,$94,$89,$41,$5d,$90,$89,$41,$63,$90,$40,$9e,$90,$94,$41,$4d,$88,$41,$64,$89,$89,$51,$9e,$89,$94,$60,$85,$89,$50,$89,$89,$6f,$9e,$9e,$9e,$8e,$79,$65,$80,$65,$24,$00,$bd,$94,$94,$94,$89,$44,$85,$89,$41,$50,$91,$89,$41,$41,$9e,$88,$94,$89,$71,$85,$89,$41,$53,$89,$46,$9e,$91,$94,$89,$7e,$89,$89,$50,$89,$62,$9e,$89,$94,$89,$41,$45,$91,$62,$91,$79,$85,$89,$60,$9e,$9e,$85,$94,$94,$41,$5f,$88,$52,$9e,$85,$94,$89,$41,$5e,$85,$41,$5e,$91,$89,$41,$60,$85,$89,$41,$5e,$9e,$89,$94,$89,$48,$91,$41,$48,$88,$64,$9e,$91,$94,$55,$91,$89,$41,$51,$9e,$9e,$9e,$8e,$43,$80,$95,$25,$00,$bd,$94,$94,$94,$89,$41,$62,$90,$49,$9e,$85,$94,$5c,$85,$89,$6f,$89,$89,$53,$9e,$90,$94,$41,$4f,$85,$41,$53,$90,$41,$62,$9e,$89,$94,$89,$60,$90,$89,$79,$90,$89,$44,$9e,$9e,$88,$94,$94,$89,$4d,$85,$89,$4e,$9e,$88,$94,$89,$41,$53,$90,$41,$54,$85,$55,$85,$89,$41,$9e,$85,$94,$89,$41,$64,$89,$57,$85,$41,$50,$85,$5d,$9e,$9e,$89,$94,$94,$41,$62,$89,$41,$59,$85,$41,$46,$85,$5d,$9e,$85,$94,$89,$41,$64,$85,$69,$85,$54,$90,$58,$9e,$9e,$88,$94,$94,$89,$41,$54,$88,$89,$53,$90,$6a,$9e,$85,$94,$89,$55,$88,$41,$53,$85,$70,$85,$71,$9e,$88,$94,$43,$89,$72,$9e,$9e,$9e,$8e,$45,$7b,$7e,$71,$6f,$80,$16,$26,$00,$bd,$94,$41,$5a,$85,$75,$90,$89,$67,$90,$89,$41,$43,$9e,$8e,$41,$4a,$40,$80,$12,$27,$00,$bd,$94,$7b,$88,$41,$45,$85,$89,$45,$9e,$8e,$89,$44,$5e,$80,$95,$28,$00,$bd,$94,$94,$94,$41,$4c,$92,$41,$41,$88,$77,$9e,$88,$94,$7b,$92,$89,$6d,$85,$6d,$85,$51,$9e,$89,$94,$5e,$92,$7d,$9e,$9e,$88,$94,$94,$41,$58,$92,$89,$54,$9e,$92,$94,$41,$64,$85,$89,$63,$9e,$9e,$89,$94,$94,$77,$92,$89,$79,$92,$89,$41,$54,$88,$89,$78,$9e,$92,$94,$89,$75,$92,$7c,$92,$41,$46,$85,$89,$78,$9e,$92,$94,$41,$49,$85,$89,$76,$88,$41,$42,$9e,$9e,$92,$94,$94,$89,$52,$85,$89,$41,$62,$92,$89,$68,$9e,$85,$94,$89,$42,$88,$89,$41,$59,$89,$7f,$85,$41,$57,$9e,$89,$94,$89,$67,$92,$41,$49,$92,$41,$54,$92,$43,$9e,$85,$94,$6f,$89,$41,$5a,$88,$60,$9e,$9e,$9e,$8e,$89,$64,$74,$63,$6d,$80,$12,$29,$00,$bd,$94,$89,$41,$42,$90,$66,$89,$78,$9e,$8e,$89,$41,$52,$80,$39,$2a,$00,$bd,$94,$94,$89,$41,$52,$92,$51,$89,$7c,$85,$41,$40,$9e,$92,$94,$89,$41,$57,$92,$89,$41,$53,$88,$45,$9e,$85,$94,$89,$41,$4f,$92,$41,$5e,$9e,$85,$94,$89,$41,$59,$92,$89,$55,$92,$89,$41,$48,$9e,$9e,$8e,$41,$6c,$7b,$80,$38,$2b,$00,$bd,$94,$94,$7f,$89,$89,$53,$90,$89,$41,$4c,$9e,$85,$94,$89,$41,$54,$89,$79,$9e,$89,$94,$41,$58,$85,$41,$5e,$85,$89,$53,$90,$54,$9e,$85,$94,$79,$90,$41,$58,$90,$89,$41,$43,$88,$41,$4b,$9e,$9e,$8e,$89,$65,$50,$80,$6f,$2c,$00,$bd,$94,$94,$94,$41,$4f,$85,$89,$41,$49,$85,$41,$53,$9e,$88,$94,$89,$55,$85,$59,$9e,$90,$94,$61,$90,$89,$4d,$9e,$9e,$90,$94,$94,$41,$4d,$89,$6a,$9e,$89,$94,$89,$45,$90,$89,$58,$85,$89,$41,$4e,$9e,$89,$94,$89,$41,$43,$85,$41,$5f,$88,$41,$4a,$85,$89,$6e,$9e,$89,$94,$78,$88,$41,$4e,$90,$76,$9e,$9e,$89,$94,$94,$41,$63,$90,$89,$41,$41,$89,$89,$62,$88,$89,$61,$9e,$88,$94,$5b,$90,$89,$5c,$85,$41,$53,$88,$89,$70,$9e,$9e,$9e,$8e,$40,$80,$16,$2d,$00,$bd,$94,$89,$41,$4d,$90,$57,$88,$89,$41,$50,$88,$44,$9e,$8e,$89,$41,$7d,$80,$0e,$2e,$00,$bd,$94,$41,$63,$92,$41,$4e,$9e,$8e,$6d,$80,$11,$2f,$00,$bd,$94,$89,$41,$4f,$85,$7e,$9e,$8e,$89,$41,$4c,$62,$80,$0e,$30,$00,$bd,$94,$7f,$91,$41,$55,$9e,$8e,$41,$7f,$80,$3e,$31,$00,$bd,$94,$94,$94,$70,$90,$41,$63,$9e,$85,$94,$89,$79,$85,$89,$63,$88,$89,$4d,$9e,$90,$94,$41,$4d,$90,$89,$73,$85,$89,$41,$9e,$9e,$89,$94,$94,$41,$47,$90,$89,$67,$88,$89,$7e,$9e,$85,$94,$89,$6e,$88,$89,$41,$4a,$9e,$9e,$9e,$8e,$45,$68,$80,$31,$32,$00,$bd,$94,$94,$74,$85,$89,$59,$91,$89,$78,$88,$89,$41,$40,$9e,$89,$94,$89,$41,$48,$91,$89,$41,$49,$85,$89,$41,$4e,$88,$6e,$9e,$91,$94,$89,$41,$4b,$89,$89,$41,$46,$9e,$9e,$8e,$89,$45,$80,$15,$33,$00,$bd,$94,$89,$5c,$85,$41,$61,$92,$57,$85,$41,$51,$9e,$8e,$89,$77,$5d,$80,$1c,$34,$00,$bd,$94,$94,$89,$41,$43,$85,$49,$9e,$89,$94,$41,$4b,$89,$65,$88,$41,$58,$9e,$9e,$8e,$89,$4b,$59,$80,$3a,$35,$00,$bd,$94,$94,$89,$53,$88,$89,$41,$46,$89,$89,$41,$41,$88,$89,$41,$45,$9e,$88,$94,$41,$5e,$88,$6c,$89,$89,$7d,$9e,$88,$94,$5f,$90,$89,$5e,$9e,$88,$94,$89,$7a,$85,$5d,$85,$89,$41,$4d,$90,$89,$4e,$9e,$9e,$8e,$5f,$69,$4e,$80,$ae,$36,$00,$bd,$94,$94,$94,$89,$4b,$91,$89,$41,$5c,$9e,$88,$94,$89,$5e,$89,$89,$4e,$89,$6a,$88,$89,$7e,$9e,$91,$94,$41,$45,$88,$41,$5f,$9e,$9e,$88,$94,$94,$89,$74,$91,$7c,$88,$89,$43,$91,$89,$42,$9e,$88,$94,$5e,$88,$89,$66,$91,$64,$9e,$85,$94,$89,$41,$4c,$85,$49,$9e,$89,$94,$41,$50,$91,$41,$5d,$9e,$9e,$85,$94,$94,$61,$91,$5e,$89,$45,$85,$89,$4d,$9e,$88,$94,$6e,$85,$89,$7c,$9e,$89,$94,$89,$70,$88,$89,$41,$58,$88,$89,$6a,$89,$89,$72,$9e,$91,$94,$89,$7b,$85,$5f,$88,$89,$5c,$89,$47,$9e,$9e,$89,$94,$94,$89,$66,$85,$41,$5e,$9e,$91,$94,$89,$41,$5d,$88,$89,$41,$54,$9e,$85,$94,$89,$41,$56,$85,$5e,$88,$89,$4d,$9e,$88,$94,$89,$41,$40,$91,$41,$55,$85,$41,$59,$9e,$9e,$9e,$8e,$89,$43,$4e,$4d,$73,$80,$31,$37,$00,$bd,$94,$94,$41,$4b,$88,$7f,$89,$4e,$9e,$89,$94,$89,$58,$92,$57,$89,$4c,$9e,$88,$94,$4d,$89,$89,$59,$9e,$89,$94,$89,$41,$52,$92,$41,$4f,$89,$89,$7e,$92,$89,$6b,$9e,$9e,$8e,$89,$77,$80,$0f,$38,$00,$bd,$94,$62,$89,$89,$41,$5d,$9e,$8e,$41,$7f,$80,$24,$39,$00,$bd,$94,$94,$41,$51,$89,$89,$6c,$85,$74,$9e,$88,$94,$42,$90,$7d,$85,$41,$56,$9e,$88,$94,$4a,$90,$89,$41,$4d,$9e,$9e,$8e,$65,$45,$80,$12,$3a,$00,$bd,$94,$41,$45,$85,$89,$41,$60,$9e,$8e,$89,$41,$67,$60,$80,$0d,$3b,$00,$bd,$94,$45,$89,$89,$62,$9e,$8e,$67,$80,$0f,$3c,$00,$bd,$94,$89,$41,$5d,$90,$41,$5f,$9e,$8e,$43,$80,$10,$3d,$00,$bd,$94,$89,$57,$85,$89,$41,$40,$9e,$8e,$57,$40,$80,$47,$3e,$00,$bd,$94,$94,$94,$41,$42,$89,$41,$44,$9e,$89,$94,$41,$54,$91,$6a,$89,$89,$6d,$9e,$9e,$91,$94,$94,$89,$41,$5a,$85,$41,$4c,$85,$5e,$9e,$88,$94,$67,$91,$47,$85,$7b,$9e,$91,$94,$89,$4e,$85,$41,$4c,$91,$7e,$88,$89,$60,$9e,$91,$94,$89,$41,$4e,$88,$54,$9e,$9e,$9e,$8e,$89,$41,$80,$13,$3f,$00,$bd,$94,$89,$6e,$88,$89,$41,$50,$91,$89,$4c,$9e,$8e,$89,$4a,$80,$3a,$40,$00,$bd,$94,$94,$94,$56,$90,$89,$79,$88,$89,$6e,$9e,$85,$94,$89,$53,$88,$89,$6c,$85,$41,$54,$89,$6f,$9e,$9e,$85,$94,$94,$89,$41,$5c,$90,$5f,$90,$89,$50,$9e,$90,$94,$89,$41,$54,$88,$89,$71,$89,$89,$6f,$9e,$9e,$9e,$8e,$40,$80,$33,$41,$00,$bd,$94,$94,$46,$89,$7a,$9e,$88,$94,$89,$74,$85,$89,$6f,$85,$70,$89,$48,$9e,$91,$94,$4e,$89,$89,$41,$63,$9e,$88,$94,$41,$59,$91,$89,$41,$60,$85,$73,$89,$89,$6d,$9e,$9e,$8e,$89,$41,$40,$72,$80,$81,$42,$00,$bd,$94,$94,$94,$89,$4f,$89,$41,$4a,$9e,$88,$94,$89,$65,$91,$89,$4c,$85,$89,$4e,$9e,$85,$94,$89,$41,$57,$89,$89,$64,$89,$7f,$89,$89,$7e,$9e,$9e,$88,$94,$94,$89,$41,$4a,$91,$89,$41,$5b,$91,$89,$41,$61,$89,$7a,$9e,$88,$94,$89,$6c,$85,$89,$48,$89,$60,$9e,$9e,$85,$94,$94,$89,$48,$85,$71,$89,$89,$41,$59,$91,$89,$4a,$9e,$89,$94,$51,$85,$41,$56,$88,$89,$74,$88,$89,$41,$61,$9e,$85,$94,$89,$67,$88,$41,$59,$9e,$88,$94,$89,$7a,$85,$41,$44,$89,$41,$5a,$89,$89,$41,$57,$9e,$9e,$9e,$8e,$89,$41,$52,$64,$7e,$7f,$80,$16,$43,$00,$bd,$94,$41,$88,$89,$41,$44,$89,$89,$78,$88,$89,$76,$9e,$8e,$89,$41,$41,$80,$87,$44,$00,$bd,$94,$94,$94,$89,$41,$4e,$85,$41,$58,$85,$41,$4f,$9e,$89,$94,$62,$88,$89,$41,$61,$85,$89,$43,$92,$89,$46,$9e,$9e,$85,$94,$94,$7d,$89,$89,$62,$92,$70,$85,$89,$41,$9e,$85,$94,$73,$88,$41,$60,$9e,$9e,$85,$94,$94,$89,$41,$43,$92,$89,$41,$59,$85,$89,$4f,$9e,$89,$94,$7a,$85,$89,$47,$9e,$92,$94,$89,$54,$92,$89,$50,$89,$44,$9e,$88,$94,$89,$58,$88,$4b,$88,$7e,$9e,$9e,$85,$94,$94,$89,$44,$92,$89,$71,$89,$41,$49,$88,$89,$41,$63,$9e,$85,$94,$58,$92,$89,$51,$92,$89,$72,$9e,$9e,$9e,$8e,$89,$46,$59,$57,$5d,$5e,$62,$5f,$4f,$46,$75,$80,$94,$45,$00,$bd,$94,$94,$94,$89,$44,$88,$89,$49,$85,$89,$41,$47,$9e,$89,$94,$89,$6f,$89,$89,$44,$90,$89,$7e,$85,$7f,$9e,$9e,$89,$94,$94,$89,$7e,$90,$40,$85,$41,$52,$90,$89,$41,$61,$9e,$89,$94,$7c,$89,$41,$4e,$9e,$85,$94,$5c,$88,$54,$89,$41,$5d,$9e,$9e,$85,$94,$94,$41,$58,$89,$44,$9e,$85,$94,$89,$7a,$85,$57,$89,$41,$46,$9e,$90,$94,$79,$90,$89,$68,$9e,$9e,$89,$94,$94,$89,$59,$89,$89,$41,$46,$90,$89,$41,$54,$89,$89,$41,$53,$9e,$90,$94,$52,$88,$89,$41,$52,$85,$41,$53,$90,$7f,$9e,$88,$94,$89,$41,$4e,$88,$41,$5e,$88,$58,$9e,$88,$94,$89,$41,$50,$89,$89,$41,$41,$9e,$9e,$9e,$8e,$44,$52,$42,$80,$2b,$46,$00,$bd,$94,$94,$7c,$89,$60,$9e,$89,$94,$89,$69,$88,$41,$54,$89,$77,$9e,$92,$94,$66,$89,$46,$9e,$89,$94,$5c,$89,$41,$46,$89,$89,$5b,$89,$89,$48,$9e,$9e,$8e,$4f,$80,$15,$47,$00,$bd,$94,$89,$6a,$89,$41,$5d,$91,$89,$52,$91,$89,$6f,$9e,$8e,$89,$41,$80,$37,$48,$00,$bd,$94,$94,$89,$41,$53,$90,$41,$55,$90,$41,$5c,$89,$89,$41,$41,$9e,$88,$94,$89,$69,$89,$41,$51,$90,$41,$47,$9e,$88,$94,$89,$41,$43,$88,$89,$60,$9e,$85,$94,$41,$47,$89,$89,$58,$9e,$9e,$8e,$89,$42,$52,$72,$80,$3a,$49,$00,$bd,$94,$94,$89,$41,$62,$85,$89,$47,$91,$41,$45,$89,$71,$9e,$88,$94,$89,$7f,$85,$89,$41,$60,$9e,$89,$94,$60,$91,$41,$4f,$89,$89,$41,$43,$9e,$85,$94,$5e,$88,$41,$59,$91,$41,$5b,$85,$5b,$9e,$9e,$8e,$89,$41,$6d,$63,$70,$80,$36,$4a,$00,$bd,$94,$94,$89,$46,$85,$58,$91,$41,$4d,$9e,$85,$94,$89,$5b,$91,$41,$49,$88,$5e,$88,$89,$41,$4d,$9e,$89,$94,$45,$88,$7d,$9e,$91,$94,$89,$48,$85,$89,$41,$55,$88,$49,$85,$89,$41,$46,$9e,$9e,$8e,$41,$73,$80,$6d,$4b,$00,$bd,$94,$94,$94,$52,$89,$44,$85,$89,$42,$88,$89,$4c,$9e,$89,$94,$56,$85,$6c,$89,$4c,$89,$41,$57,$9e,$90,$94,$41,$43,$88,$89,$41,$4f,$90,$4d,$9e,$9e,$85,$94,$94,$89,$41,$47,$89,$89,$63,$89,$89,$57,$9e,$90,$94,$89,$58,$89,$89,$6b,$9e,$9e,$88,$94,$94,$47,$90,$89,$65,$85,$89,$41,$51,$89,$89,$72,$9e,$89,$94,$89,$41,$64,$89,$89,$5b,$9e,$85,$94,$89,$69,$85,$41,$48,$89,$41,$5d,$85,$89,$41,$5d,$9e,$9e,$9e,$8e,$41,$65,$62,$50,$80,$16,$4c,$00,$bd,$94,$89,$41,$5f,$85,$89,$46,$89,$89,$41,$56,$88,$7e,$9e,$8e,$4b,$4e,$80,$16,$4d,$00,$bd,$94,$41,$43,$85,$58,$85,$89,$4d,$90,$89,$73,$9e,$8e,$89,$45,$46,$78,$80,$2c,$4e,$00,$bd,$94,$94,$79,$85,$45,$90,$41,$61,$9e,$85,$94,$89,$49,$85,$51,$88,$89,$7c,$9e,$85,$94,$41,$5e,$89,$89,$41,$4a,$9e,$90,$94,$89,$5c,$85,$89,$41,$9e,$9e,$8e,$58,$80,$14,$4f,$00,$bd,$94,$69,$92,$89,$41,$57,$85,$6f,$92,$53,$9e,$8e,$89,$7f,$43,$80,$2a,$50,$00,$bd,$94,$94,$89,$41,$4c,$89,$89,$41,$59,$9e,$90,$94,$89,$73,$89,$66,$85,$89,$41,$41,$9e,$88,$94,$89,$6c,$89,$56,$89,$77,$90,$89,$41,$52,$9e,$9e,$8e,$49,$80,$b7,$51,$00,$bd,$94,$94,$94,$89,$71,$89,$89,$41,$45,$88,$5b,$90,$6e,$9e,$89,$94,$79,$85,$89,$52,$9e,$89,$94,$89,$44,$89,$89,$68,$85,$41,$54,$85,$89,$48,$9e,$9e,$85,$94,$94,$89,$41,$48,$88,$41,$59,$88,$89,$6e,$89,$69,$9e,$88,$94,$41,$4b,$85,$89,$5a,$89,$64,$88,$4a,$9e,$85,$94,$41,$89,$41,$88,$89,$7b,$85,$4a,$9e,$9e,$88,$94,$94,$41,$46,$89,$41,$4d,$85,$89,$41,$4b,$85,$49,$9e,$88,$94,$89,$76,$89,$4c,$9e,$85,$94,$89,$41,$62,$85,$89,$41,$4d,$9e,$89,$94,$4f,$90,$89,$7a,$9e,$9e,$88,$94,$94,$89,$58,$85,$89,$41,$52,$90,$89,$4d,$88,$89,$41,$48,$9e,$89,$94,$89,$41,$48,$85,$89,$5c,$9e,$90,$94,$89,$58,$90,$89,$41,$61,$89,$89,$74,$90,$41,$4e,$9e,$88,$94,$45,$88,$89,$5e,$85,$89,$50,$88,$41,$5c,$9e,$9e,$9e,$8e,$5e,$56,$60,$53,$4d,$5b,$80,$11,$52,$00,$bd,$94,$5c,$89,$89,$43,$88,$89,$64,$9e,$8e,$89,$45,$80,$1d,$53,$00,$bd,$94,$94,$89,$71,$88,$41,$63,$9e,$89,$94,$5d,$88,$42,$85,$89,$70,$88,$89,$63,$9e,$9e,$8e,$42,$58,$80,$12,$54,$00,$bd,$94,$89,$41,$48,$89,$89,$61,$91,$68,$9e,$8e,$89,$47,$80,$6b,$55,$00,$bd,$94,$94,$94,$4b,$88,$89,$64,$89,$89,$62,$9e,$91,$94,$68,$88,$89,$63,$9e,$89,$94,$89,$41,$49,$85,$89,$41,$57,$91,$41,$5b,$89,$49,$9e,$85,$94,$41,$43,$85,$89,$41,$62,$88,$41,$58,$85,$89,$5c,$9e,$9e,$85,$94,$94,$40,$91,$89,$68,$85,$41,$63,$9e,$88,$94,$41,$41,$89,$41,$41,$9e,$91,$94,$89,$41,$46,$85,$89,$7e,$91,$6a,$9e,$85,$94,$89,$7a,$88,$89,$41,$58,$85,$89,$7b,$9e,$9e,$9e,$8e,$89,$42,$4a,$49,$5b,$5b,$77,$6c,$80,$42,$56,$00,$bd,$94,$94,$94,$65,$92,$5d,$9e,$89,$94,$43,$89,$89,$52,$88,$5d,$9e,$9e,$88,$94,$94,$89,$41,$5e,$89,$89,$67,$88,$89,$5a,$9e,$92,$94,$89,$76,$89,$89,$41,$64,$9e,$89,$94,$4a,$89,$41,$40,$88,$7c,$9e,$85,$94,$89,$49,$88,$41,$64,$9e,$9e,$9e,$8e,$46,$69,$80,$27,$57,$00,$bd,$94,$94,$89,$4f,$91,$89,$41,$4a,$89,$6e,$9e,$85,$94,$89,$5f,$85,$72,$88,$7d,$88,$77,$9e,$91,$94,$58,$88,$89,$45,$9e,$9e,$8e,$42,$5c,$77,$80,$13,$58,$00,$bd,$94,$6c,$89,$89,$54,$85,$71,$88,$89,$52,$9e,$8e,$4f,$6e,$80,$81,$59,$00,$bd,$94,$94,$94,$89,$64,$88,$89,$50,$89,$53,$92,$74,$9e,$88,$94,$52,$89,$73,$9e,$9e,$85,$94,$94,$89,$41,$4c,$88,$89,$61,$92,$69,$85,$45,$9e,$89,$94,$4b,$85,$68,$92,$41,$62,$85,$7c,$9e,$85,$94,$46,$85,$89,$65,$9e,$9e,$89,$94,$94,$41,$56,$92,$89,$48,$88,$89,$6a,$9e,$85,$94,$89,$59,$88,$89,$41,$48,$9e,$9e,$85,$94,$94,$66,$89,$53,$92,$54,$92,$89,$5f,$9e,$89,$94,$89,$7b,$92,$89,$41,$59,$9e,$88,$94,$89,$55,$85,$41,$44,$89,$89,$6d,$9e,$85,$94,$89,$71,$85,$89,$60,$9e,$9e,$9e,$8e,$54,$4c,$56,$4e,$44,$48,$80,$17,$5a,$00,$bd,$94,$89,$67,$85,$89,$41,$4e,$88,$89,$41,$54,$88,$89,$51,$9e,$8e,$6d,$7d,$80,$8b,$5b,$00,$bd,$94,$94,$94,$89,$41,$89,$89,$47,$91,$43,$91,$89,$7f,$9e,$85,$94,$5c,$85,$41,$4b,$91,$41,$50,$85,$7a,$9e,$89,$94,$89,$6c,$85,$89,$41,$51,$89,$57,$85,$7b,$9e,$9e,$91,$94,$94,$89,$73,$88,$89,$41,$50,$89,$89,$41,$46,$89,$89,$46,$9e,$88,$94,$89,$41,$59,$85,$89,$41,$61,$91,$89,$41,$54,$85,$89,$41,$58,$9e,$89,$94,$58,$89,$41,$48,$9e,$85,$94,$89,$79,$85,$4e,$88,$89,$6c,$9e,$9e,$91,$94,$94,$89,$41,$45,$91,$89,$55,$85,$4b,$85,$5c,$9e,$91,$94,$89,$54,$91,$41,$40,$9e,$88,$94,$89,$41,$4b,$91,$89,$51,$89,$89,$7c,$91,$65,$9e,$9e,$9e,$8e,$89,$41,$80,$62,$5c,$00,$bd,$94,$94,$94,$41,$58,$88,$89,$4a,$89,$89,$60,$85,$40,$9e,$85,$94,$41,$5e,$88,$56,$9e,$90,$94,$89,$41,$5f,$85,$7e,$88,$89,$5d,$9e,$85,$94,$89,$66,$90,$41,$56,$90,$5b,$85,$89,$41,$59,$9e,$9e,$85,$94,$94,$89,$41,$5d,$89,$77,$90,$41,$47,$9e,$85,$94,$4b,$90,$4c,$89,$5a,$9e,$85,$94,$6b,$90,$89,$41,$64,$85,$50,$90,$89,$46,$9e,$88,$94,$6c,$89,$78,$9e,$9e,$9e,$8e,$89,$41,$63,$40,$80,$94,$5d,$00,$bd,$94,$94,$94,$89,$67,$85,$41,$5a,$92,$41,$53,$85,$41,$60,$9e,$89,$94,$89,$52,$85,$61,$9e,$85,$94,$89,$7a,$89,$45,$89,$41,$48,$88,$41,$43,$9e,$9e,$85,$94,$94,$89,$6b,$92,$89,$52,$88,$72,$89,$50,$9e,$92,$94,$50,$88,$89,$41,$55,$89,$89,$55,$9e,$88,$94,$52,$89,$89,$41,$60,$88,$41,$40,$89,$89,$65,$9e,$9e,$89,$94,$94,$68,$89,$89,$4b,$92,$41,$61,$9e,$92,$94,$4b,$89,$41,$55,$9e,$92,$94,$41,$42,$89,$54,$88,$89,$60,$88,$49,$9e,$88,$94,$41,$5a,$92,$60,$9e,$9e,$85,$94,$94,$89,$41,$4d,$89,$45,$9e,$85,$94,$89,$5a,$89,$41,$4b,$89,$41,$64,$89,$89,$71,$9e,$9e,$9e,$8e,$61,$74,$66,$54,$80,$68,$5e,$00,$bd,$94,$94,$94,$89,$4c,$88,$89,$7f,$9e,$88,$94,$89,$41,$46,$91,$41,$5d,$89,$6a,$9e,$88,$94,$89,$47,$89,$89,$53,$85,$5c,$89,$89,$73,$9e,$9e,$85,$94,$94,$50,$88,$89,$41,$63,$91,$41,$61,$91,$6b,$9e,$89,$94,$69,$89,$89,$4d,$89,$89,$61,$91,$41,$55,$9e,$91,$94,$89,$66,$89,$89,$71,$9e,$9e,$89,$94,$94,$89,$7f,$88,$73,$9e,$91,$94,$41,$60,$85,$41,$61,$91,$89,$47,$85,$41,$52,$9e,$9e,$9e,$8e,$89,$4a,$69,$66,$80,$16,$5f,$00,$bd,$94,$7b,$85,$89,$53,$85,$89,$4e,$92,$89,$4d,$9e,$8e,$89,$43,$75,$43,$80,$1d,$60,$00,$bd,$94,$94,$89,$41,$53,$89,$89,$41,$41,$9e,$92,$94,$5f,$85,$41,$48,$89,$6c,$9e,$9e,$8e,$89,$62,$5e,$80,$6f,$61,$00,$bd,$94,$94,$94,$41,$88,$41,$5a,$9e,$91,$94,$5f,$89,$47,$91,$41,$88,$6f,$9e,$88,$94,$89,$7d,$89,$89,$41,$61,$9e,$89,$94,$89,$41,$53,$85,$41,$50,$9e,$9e,$91,$94,$94,$54,$85,$5c,$85,$47,$89,$89,$60,$9e,$85,$94,$60,$91,$89,$78,$9e,$91,$94,$58,$91,$89,$5b,$88,$89,$41,$48,$88,$63,$9e,$9e,$85,$94,$94,$41,$44,$88,$41,$42,$9e,$91,$94,$89,$79,$89,$89,$5a,$88,$4c,$9e,$89,$94,$42,$91,$5c,$88,$89,$4f,$88,$67,$9e,$9e,$9e,$8e,$41,$6d,$7f,$80,$48,$62,$00,$bd,$94,$94,$94,$41,$59,$89,$53,$9e,$88,$94,$89,$6d,$88,$89,$55,$85,$5a,$9e,$91,$94,$89,$41,$51,$88,$56,$9e,$9e,$88,$94,$94,$89,$5c,$88,$89,$60,$85,$89,$67,$91,$89,$6c,$9e,$91,$94,$72,$89,$7f,$9e,$88,$94,$41,$4c,$88,$89,$41,$49,$91,$73,$89,$89,$7b,$9e,$9e,$9e,$8e,$89,$53,$80,$36,$63,$00,$bd,$94,$94,$94,$89,$41,$56,$85,$89,$6b,$92,$89,$45,$89,$42,$9e,$92,$94,$65,$88,$89,$6f,$85,$89,$7f,$9e,$9e,$85,$94,$94,$71,$89,$89,$41,$43,$9e,$85,$94,$89,$6e,$89,$49,$9e,$9e,$9e,$8e,$63,$79,$5f,$44,$80,$1e,$64,$00,$bd,$94,$94,$89,$5a,$89,$66,$89,$76,$85,$41,$5b,$9e,$85,$94,$67,$90,$89,$56,$9e,$9e,$8e,$89,$69,$54,$64,$80,$32,$65,$00,$bd,$94,$94,$89,$41,$51,$91,$41,$40,$9e,$89,$94,$41,$4f,$89,$89,$50,$88,$89,$6a,$9e,$91,$94,$89,$41,$52,$88,$41,$85,$66,$9e,$91,$94,$60,$88,$40,$88,$61,$85,$89,$73,$9e,$9e,$8e,$89,$41,$80,$2d,$66,$00,$bd,$94,$94,$89,$58,$85,$89,$41,$52,$91,$89,$7a,$91,$55,$9e,$91,$94,$57,$89,$89,$6a,$85,$4d,$89,$4f,$9e,$85,$94,$79,$89,$89,$7f,$89,$89,$41,$5a,$9e,$9e,$8e,$89,$49,$80,$2b,$67,$00,$bd,$94,$94,$89,$56,$85,$41,$44,$85,$64,$85,$89,$4e,$9e,$89,$94,$47,$85,$89,$5c,$9e,$89,$94,$89,$62,$92,$4b,$89,$89,$73,$85,$53,$9e,$9e,$8e,$42,$78,$57,$7a,$80,$49,$68,$00,$bd,$94,$94,$94,$7b,$88,$89,$4b,$92,$89,$41,$88,$64,$9e,$85,$94,$89,$75,$85,$89,$50,$9e,$9e,$92,$94,$94,$54,$88,$6e,$88,$89,$44,$92,$52,$9e,$89,$94,$89,$41,$61,$88,$4c,$89,$89,$73,$9e,$88,$94,$89,$62,$89,$41,$45,$9e,$89,$94,$77,$89,$41,$47,$85,$67,$9e,$9e,$9e,$8e,$43,$51,$71,$80,$8c,$69,$00,$bd,$94,$94,$94,$89,$7b,$85,$89,$41,$4d,$88,$89,$56,$92,$89,$43,$9e,$88,$94,$89,$4a,$89,$89,$41,$41,$92,$89,$6b,$88,$41,$47,$9e,$88,$94,$41,$89,$89,$78,$9e,$89,$94,$67,$88,$41,$4f,$85,$41,$4c,$9e,$9e,$89,$94,$94,$89,$46,$85,$59,$85,$89,$66,$88,$41,$49,$9e,$89,$94,$41,$49,$92,$67,$89,$5f,$85,$89,$7e,$9e,$9e,$89,$94,$94,$89,$63,$92,$89,$47,$9e,$88,$94,$73,$85,$64,$92,$41,$64,$9e,$9e,$92,$94,$94,$5c,$92,$41,$43,$88,$48,$9e,$92,$94,$61,$88,$6a,$92,$41,$56,$89,$89,$4f,$9e,$88,$94,$89,$6d,$88,$7c,$85,$5e,$88,$40,$9e,$9e,$9e,$8e,$89,$43,$66,$66,$80,$17,$6a,$00,$bd,$94,$77,$89,$89,$67,$88,$41,$5e,$85,$89,$41,$4d,$9e,$8e,$89,$41,$6f,$68,$80,$21,$6b,$00,$bd,$94,$94,$89,$4e,$90,$41,$58,$88,$89,$6d,$90,$45,$9e,$89,$94,$89,$77,$85,$89,$41,$64,$9e,$9e,$8e,$89,$41,$55,$7c,$80,$3b,$6c,$00,$bd,$94,$94,$41,$4c,$85,$7f,$85,$89,$74,$9e,$85,$94,$51,$89,$89,$41,$55,$9e,$85,$94,$43,$89,$89,$41,$64,$91,$41,$50,$9e,$85,$94,$41,$5e,$85,$89,$41,$53,$91,$89,$53,$85,$89,$75,$9e,$9e,$8e,$44,$7b,$7e,$56,$46,$4d,$76,$60,$80,$27,$6d,$00,$bd,$94,$94,$89,$5f,$90,$6e,$88,$89,$41,$51,$89,$78,$9e,$89,$94,$89,$4e,$90,$89,$41,$9e,$88,$94,$56,$89,$89,$79,$85,$59,$9e,$9e,$8e,$55,$56,$80,$24,$6e,$00,$bd,$94,$94,$5a,$85,$41,$5e,$90,$89,$41,$4c,$9e,$89,$94,$89,$56,$89,$41,$43,$9e,$88,$94,$89,$60,$88,$41,$61,$9e,$9e,$8e,$68,$5e,$80,$1f,$6f,$00,$bd,$94,$94,$41,$42,$92,$77,$85,$41,$61,$9e,$92,$94,$41,$4c,$92,$89,$50,$89,$89,$66,$9e,$9e,$8e,$41,$53,$4f,$80,$26,$70,$00,$bd,$94,$94,$41,$5b,$88,$89,$79,$9e,$89,$94,$89,$6d,$89,$89,$42,$89,$89,$7c,$85,$5d,$9e,$85,$94,$75,$85,$41,$9e,$9e,$8e,$89,$55,$7c,$73,$80,$10,$71,$00,$bd,$94,$41,$51,$85,$89,$55,$9e,$8e,$89,$5a,$65,$80,$8a,$72,$00,$bd,$94,$94,$94,$89,$65,$85,$89,$67,$9e,$85,$94,$89,$78,$89,$89,$6c,$9e,$89,$94,$89,$6f,$88,$89,$66,$90,$43,$9e,$9e,$89,$94,$94,$41,$57,$88,$41,$88,$41,$50,$88,$89,$41,$4b,$9e,$88,$94,$89,$58,$90,$41,$53,$9e,$90,$94,$40,$85,$89,$46,$90,$89,$41,$4a,$85,$41,$58,$9e,$9e,$88,$94,$94,$89,$41,$60,$85,$89,$51,$9e,$88,$94,$50,$85,$45,$85,$89,$41,$53,$9e,$90,$94,$69,$88,$89,$48,$88,$69,$88,$41,$9e,$9e,$88,$94,$94,$89,$5c,$88,$89,$76,$89,$89,$41,$46,$85,$89,$4a,$9e,$89,$94,$89,$76,$85,$7d,$85,$89,$4d,$90,$53,$9e,$9e,$9e,$8e,$89,$44,$59,$77,$80,$1e,$73,$00,$bd,$94,$94,$4a,$90,$5c,$90,$6a,$88,$69,$9e,$88,$94,$89,$69,$85,$41,$46,$88,$57,$9e,$9e,$8e,$89,$6c,$5f,$80,$44,$74,$00,$bd,$94,$94,$94,$41,$4e,$91,$89,$65,$9e,$88,$94,$67,$88,$89,$7d,$9e,$9e,$91,$94,$94,$47,$85,$89,$5c,$9e,$91,$94,$89,$53,$89,$89,$69,$9e,$9e,$91,$94,$94,$65,$91,$89,$45,$85,$89,$7f,$88,$49,$9e,$88,$94,$46,$91,$89,$41,$56,$89,$89,$7b,$9e,$9e,$9e,$8e,$89,$41,$80,$be,$75,$00,$bd,$94,$94,$94,$54,$91,$89,$41,$52,$85,$89,$5d,$88,$41,$5f,$9e,$89,$94,$5c,$85,$41,$49,$88,$89,$47,$89,$89,$7b,$9e,$85,$94,$89,$67,$88,$41,$5f,$89,$89,$41,$61,$9e,$91,$94,$89,$41,$5c,$91,$41,$60,$89,$89,$41,$43,$9e,$9e,$88,$94,$94,$89,$41,$51,$91,$89,$41,$46,$89,$4a,$88,$89,$4a,$9e,$88,$94,$41,$42,$91,$89,$41,$54,$88,$89,$4c,$89,$89,$74,$9e,$88,$94,$89,$41,$51,$88,$89,$63,$85,$41,$5e,$9e,$85,$94,$41,$49,$88,$4e,$89,$41,$42,$91,$49,$9e,$9e,$89,$94,$94,$89,$45,$88,$57,$9e,$89,$94,$53,$85,$89,$51,$88,$89,$44,$9e,$85,$94,$51,$85,$89,$41,$4c,$89,$89,$64,$85,$89,$43,$9e,$91,$94,$41,$4f,$85,$89,$4a,$89,$89,$78,$88,$41,$9e,$9e,$91,$94,$94,$89,$57,$89,$52,$89,$89,$41,$50,$91,$89,$70,$9e,$89,$94,$63,$85,$89,$4c,$9e,$9e,$9e,$8e,$89,$57,$78,$45,$80,$11,$76,$00,$bd,$94,$41,$43,$89,$6c,$85,$74,$90,$6f,$9e,$8e,$43,$80,$30,$77,$00,$bd,$94,$94,$41,$57,$88,$89,$41,$5b,$88,$89,$68,$9e,$85,$94,$72,$85,$89,$4b,$9e,$92,$94,$41,$64,$92,$89,$4f,$9e,$92,$94,$4b,$89,$4f,$85,$7f,$88,$41,$47,$9e,$9e,$8e,$45,$76,$7c,$80,$1f,$78,$00,$bd,$94,$94,$4d,$92,$89,$48,$9e,$92,$94,$4b,$89,$89,$41,$5e,$89,$89,$47,$85,$89,$41,$44,$9e,$9e,$8e,$45,$78,$80,$12,$79,$00,$bd,$94,$89,$51,$85,$65,$88,$41,$4e,$9e,$8e,$89,$48,$67,$80,$2d,$7a,$00,$bd,$94,$94,$48,$88,$71,$88,$89,$41,$4f,$85,$89,$65,$9e,$89,$94,$89,$41,$4b,$85,$41,$50,$85,$89,$64,$90,$40,$9e,$89,$94,$41,$56,$90,$89,$41,$41,$9e,$9e,$8e,$6e,$4e,$80,$6d,$7b,$00,$bd,$94,$94,$94,$44,$85,$61,$9e,$89,$94,$70,$90,$89,$5d,$9e,$88,$94,$89,$43,$85,$89,$4c,$90,$46,$9e,$85,$94,$5d,$89,$64,$9e,$9e,$90,$94,$94,$89,$7a,$88,$41,$45,$90,$57,$89,$89,$43,$9e,$89,$94,$66,$89,$89,$48,$89,$63,$9e,$90,$94,$89,$41,$42,$85,$41,$61,$9e,$88,$94,$46,$90,$89,$54,$85,$89,$64,$90,$89,$41,$45,$9e,$9e,$89,$94,$94,$7a,$88,$89,$41,$5a,$90,$41,$4d,$9e,$89,$94,$89,$41,$58,$85,$41,$4a,$9e,$9e,$9e,$8e,$41,$48,$80,$78,$7c,$00,$bd,$94,$94,$94,$89,$4d,$91,$89,$76,$85,$89,$41,$62,$9e,$91,$94,$41,$43,$88,$50,$9e,$9e,$88,$94,$94,$71,$89,$89,$49,$85,$89,$41,$53,$85,$72,$9e,$89,$94,$41,$4a,$91,$7a,$85,$89,$4f,$88,$89,$41,$40,$9e,$91,$94,$41,$42,$85,$89,$4b,$9e,$88,$94,$89,$41,$54,$89,$89,$41,$41,$85,$89,$6a,$88,$89,$41,$48,$9e,$9e,$89,$94,$94,$5b,$88,$89,$41,$54,$89,$89,$41,$52,$91,$41,$5d,$9e,$89,$94,$75,$89,$41,$5e,$85,$63,$9e,$85,$94,$89,$41,$45,$85,$5d,$9e,$9e,$9e,$8e,$58,$6c,$5d,$4c,$80,$4e,$7d,$00,$bd,$94,$94,$94,$89,$49,$85,$45,$91,$89,$41,$56,$89,$66,$9e,$91,$94,$5d,$85,$59,$9e,$85,$94,$5b,$88,$89,$6d,$89,$41,$47,$9e,$88,$94,$54,$88,$89,$4a,$88,$44,$91,$5e,$9e,$9e,$88,$94,$94,$89,$7f,$88,$89,$41,$46,$91,$89,$41,$47,$9e,$89,$94,$41,$5d,$88,$89,$6f,$85,$89,$6e,$9e,$9e,$9e,$8e,$89,$63,$7d,$80,$0e,$7e,$00,$bd,$94,$41,$52,$89,$4c,$9e,$8e,$41,$46,$80,$0e,$7f,$00,$bd,$94,$66,$88,$41,$40,$9e,$8e,$41,$66,$80,$11,$80,$00,$bd,$94,$41,$64,$90,$41,$5c,$88,$56,$9e,$8e,$41,$60,$80,$29,$81,$00,$bd,$94,$94,$5c,$89,$41,$49,$90,$89,$4d,$9e,$90,$94,$78,$88,$89,$51,$9e,$88,$94,$89,$6e,$89,$89,$68,$9e,$88,$94,$56,$89,$41,$43,$9e,$9e,$8e,$89,$70,$80,$54,$82,$00,$bd,$94,$94,$94,$41,$40,$85,$4f,$9e,$85,$94,$41,$4f,$88,$89,$41,$55,$89,$41,$5f,$9e,$92,$94,$89,$41,$45,$92,$89,$41,$40,$85,$89,$41,$50,$9e,$85,$94,$5c,$88,$41,$49,$89,$89,$7f,$9e,$9e,$88,$94,$94,$89,$49,$89,$5c,$92,$89,$41,$58,$92,$4b,$9e,$88,$94,$41,$62,$92,$41,$54,$85,$69,$88,$89,$55,$9e,$9e,$9e,$8e,$43,$59,$51,$41,$80,$0c,$83,$00,$bd,$94,$5d,$90,$7c,$9e,$8e,$5c,$80,$0f,$84,$00,$bd,$94,$75,$85,$89,$46,$9e,$8e,$89,$44,$7e,$80,$6e,$85,$00,$bd,$94,$94,$94,$89,$41,$42,$85,$89,$41,$4d,$85,$89,$4d,$9e,$92,$94,$89,$50,$89,$89,$4f,$89,$4f,$92,$41,$5f,$9e,$92,$94,$41,$62,$92,$89,$41,$53,$92,$89,$74,$85,$6b,$9e,$88,$94,$77,$88,$41,$5a,$9e,$9e,$85,$94,$94,$78,$85,$41,$40,$9e,$85,$94,$89,$41,$5d,$88,$89,$41,$5e,$89,$41,$4f,$92,$7c,$9e,$85,$94,$41,$45,$92,$89,$5f,$88,$41,$48,$9e,$88,$94,$5c,$89,$89,$41,$41,$85,$42,$9e,$9e,$9e,$8e,$89,$41,$77,$60,$74,$74,$42,$72,$5a,$80,$29,$86,$00,$bd,$94,$94,$89,$51,$92,$41,$5d,$9e,$89,$94,$45,$88,$41,$49,$92,$4e,$92,$89,$41,$63,$9e,$85,$94,$63,$85,$41,$43,$89,$89,$77,$9e,$9e,$8e,$54,$5f,$52,$80,$8e,$87,$00,$bd,$94,$94,$94,$89,$41,$42,$85,$89,$69,$85,$89,$74,$9e,$85,$94,$89,$41,$47,$85,$89,$79,$85,$89,$6f,$88,$89,$54,$9e,$85,$94,$41,$57,$88,$89,$42,$89,$89,$46,$9e,$85,$94,$89,$51,$85,$52,$9e,$9e,$91,$94,$94,$56,$89,$45,$9e,$91,$94,$41,$91,$89,$56,$88,$56,$9e,$91,$94,$4e,$88,$4f,$89,$89,$71,$85,$89,$41,$44,$9e,$91,$94,$4d,$88,$55,$9e,$9e,$85,$94,$94,$89,$41,$88,$57,$9e,$85,$94,$89,$61,$85,$89,$41,$61,$9e,$85,$94,$47,$89,$52,$85,$89,$41,$60,$85,$56,$9e,$89,$94,$41,$56,$91,$89,$41,$52,$85,$51,$85,$75,$9e,$9e,$9e,$8e,$89,$41,$5e,$40,$54,$40,$50,$62,$64,$80,$0f,$88,$00,$bd,$94,$4b,$85,$89,$61,$9e,$8e,$89,$45,$6b,$80,$89,$89,$00,$bd,$94,$94,$94,$41,$44,$89,$89,$47,$9e,$85,$94,$89,$7d,$85,$89,$5d,$9e,$88,$94,$75,$88,$4a,$85,$6a,$9e,$90,$94,$89,$41,$55,$89,$89,$60,$89,$51,$85,$89,$5b,$9e,$9e,$89,$94,$94,$7d,$85,$89,$6a,$85,$89,$7c,$9e,$85,$94,$53,$90,$6c,$9e,$90,$94,$89,$66,$89,$41,$53,$85,$53,$85,$89,$41,$5d,$9e,$89,$94,$89,$41,$45,$85,$41,$45,$88,$4a,$90,$41,$42,$9e,$9e,$90,$94,$94,$55,$88,$89,$7e,$89,$41,$5f,$9e,$89,$94,$89,$67,$89,$41,$5b,$9e,$85,$94,$42,$89,$5e,$85,$89,$4b,$90,$6f,$9e,$88,$94,$89,$41,$59,$88,$89,$41,$60,$85,$7f,$9e,$9e,$9e,$8e,$54,$80,$11,$8a,$00,$bd,$94,$89,$41,$46,$88,$79,$92,$89,$47,$9e,$8e,$4a,$80,$36,$8b,$00,$bd,$94,$94,$70,$92,$41,$48,$9e,$88,$94,$89,$5c,$85,$89,$73,$88,$89,$41,$47,$9e,$89,$94,$5e,$92,$89,$54,$88,$89,$65,$92,$89,$72,$9e,$85,$94,$89,$4c,$88,$89,$41,$52,$85,$89,$42,$9e,$9e,$8e,$89,$5f,$63,$80,$9f,$8c,$00,$bd,$94,$94,$94,$89,$7a,$89,$89,$44,$88,$59,$9e,$85,$94,$89,$69,$88,$89,$41,$45,$88,$89,$56,$85,$89,$57,$9e,$9e,$92,$94,$94,$75,$92,$89,$5b,$85,$41,$41,$85,$89,$57,$9e,$92,$94,$89,$74,$89,$89,$5d,$88,$7d,$85,$89,$4a,$9e,$88,$94,$89,$58,$85,$89,$48,$9e,$9e,$89,$94,$94,$77,$85,$89,$7d,$92,$89,$52,$88,$4a,$9e,$89,$94,$7e,$85,$89,$41,$4f,$85,$73,$9e,$89,$94,$64,$89,$41,$4e,$92,$47,$9e,$89,$94,$89,$78,$88,$89,$50,$88,$63,$85,$72,$9e,$9e,$89,$94,$94,$89,$41,$58,$89,$7b,$85,$4d,$9e,$89,$94,$41,$58,$88,$48,$89,$89,$61,$9e,$92,$94,$46,$88,$41,$56,$85,$4c,$9e,$85,$94,$4d,$89,$41,$50,$88,$41,$61,$9e,$9e,$9e,$8e,$7d,$53,$6b,$80,$26,$8d,$00,$bd,$94,$94,$6a,$89,$89,$43,$89,$89,$41,$5a,$9e,$89,$94,$89,$41,$48,$85,$41,$9e,$85,$94,$89,$41,$49,$92,$40,$9e,$9e,$8e,$89,$41,$50,$41,$80,$16,$8e,$00,$bd,$94,$41,$52,$85,$7d,$85,$89,$52,$88,$41,$47,$9e,$8e,$89,$55,$7d,$6d,$80,$46,$8f,$00,$bd,$94,$94,$94,$43,$92,$63,$89,$40,$88,$89,$64,$9e,$92,$94,$89,$4d,$88,$89,$60,$9e,$9e,$89,$94,$94,$5f,$89,$89,$62,$9e,$85,$94,$89,$52,$92,$89,$41,$64,$92,$89,$41,$43,$92,$6d,$9e,$85,$94,$89,$41,$40,$85,$89,$7d,$85,$89,$51,$9e,$9e,$9e,$8e,$89,$47,$6d,$6c,$45,$51,$80,$87,$90,$00,$bd,$94,$94,$94,$89,$5b,$89,$89,$41,$43,$9e,$85,$94,$89,$61,$91,$41,$4c,$91,$89,$5f,$88,$7f,$9e,$9e,$89,$94,$94,$67,$91,$89,$5a,$9e,$89,$94,$41,$52,$88,$75,$89,$89,$5e,$85,$41,$5d,$9e,$85,$94,$89,$68,$85,$89,$41,$43,$88,$89,$56,$9e,$91,$94,$89,$41,$45,$85,$89,$55,$88,$46,$9e,$9e,$88,$94,$94,$41,$60,$91,$68,$85,$89,$41,$46,$85,$50,$9e,$88,$94,$89,$57,$89,$5b,$88,$6c,$89,$89,$41,$4a,$9e,$9e,$89,$94,$94,$89,$4d,$91,$78,$89,$70,$9e,$91,$94,$89,$41,$62,$89,$89,$41,$4a,$91,$89,$41,$41,$88,$40,$9e,$9e,$9e,$8e,$5d,$5f,$47,$4e,$80,$10,$91,$00,$bd,$94,$41,$42,$92,$70,$89,$89,$78,$9e,$8e,$6a,$80,$2d,$92,$00,$bd,$94,$94,$89,$41,$42,$92,$89,$41,$40,$89,$41,$5f,$9e,$85,$94,$89,$41,$59,$89,$89,$41,$4d,$85,$41,$4f,$9e,$89,$94,$66,$85,$7c,$89,$51,$9e,$9e,$8e,$45,$45,$71,$7f,$80,$19,$93,$00,$bd,$94,$94,$56,$88,$89,$57,$89,$89,$6f,$9e,$89,$94,$42,$89,$89,$56,$9e,$9e,$8e,$56,$80,$0f,$94,$00,$bd,$94,$89,$42,$90,$89,$6e,$9e,$8e,$89,$6e,$80,$87,$95,$00,$bd,$94,$94,$94,$89,$4f,$85,$7e,$9e,$90,$94,$89,$52,$89,$41,$47,$9e,$88,$94,$89,$4e,$85,$89,$4e,$85,$89,$7b,$9e,$88,$94,$89,$41,$59,$85,$5c,$89,$5b,$85,$89,$54,$9e,$9e,$89,$94,$94,$7c,$89,$6f,$85,$4f,$9e,$90,$94,$41,$4e,$85,$5a,$88,$89,$41,$55,$89,$89,$78,$9e,$89,$94,$5f,$90,$89,$5d,$89,$89,$77,$9e,$85,$94,$89,$68,$89,$41,$55,$9e,$9e,$88,$94,$94,$64,$85,$41,$5c,$85,$89,$41,$55,$85,$41,$57,$9e,$85,$94,$5b,$88,$41,$63,$88,$41,$63,$85,$41,$62,$9e,$90,$94,$89,$77,$85,$59,$85,$64,$90,$41,$55,$9e,$9e,$9e,$8e,$89,$44,$6e,$67,$80,$1b,$96,$00,$bd,$94,$94,$89,$7c,$92,$41,$52,$9e,$88,$94,$60,$92,$89,$55,$92,$89,$41,$60,$9e,$9e,$8e,$41,$80,$2f,$97,$00,$bd,$94,$94,$41,$49,$88,$41,$5a,$88,$89,$5c,$89,$41,$5f,$9e,$89,$94,$60,$88,$89,$6d,$85,$41,$4d,$9e,$88,$94,$89,$41,$59,$91,$89,$41,$51,$88,$89,$41,$47,$9e,$9e,$8e,$76,$40,$80,$92,$98,$00,$bd,$94,$94,$94,$41,$48,$89,$49,$90,$41,$56,$9e,$90,$94,$89,$41,$63,$85,$41,$4f,$89,$41,$4f,$88,$57,$9e,$90,$94,$89,$5b,$89,$89,$41,$54,$9e,$9e,$89,$94,$94,$47,$90,$41,$5c,$90,$89,$76,$85,$41,$5d,$9e,$90,$94,$89,$41,$58,$89,$89,$6c,$89,$89,$46,$89,$6e,$9e,$9e,$89,$94,$94,$89,$6f,$88,$89,$49,$89,$56,$90,$41,$63,$9e,$89,$94,$61,$88,$41,$47,$89,$89,$41,$4c,$90,$51,$9e,$9e,$89,$94,$94,$89,$41,$52,$85,$89,$52,$9e,$89,$94,$89,$57,$85,$79,$88,$6f,$89,$4e,$9e,$88,$94,$69,$90,$89,$43,$9e,$88,$94,$41,$5a,$88,$89,$41,$43,$85,$4a,$89,$89,$41,$4b,$9e,$9e,$9e,$8e,$89,$63,$74,$80,$16,$99,$00,$bd,$94,$89,$48,$85,$89,$41,$46,$88,$89,$70,$90,$89,$79,$9e,$8e,$48,$40,$80,$15,$9a,$00,$bd,$94,$66,$89,$89,$41,$89,$89,$41,$53,$88,$89,$46,$9e,$8e,$41,$74,$80,$3a,$9b,$00,$bd,$94,$94,$94,$89,$78,$89,$6f,$9e,$89,$94,$69,$88,$89,$60,$9e,$9e,$88,$94,$94,$58,$89,$89,$41,$49,$88,$89,$41,$5c,$89,$41,$41,$9e,$89,$94,$78,$88,$89,$41,$49,$9e,$88,$94,$6c,$88,$89,$7c,$9e,$9e,$9e,$8e,$89,$42,$6b,$80,$26,$9c,$00,$bd,$94,$94,$54,$89,$41,$57,$88,$89,$41,$46,$91,$89,$41,$4d,$9e,$88,$94,$89,$41,$4a,$88,$89,$50,$91,$89,$41,$49,$9e,$9e,$8e,$89,$41,$52,$80,$15,$9d,$00,$bd,$94,$61,$89,$89,$41,$4a,$89,$89,$41,$43,$91,$48,$9e,$8e,$42,$6e,$80,$20,$9e,$00,$bd,$94,$94,$5a,$88,$71,$89,$75,$91,$89,$41,$43,$9e,$85,$94,$65,$85,$41,$5e,$88,$6a,$9e,$9e,$8e,$89,$77,$77,$40,$80,$62,$9f,$00,$bd,$94,$94,$94,$89,$41,$50,$91,$89,$41,$61,$88,$89,$55,$85,$64,$9e,$88,$94,$89,$63,$89,$42,$89,$41,$44,$89,$89,$48,$9e,$88,$94,$89,$41,$47,$85,$7d,$91,$65,$9e,$85,$94,$89,$72,$91,$53,$89,$89,$6a,$9e,$9e,$91,$94,$94,$41,$58,$91,$89,$41,$45,$89,$89,$78,$9e,$85,$94,$41,$56,$85,$51,$88,$89,$71,$89,$89,$76,$9e,$91,$94,$89,$58,$85,$71,$91,$54,$88,$89,$56,$9e,$9e,$9e,$8e,$89,$41,$80,$2e,$a0,$00,$bd,$94,$94,$89,$6e,$85,$41,$56,$9e,$88,$94,$41,$47,$88,$41,$54,$92,$89,$41,$4b,$85,$89,$60,$9e,$88,$94,$59,$88,$89,$60,$88,$89,$5c,$92,$41,$5e,$9e,$9e,$8e,$89,$57,$76,$80,$25,$a1,$00,$bd,$94,$94,$89,$41,$60,$89,$89,$41,$5c,$88,$89,$41,$49,$9e,$85,$94,$89,$69,$85,$89,$5b,$91,$89,$6e,$91,$41,$4d,$9e,$9e,$8e,$67,$6d,$80,$10,$a2,$00,$bd,$94,$41,$5f,$89,$65,$88,$79,$9e,$8e,$41,$73,$80,$22,$a3,$00,$bd,$94,$94,$41,$61,$89,$89,$56,$9e,$92,$94,$45,$89,$66,$92,$55,$9e,$92,$94,$89,$72,$92,$89,$6a,$9e,$9e,$8e,$89,$41,$5b,$80,$6e,$a4,$00,$bd,$94,$94,$94,$46,$89,$89,$41,$5e,$9e,$85,$94,$6d,$89,$44,$89,$89,$41,$58,$91,$66,$9e,$9e,$91,$94,$94,$89,$62,$88,$66,$91,$89,$72,$89,$89,$41,$43,$9e,$85,$94,$63,$89,$41,$58,$88,$41,$42,$88,$41,$63,$9e,$9e,$91,$94,$94,$7d,$85,$41,$61,$89,$89,$69,$9e,$89,$94,$65,$88,$71,$91,$50,$9e,$85,$94,$41,$47,$88,$89,$41,$46,$85,$89,$41,$49,$91,$41,$41,$9e,$85,$94,$89,$44,$85,$41,$49,$85,$7f,$9e,$9e,$9e,$8e,$47,$6e,$65,$7f,$7e,$7e,$80,$15,$a5,$00,$bd,$94,$89,$41,$4d,$91,$89,$41,$58,$89,$89,$4d,$9e,$8e,$89,$41,$49,$80,$10,$a6,$00,$bd,$94,$7d,$85,$44,$91,$41,$4e,$9e,$8e,$43,$7e,$80,$2f,$a7,$00,$bd,$94,$94,$58,$88,$6e,$88,$89,$41,$45,$9e,$89,$94,$89,$48,$89,$41,$54,$85,$89,$4d,$88,$89,$4f,$9e,$85,$94,$71,$90,$89,$44,$90,$7d,$89,$41,$60,$9e,$9e,$8e,$89,$44,$4b,$4f,$80,$11,$a8,$00,$bd,$94,$7b,$88,$89,$4b,$85,$71,$9e,$8e,$89,$47,$60,$80,$12,$a9,$00,$bd,$94,$89,$41,$4d,$92,$5b,$88,$52,$9e,$8e,$89,$41,$62,$80,$2d,$aa,$00,$bd,$94,$94,$89,$41,$5b,$88,$89,$4b,$89,$89,$55,$88,$89,$4c,$9e,$89,$94,$45,$89,$89,$61,$89,$89,$44,$85,$41,$61,$9e,$89,$94,$41,$4b,$88,$74,$9e,$9e,$8e,$89,$4a,$46,$80,$10,$ab,$00,$bd,$94,$89,$69,$89,$41,$64,$9e,$8e,$89,$42,$4d,$80,$2a,$ac,$00,$bd,$94,$94,$89,$52,$89,$41,$54,$91,$89,$43,$9e,$85,$94,$41,$50,$85,$41,$62,$85,$89,$5f,$9e,$91,$94,$41,$4d,$88,$59,$89,$89,$47,$9e,$9e,$8e,$7b,$55,$6d,$80,$73,$ad,$00,$bd,$94,$94,$94,$4c,$91,$89,$7d,$9e,$91,$94,$41,$4d,$91,$5e,$9e,$91,$94,$42,$89,$41,$5e,$91,$41,$61,$9e,$88,$94,$89,$41,$88,$89,$5f,$88,$89,$4c,$9e,$9e,$85,$94,$94,$41,$4c,$89,$7b,$88,$73,$9e,$91,$94,$89,$41,$89,$41,$88,$89,$69,$9e,$89,$94,$89,$65,$85,$89,$4f,$9e,$89,$94,$89,$5a,$91,$89,$6d,$9e,$9e,$91,$94,$94,$89,$41,$59,$88,$89,$58,$9e,$85,$94,$89,$67,$91,$41,$5d,$85,$89,$71,$9e,$91,$94,$89,$5c,$89,$67,$88,$41,$49,$9e,$9e,$9e,$8e,$48,$7f,$80,$76,$ae,$00,$bd,$94,$94,$94,$66,$89,$41,$58,$89,$89,$41,$42,$85,$41,$5c,$9e,$89,$94,$89,$53,$85,$89,$4c,$88,$89,$41,$5f,$90,$89,$41,$4a,$9e,$9e,$85,$94,$94,$41,$5b,$88,$89,$43,$90,$51,$9e,$88,$94,$78,$85,$89,$5b,$9e,$90,$94,$89,$4e,$90,$43,$89,$89,$72,$9e,$9e,$90,$94,$94,$89,$50,$85,$89,$70,$85,$89,$5a,$9e,$88,$94,$41,$60,$88,$41,$56,$88,$41,$5f,$88,$89,$43,$9e,$90,$94,$89,$7f,$88,$89,$64,$90,$41,$55,$9e,$90,$94,$89,$5e,$88,$46,$90,$41,$88,$7a,$9e,$9e,$9e,$8e,$40,$80,$5e,$af,$00,$bd,$94,$94,$94,$89,$41,$4a,$88,$89,$55,$88,$7c,$9e,$85,$94,$63,$88,$41,$5b,$85,$89,$41,$5d,$89,$41,$5c,$9e,$85,$94,$6d,$90,$4c,$88,$7e,$9e,$90,$94,$41,$58,$89,$61,$85,$59,$85,$6f,$9e,$9e,$90,$94,$94,$5a,$85,$41,$41,$85,$89,$7f,$9e,$90,$94,$5d,$85,$41,$53,$9e,$90,$94,$6a,$88,$41,$49,$9e,$90,$94,$89,$49,$89,$89,$41,$41,$85,$45,$89,$89,$6b,$9e,$9e,$9e,$8e,$40,$80,$12,$b0,$00,$bd,$94,$69,$85,$7c,$85,$89,$6a,$9e,$8e,$89,$59,$4e,$58,$80,$23,$b1,$00,$bd,$94,$94,$89,$41,$40,$92,$89,$46,$89,$41,$59,$9e,$88,$94,$73,$92,$89,$41,$43,$88,$89,$6a,$89,$89,$7d,$9e,$9e,$8e,$41,$44,$80,$2f,$b2,$00,$bd,$94,$94,$7d,$88,$59,$85,$41,$5b,$91,$41,$4e,$9e,$91,$94,$41,$55,$91,$89,$70,$89,$89,$45,$85,$89,$41,$4a,$9e,$85,$94,$89,$41,$5b,$91,$62,$91,$41,$54,$9e,$9e,$8e,$7f,$6f,$80,$90,$b3,$00,$bd,$94,$94,$94,$89,$5e,$91,$89,$41,$59,$9e,$85,$94,$77,$89,$69,$9e,$89,$94,$55,$88,$89,$74,$9e,$9e,$91,$94,$94,$89,$78,$91,$41,$58,$89,$70,$9e,$85,$94,$89,$4e,$91,$89,$4b,$89,$89,$41,$54,$89,$89,$41,$4e,$9e,$85,$94,$5f,$85,$43,$9e,$9e,$88,$94,$94,$41,$5f,$89,$89,$77,$88,$78,$85,$41,$56,$9e,$91,$94,$89,$41,$44,$85,$58,$89,$89,$6c,$89,$41,$45,$9e,$9e,$88,$94,$94,$89,$79,$91,$89,$64,$89,$5b,$9e,$88,$94,$64,$91,$89,$48,$91,$89,$54,$89,$89,$74,$9e,$91,$94,$89,$41,$55,$85,$69,$85,$89,$41,$64,$9e,$88,$94,$89,$4d,$89,$89,$65,$91,$59,$9e,$9e,$9e,$8e,$89,$44,$71,$80,$14,$b4,$00,$bd,$94,$89,$57,$89,$89,$73,$90,$89,$50,$89,$89,$67,$9e,$8e,$54,$80,$13,$b5,$00,$bd,$94,$66,$89,$89,$51,$92,$89,$71,$88,$41,$43,$9e,$8e,$65,$80,$1f,$b6,$00,$bd,$94,$94,$89,$73,$89,$5b,$90,$7a,$88,$89,$69,$9e,$88,$94,$5d,$90,$89,$41,$57,$85,$89,$68,$9e,$9e,$8e,$68,$80,$87,$b7,$00,$bd,$94,$94,$94,$41,$45,$89,$6f,$88,$41,$4b,$85,$57,$9e,$91,$94,$89,$4f,$89,$89,$51,$88,$89,$5e,$9e,$89,$94,$42,$89,$41,$54,$89,$89,$41,$60,$9e,$9e,$85,$94,$94,$41,$46,$88,$41,$4c,$91,$89,$73,$9e,$85,$94,$54,$88,$41,$50,$9e,$91,$94,$7e,$88,$4e,$88,$89,$41,$4e,$9e,$9e,$89,$94,$94,$89,$41,$4d,$89,$89,$52,$9e,$89,$94,$58,$85,$89,$41,$46,$91,$89,$5a,$9e,$9e,$91,$94,$94,$89,$65,$85,$41,$48,$9e,$88,$94,$70,$85,$89,$42,$89,$89,$41,$4e,$9e,$89,$94,$5e,$89,$89,$7d,$89,$64,$9e,$89,$94,$89,$67,$91,$4b,$9e,$9e,$9e,$8e,$89,$68,$49,$80,$9b,$b8,$00,$bd,$94,$94,$94,$59,$89,$41,$51,$90,$78,$9e,$89,$94,$89,$41,$46,$89,$41,$59,$9e,$89,$94,$49,$88,$89,$41,$64,$9e,$90,$94,$41,$50,$89,$89,$41,$44,$88,$49,$85,$89,$70,$9e,$9e,$90,$94,$94,$89,$47,$88,$89,$41,$56,$9e,$88,$94,$89,$58,$88,$77,$9e,$85,$94,$73,$90,$89,$41,$41,$88,$89,$5e,$9e,$9e,$90,$94,$94,$4c,$90,$41,$89,$7a,$9e,$90,$94,$43,$88,$6d,$90,$41,$52,$85,$89,$56,$9e,$90,$94,$89,$49,$89,$46,$90,$89,$55,$9e,$89,$94,$41,$85,$89,$41,$55,$9e,$9e,$88,$94,$94,$41,$55,$89,$70,$88,$7c,$89,$41,$43,$9e,$88,$94,$6c,$89,$61,$88,$89,$7c,$85,$49,$9e,$88,$94,$41,$4e,$89,$6f,$88,$89,$41,$4c,$9e,$9e,$9e,$8e,$40,$80,$29,$b9,$00,$bd,$94,$94,$59,$88,$79,$9e,$88,$94,$41,$51,$85,$41,$61,$9e,$89,$94,$41,$49,$85,$89,$6b,$9e,$85,$94,$89,$68,$88,$89,$6e,$9e,$9e,$8e,$89,$7f,$7d,$7f,$80,$5a,$ba,$00,$bd,$94,$94,$94,$89,$70,$88,$5e,$9e,$88,$94,$7d,$85,$89,$41,$5a,$9e,$92,$94,$41,$44,$89,$89,$72,$92,$41,$4b,$88,$89,$41,$56,$9e,$85,$94,$89,$41,$4e,$92,$67,$92,$41,$59,$9e,$9e,$92,$94,$94,$89,$7c,$92,$51,$9e,$85,$94,$4a,$89,$41,$4b,$92,$89,$41,$58,$89,$89,$41,$48,$9e,$85,$94,$43,$88,$89,$79,$92,$89,$59,$89,$89,$48,$9e,$9e,$9e,$8e,$5e,$58,$5f,$80,$46,$bb,$00,$bd,$94,$94,$94,$89,$41,$58,$89,$89,$65,$88,$5d,$9e,$88,$94,$89,$41,$62,$85,$89,$41,$4c,$88,$66,$88,$41,$46,$9e,$9e,$88,$94,$94,$76,$89,$89,$5a,$9e,$90,$94,$41,$60,$85,$89,$65,$89,$89,$49,$9e,$88,$94,$89,$70,$88,$6c,$85,$54,$85,$89,$58,$9e,$9e,$9e,$8e,$41,$76,$7e,$80,$27,$bc,$00,$bd,$94,$94,$47,$88,$4c,$9e,$89,$94,$89,$41,$54,$90,$41,$41,$90,$56,$9e,$89,$94,$89,$7c,$90,$41,$47,$85,$89,$41,$42,$9e,$9e,$8e,$41,$4a,$53,$80,$29,$bd,$00,$bd,$94,$94,$89,$79,$88,$89,$5e,$88,$43,$89,$47,$9e,$88,$94,$89,$55,$88,$41,$42,$90,$89,$5b,$9e,$89,$94,$41,$61,$90,$4d,$85,$40,$9e,$9e,$8e,$89,$76,$80,$10,$be,$00,$bd,$94,$89,$6e,$88,$41,$88,$59,$9e,$8e,$89,$54,$80,$21,$bf,$00,$bd,$94,$94,$5f,$88,$89,$5f,$88,$41,$45,$89,$48,$9e,$85,$94,$89,$41,$61,$85,$41,$44,$9e,$9e,$8e,$89,$41,$62,$4e,$74,$80,$13,$c0,$00,$bd,$94,$89,$41,$52,$89,$72,$89,$89,$49,$9e,$8e,$89,$41,$7b,$80,$21,$c1,$00,$bd,$94,$94,$89,$5a,$88,$77,$9e,$89,$94,$41,$60,$89,$4c,$88,$60,$9e,$89,$94,$89,$4e,$90,$50,$9e,$9e,$8e,$89,$41,$67,$80,$21,$c2,$00,$bd,$94,$94,$52,$91,$41,$55,$85,$40,$85,$68,$9e,$89,$94,$89,$7c,$85,$89,$41,$4f,$91,$5f,$9e,$9e,$8e,$89,$41,$4a,$4d,$80,$3c,$c3,$00,$bd,$94,$94,$89,$6d,$89,$89,$41,$58,$89,$89,$7d,$9e,$91,$94,$89,$64,$85,$41,$43,$85,$64,$85,$7b,$9e,$89,$94,$41,$5f,$85,$5b,$89,$71,$89,$89,$41,$60,$9e,$89,$94,$41,$42,$91,$40,$89,$6c,$85,$7b,$9e,$9e,$8e,$89,$53,$62,$70,$42,$80,$6b,$c4,$00,$bd,$94,$94,$94,$41,$4b,$90,$53,$89,$89,$65,$90,$89,$5e,$9e,$88,$94,$89,$41,$59,$89,$89,$41,$40,$90,$41,$5f,$89,$41,$53,$9e,$9e,$89,$94,$94,$89,$41,$52,$85,$4c,$88,$89,$48,$9e,$90,$94,$89,$74,$85,$89,$41,$43,$89,$89,$5b,$9e,$85,$94,$89,$7d,$89,$7c,$90,$89,$6c,$9e,$9e,$85,$94,$94,$89,$41,$55,$90,$41,$5e,$9e,$89,$94,$89,$41,$41,$88,$89,$6a,$85,$89,$41,$43,$88,$89,$69,$9e,$9e,$9e,$8e,$89,$41,$46,$49,$68,$7f,$7c,$80,$3a,$c5,$00,$bd,$94,$94,$41,$50,$85,$89,$79,$9e,$88,$94,$41,$62,$85,$89,$41,$55,$92,$89,$67,$88,$89,$41,$53,$9e,$85,$94,$41,$60,$88,$41,$43,$85,$89,$41,$4f,$9e,$88,$94,$89,$5e,$89,$69,$92,$45,$9e,$9e,$8e,$89,$42,$67,$4b,$69,$44,$80,$6a,$c6,$00,$bd,$94,$94,$94,$89,$45,$88,$52,$90,$89,$41,$46,$9e,$90,$94,$5a,$89,$53,$9e,$88,$94,$77,$89,$53,$9e,$89,$94,$41,$42,$85,$89,$5d,$89,$89,$41,$42,$9e,$9e,$89,$94,$94,$74,$88,$89,$5a,$89,$41,$46,$9e,$89,$94,$89,$7a,$88,$63,$85,$89,$41,$43,$90,$41,$64,$9e,$9e,$89,$94,$94,$75,$88,$89,$41,$45,$90,$5a,$88,$45,$9e,$89,$94,$89,$52,$85,$64,$88,$44,$9e,$89,$94,$89,$58,$90,$89,$5c,$90,$43,$9e,$9e,$9e,$8e,$89,$49,$64,$80,$14,$c7,$00,$bd,$94,$41,$43,$89,$89,$41,$5f,$85,$89,$69,$9e,$8e,$89,$7b,$74,$80,$81,$c8,$00,$bd,$94,$94,$94,$62,$90,$72,$88,$41,$49,$9e,$90,$94,$40,$90,$62,$9e,$85,$94,$7c,$88,$89,$6f,$89,$44,$85,$7a,$9e,$85,$94,$5e,$89,$4a,$89,$89,$41,$45,$9e,$9e,$88,$94,$94,$79,$90,$41,$47,$88,$53,$90,$89,$41,$63,$9e,$90,$94,$89,$60,$90,$89,$45,$9e,$90,$94,$89,$41,$5b,$88,$89,$55,$85,$41,$46,$89,$89,$4f,$9e,$9e,$88,$94,$94,$89,$4c,$88,$89,$5c,$85,$4c,$9e,$90,$94,$89,$4c,$90,$89,$6b,$88,$41,$54,$9e,$88,$94,$6b,$90,$89,$41,$48,$9e,$88,$94,$78,$88,$89,$76,$90,$89,$54,$89,$89,$41,$54,$9e,$9e,$9e,$8e,$40,$80,$23,$c9,$00,$bd,$94,$94,$89,$62,$89,$89,$41,$5d,$85,$89,$44,$9e,$89,$94,$41,$43,$88,$55,$9e,$89,$94,$54,$85,$58,$9e,$9e,$8e,$89,$4f,$4e,$80,$67,$ca,$00,$bd,$94,$94,$94,$89,$59,$89,$41,$5d,$85,$89,$41,$5d,$9e,$91,$94,$89,$77,$89,$89,$71,$88,$46,$91,$46,$9e,$85,$94,$48,$91,$70,$85,$89,$41,$50,$88,$89,$46,$9e,$9e,$85,$94,$94,$89,$5c,$91,$41,$4c,$89,$89,$6e,$9e,$88,$94,$69,$89,$89,$41,$63,$85,$56,$85,$89,$41,$4f,$9e,$88,$94,$7f,$88,$44,$88,$7b,$85,$41,$49,$9e,$88,$94,$89,$41,$88,$41,$4e,$88,$44,$91,$89,$55,$9e,$9e,$9e,$8e,$43,$66,$51,$71,$5e,$58,$80,$00
Listing for file "/home/paulr/Projects/dax-basic/source/testprogram/basic.asm"
   16 00:7910 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 		.block 		4096
   17 00:8910 -  -  -  -  EndTestInstance:
   18 00:8910 -  -  -  -  		
   19 00:8910 -  -  -  -  ; ***************************************************************************************
   20 00:8910 -  -  -  -  ;
   21 00:8910 -  -  -  -  ;									Changes and Updates
   22 00:8910 -  -  -  -  ;
   23 00:8910 -  -  -  -  ; ***************************************************************************************
   24 00:8910 -  -  -  -  ;
   25 00:8910 -  -  -  -  ;		Date			Notes
   26 00:8910 -  -  -  -  ;		==== 			=====
   27 00:8910 -  -  -  -  ;
   28 00:8910 -  -  -  -  ; ***************************************************************************************
Listing for file "_build.asm"
   50 00:8910 -  -  -  -  FinalAddress:
